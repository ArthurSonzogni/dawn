{
  'basic_suites': {
    'dawn_end2end_swangle_gtests': {
      'dawn_end2end_swangle_tests': {
        'args': [
          '--backend=opengles',
          '--use-angle=swiftshader',
          '--enable-toggles=gl_force_es_31_and_no_extensions',
        ],
        'mixins': [
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
        'swarming': {
          'shards': 2,
        },
        'test': 'dawn_end2end_tests',
      },
    },
    'dawn_wire_trace_end2end_sws_gtests': {
      'dawn_wire_trace_end2end_sws_tests': {
        'args': [
          '--adapter-vendor-id=0x1AE0',
          '--use-wire',
          '--wire-trace-dir=${ISOLATED_OUTDIR}/clusterfuzz',
        ],
        'mixins': [
          'result_adapter_gtest_json',
          'wire_trace_merge',
        ],
        'test': 'dawn_end2end_tests',
      },
    },
    'dawn_end2end_real_hardware_gtests': {
      'dawn_end2end_implicit_sync_tests': {
        'args': [
          '--enable-implicit-device-sync',
        ],
        'mixins': [
          'dawn_end2end_real_hardware_gtests_common_args',
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
        'test': 'dawn_end2end_tests',
      },
      'dawn_end2end_skip_validation_tests': {
        'args': [
          '--enable-toggles=skip_validation',
        ],
        'mixins': [
          'dawn_end2end_real_hardware_gtests_common_args',
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
        'test': 'dawn_end2end_tests',
      },
      'dawn_end2end_tests': {
        'mixins': [
          'dawn_end2end_real_hardware_gtests_common_args',
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
      },
      'dawn_end2end_validation_layers_tests': {
        'args': [
          '--enable-backend-validation',
        ],
        'mixins': [
          'dawn_end2end_real_hardware_gtests_common_args',
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
        'test': 'dawn_end2end_tests',
      },
      'dawn_end2end_wire_tests': {
        'args': [
          '--use-wire',
        ],
        'mixins': [
          'dawn_end2end_real_hardware_gtests_common_args',
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
        'test': 'dawn_end2end_tests',
      },
    },
    'dawn_end2end_sws_gtests': {
      'dawn_end2end_sws_tests': {
        'args': [
          '--adapter-vendor-id=0x1AE0',
        ],
        'mixins': [
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
        'swarming': {
          'shards': 3,
        },
        'test': 'dawn_end2end_tests',
      },
    },
    'dawn_end2end_warp_gtests': {
      'dawn_end2end_warp_tests': {
        'args': [
          '--adapter-vendor-id=0x1414',
        ],
        'mixins': [
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
        'test': 'dawn_end2end_tests',
        'swarming': {
          # Very slow on debug builds.
          'shards': 6,
        },
      },
    },
    'dawn_node_cts_sws_tests': {
      'dawn_node_sws_cts': {
        'args': [
          '-backend',
          'vulkan',
          '-adapter',
          'SwiftShader',
          'webgpu:api,operation,adapter,requestDevice:default:*',
        ],
        'mixins': [
          'result_adapter_single',
          'true_noop_merge',
        ],
        'test': 'dawn_node_cts',
      },
    },
    'dawn_node_cts_win_software_tests': {
      'dawn_node_software_d3d12_cts': {
        'args': [
          '-backend',
          'd3d12',
          '-adapter',
          'Microsoft Basic Render Driver',
          'webgpu:api,operation,adapter,requestDevice:default:*',
        ],
        'mixins': [
          'result_adapter_single',
          'true_noop_merge',
        ],
        'test': 'dawn_node_cts',
      },
    },
    'dawn_real_hardware_perf_tests': {
      # This is run as a gtest instead of an isolated script since on the bots
      # these are used more as a smoke test/to ensure that they continue to run
      # rather than for actual perf results.
      'dawn_perf_tests': {
        'args': [
          "--test-launcher-print-test-stdio=always",
          "--test-launcher-jobs=1",
          "--test-launcher-retry-limit=0",
          # Tell the tests to only run one step for faster iteration.
          "--override-steps=1",
        ],
        'mixins': [
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
      },
    },
    'dawn_unit_gtests': {
      'dawn_unittests': {
        'mixins': [
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
      },
    },
    'dawn_wire_trace_unit_gtests': {
      'dawn_wire_trace_unittests': {
        'args': [
          '--use-wire',
          '--wire-trace-dir=${ISOLATED_OUTDIR}/clusterfuzz',
        ],
        'mixins': [
          'result_adapter_gtest_json',
          'wire_trace_merge',
        ],
        'test': 'dawn_unittests',
      },
    },
    'dawn_wire_unit_gtests': {
      'dawn_wire_unittests': {
        'args': [
          '--use-wire',
        ],
        'mixins': [
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
        'test': 'dawn_unittests',
      },
    },
    'tint_fuzzer_corpus_check_tests': {
      'tint_wgsl_fuzzer_corpus_check_tests': {
        'args': [
          '-check',
          '--append-cwd-as-build',
        ],
        'mixins': [
          'result_adapter_single',
          'true_noop_merge',
        ],
        'test': 'fuzzer_corpus_tests',
      },
      'tint_ir_fuzzer_corpus_check_tests': {
        'args': [
          '-check',
          '-ir',
          '--append-cwd-as-build',
        ],
        'mixins': [
          'result_adapter_single',
          'true_noop_merge',
        ],
        'test': 'fuzzer_corpus_tests',
      },
    },
    'tint_fuzzer_corpus_generate_tests': {
      'tint_wgsl_fuzzer_corpus_generate_tests': {
        'args': [
          '-generate',
          '-out',
          '${ISOLATED_OUTDIR}/clusterfuzz',
          '--append-cwd-as-build',
        ],
        'mixins': [
          'result_adapter_single',
          'tint_wgsl_merge',
        ],
        'test': 'fuzzer_corpus_tests',
      },
      'tint_ir_fuzzer_corpus_generate_tests': {
        'args': [
          '-generate',
          '-out',
          '${ISOLATED_OUTDIR}/clusterfuzz',
          '-ir',
          '--append-cwd-as-build',
        ],
        'mixins': [
          'result_adapter_single',
          'tint_ir_merge',
        ],
        'test': 'fuzzer_corpus_tests',
      },
    },
    'tint_unit_gtests': {
      'tint_unittests': {
        'mixins': [
          'result_adapter_gtest_json',
          'true_noop_merge',
        ],
      },
    },
  },
  'compound_suites': {
    'real_hardware_gtests': [
      'dawn_end2end_real_hardware_gtests',
      'dawn_real_hardware_perf_tests',
    ],
    'swiftshader_gtests': [
      'dawn_end2end_swangle_gtests',
      'dawn_end2end_sws_gtests',
      'dawn_unit_gtests',
      'dawn_wire_unit_gtests',
      'tint_unit_gtests',
    ],
    # Same as swiftshader_gtests but with the addition of WARP end2end tests.
    'win_software_renderer_gtests': [
      'dawn_end2end_swangle_gtests',
      'dawn_end2end_sws_gtests',
      'dawn_end2end_warp_gtests',
      'dawn_unit_gtests',
      'dawn_wire_unit_gtests',
      'tint_unit_gtests',
    ],
    'wire_trace_gtests': [
      'dawn_wire_trace_end2end_sws_gtests',
      'dawn_wire_trace_unit_gtests',
    ],
  },
}
