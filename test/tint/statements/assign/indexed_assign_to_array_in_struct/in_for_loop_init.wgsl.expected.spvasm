; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 76
; Schema: 0
               OpCapability Shader
         %42 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpMemberName %uniforms_block_tint_explicit_layout 0 "inner"
               OpName %uniforms_block_tint_explicit_layout "uniforms_block_tint_explicit_layout"
               OpName %main "main"
               OpMemberName %InnerS 0 "v"
               OpName %InnerS "InnerS"
               OpName %v "v"
               OpMemberName %OuterS 0 "a1"
               OpName %OuterS "OuterS"
               OpName %s1 "s1"
               OpName %i "i"
               OpName %tint_loop_idx "tint_loop_idx"
               OpName %tint_low_inc "tint_low_inc"
               OpName %tint_carry "tint_carry"
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %uniforms_block_tint_explicit_layout 0 Offset 0
               OpDecorate %uniforms_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 1
               OpDecorate %1 Binding 4
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%uniforms_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_uniforms_block_tint_explicit_layout = OpTypePointer Uniform %uniforms_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_uniforms_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
         %10 = OpTypeFunction %void
        %int = OpTypeInt 32 1
     %InnerS = OpTypeStruct %int
%_ptr_Function_InnerS = OpTypePointer Function %InnerS
         %16 = OpConstantNull %InnerS
     %uint_8 = OpConstant %uint 8
%_arr_InnerS_uint_8 = OpTypeArray %InnerS %uint_8
     %OuterS = OpTypeStruct %_arr_InnerS_uint_8
%_ptr_Function_OuterS = OpTypePointer Function %OuterS
         %22 = OpConstantNull %OuterS
%_ptr_Function_int = OpTypePointer Function %int
      %int_0 = OpConstant %int 0
     %v2uint = OpTypeVector %uint 2
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
%uint_4294967295 = OpConstant %uint 4294967295
         %34 = OpConstantComposite %v2uint %uint_4294967295 %uint_4294967295
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
     %uint_7 = OpConstant %uint 7
         %48 = OpConstantNull %v2uint
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
      %int_4 = OpConstant %int 4
%_ptr_Function_uint = OpTypePointer Function %uint
      %int_1 = OpConstant %int 1
       %main = OpFunction %void None %10
         %11 = OpLabel
          %v = OpVariable %_ptr_Function_InnerS Function %16
         %s1 = OpVariable %_ptr_Function_OuterS Function %22
          %i = OpVariable %_ptr_Function_int Function
%tint_loop_idx = OpVariable %_ptr_Function_v2uint Function
               OpStore %i %int_0
               OpBranch %26
         %26 = OpLabel
               OpStore %tint_loop_idx %34
         %36 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %39 = OpLoad %v4uint %36 None
         %40 = OpCompositeExtract %uint %39 0
         %41 = OpExtInst %uint %42 UMin %40 %uint_7
         %44 = OpAccessChain %_ptr_Function_InnerS %s1 %uint_0 %41
         %45 = OpLoad %InnerS %v None
               OpStore %44 %45 None
               OpBranch %29
         %29 = OpLabel
               OpLoopMerge %30 %28 None
               OpBranch %27
         %27 = OpLabel
         %46 = OpLoad %v2uint %tint_loop_idx None
         %47 = OpIEqual %v2bool %46 %48
         %51 = OpAll %bool %47
               OpSelectionMerge %52 None
               OpBranchConditional %51 %53 %52
         %53 = OpLabel
               OpBranch %30
         %52 = OpLabel
         %54 = OpLoad %int %i None
         %55 = OpSLessThan %bool %54 %int_4
               OpSelectionMerge %57 None
               OpBranchConditional %55 %57 %58
         %58 = OpLabel
               OpBranch %30
         %57 = OpLabel
               OpBranch %28
         %28 = OpLabel
         %59 = OpAccessChain %_ptr_Function_uint %tint_loop_idx %uint_0
         %61 = OpLoad %uint %59 None
%tint_low_inc = OpISub %uint %61 %uint_1
         %63 = OpAccessChain %_ptr_Function_uint %tint_loop_idx %uint_0
               OpStore %63 %tint_low_inc None
         %64 = OpIEqual %bool %tint_low_inc %uint_4294967295
 %tint_carry = OpSelect %uint %64 %uint_1 %uint_0
         %66 = OpAccessChain %_ptr_Function_uint %tint_loop_idx %uint_1
         %67 = OpLoad %uint %66 None
         %68 = OpISub %uint %67 %tint_carry
         %69 = OpAccessChain %_ptr_Function_uint %tint_loop_idx %uint_1
               OpStore %69 %68 None
         %70 = OpLoad %int %i None
         %71 = OpBitcast %uint %70
         %72 = OpBitcast %uint %int_1
         %74 = OpIAdd %uint %71 %72
         %75 = OpBitcast %int %74
               OpStore %i %75 None
               OpBranch %29
         %30 = OpLabel
               OpReturn
               OpFunctionEnd
