; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 441
; Schema: 0
               OpCapability Shader
         %71 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %main_local_invocation_id_Input %main_global_invocation_id_Input %main_local_invocation_index_Input
               OpExecutionMode %main LocalSize 16 16 1
               OpMemberName %Matrix_tint_explicit_layout 0 "numbers"
               OpName %Matrix_tint_explicit_layout "Matrix_tint_explicit_layout"
               OpName %firstMatrix "firstMatrix"
               OpName %secondMatrix "secondMatrix"
               OpName %resultMatrix "resultMatrix"
               OpMemberName %uniforms_block_tint_explicit_layout 0 "inner"
               OpName %uniforms_block_tint_explicit_layout "uniforms_block_tint_explicit_layout"
               OpName %mm_Asub "mm_Asub"
               OpName %mm_Bsub "mm_Bsub"
               OpName %main_local_invocation_id_Input "main_local_invocation_id_Input"
               OpName %main_global_invocation_id_Input "main_global_invocation_id_Input"
               OpName %main_local_invocation_index_Input "main_local_invocation_index_Input"
               OpName %mm_readA "mm_readA"
               OpName %row "row"
               OpName %col "col"
               OpName %return_value "return_value"
               OpName %continue_execution "continue_execution"
               OpName %result "result"
               OpName %mm_readB "mm_readB"
               OpName %row_0 "row"
               OpName %col_0 "col"
               OpName %return_value_0 "return_value"
               OpName %continue_execution_0 "continue_execution"
               OpName %result_0 "result"
               OpName %mm_write "mm_write"
               OpName %row_1 "row"
               OpName %col_1 "col"
               OpName %value "value"
               OpName %index "index"
               OpName %main_inner "main_inner"
               OpName %local_id "local_id"
               OpName %global_id "global_id"
               OpName %tint_local_index "tint_local_index"
               OpName %tileRow "tileRow"
               OpName %tileCol "tileCol"
               OpName %globalRow "globalRow"
               OpName %globalCol "globalCol"
               OpName %numTiles "numTiles"
               OpName %acc "acc"
               OpName %ACached "ACached"
               OpName %BCached "BCached"
               OpName %ColPerThreadA "ColPerThreadA"
               OpName %tileColA "tileColA"
               OpName %ColPerThreadA "RowPerThreadB"
               OpName %tileRowB "tileRowB"
               OpName %index_0 "index"
               OpName %t "t"
               OpName %innerRow "innerRow"
               OpName %innerRow_0 "innerRow"
               OpName %innerRow_1 "innerRow"
               OpName %k "k"
               OpName %innerCol "innerCol"
               OpName %index_1 "index"
               OpName %innerCol_0 "innerCol"
               OpName %inputRow "inputRow"
               OpName %inputCol "inputCol"
               OpName %innerCol_1 "innerCol"
               OpName %inputRow_0 "inputRow"
               OpName %inputCol_0 "inputCol"
               OpName %inner "inner"
               OpName %innerRow_2 "innerRow"
               OpName %innerCol_2 "innerCol"
               OpName %index_2 "index"
               OpName %tint_div_u32 "tint_div_u32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %main "main"
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %Matrix_tint_explicit_layout 0 Offset 0
               OpDecorate %Matrix_tint_explicit_layout Block
               OpDecorate %firstMatrix DescriptorSet 0
               OpDecorate %firstMatrix Binding 0
               OpDecorate %firstMatrix NonWritable
               OpDecorate %secondMatrix DescriptorSet 0
               OpDecorate %secondMatrix Binding 1
               OpDecorate %secondMatrix NonWritable
               OpDecorate %resultMatrix DescriptorSet 0
               OpDecorate %resultMatrix Binding 2
               OpDecorate %resultMatrix Coherent
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %uniforms_block_tint_explicit_layout 0 Offset 0
               OpDecorate %uniforms_block_tint_explicit_layout Block
               OpDecorate %9 DescriptorSet 0
               OpDecorate %9 Binding 3
               OpDecorate %9 NonWritable
               OpDecorate %main_local_invocation_id_Input BuiltIn LocalInvocationId
               OpDecorate %main_global_invocation_id_Input BuiltIn GlobalInvocationId
               OpDecorate %main_local_invocation_index_Input BuiltIn LocalInvocationIndex
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
%Matrix_tint_explicit_layout = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer_Matrix_tint_explicit_layout = OpTypePointer StorageBuffer %Matrix_tint_explicit_layout
%firstMatrix = OpVariable %_ptr_StorageBuffer_Matrix_tint_explicit_layout StorageBuffer
%secondMatrix = OpVariable %_ptr_StorageBuffer_Matrix_tint_explicit_layout StorageBuffer
%_ptr_StorageBuffer_Matrix_tint_explicit_layout_0 = OpTypePointer StorageBuffer %Matrix_tint_explicit_layout
%resultMatrix = OpVariable %_ptr_StorageBuffer_Matrix_tint_explicit_layout_0 StorageBuffer
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%uniforms_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_uniforms_block_tint_explicit_layout = OpTypePointer Uniform %uniforms_block_tint_explicit_layout
          %9 = OpVariable %_ptr_Uniform_uniforms_block_tint_explicit_layout Uniform
    %uint_64 = OpConstant %uint 64
%_arr_float_uint_64 = OpTypeArray %float %uint_64
%_arr__arr_float_uint_64_uint_64 = OpTypeArray %_arr_float_uint_64 %uint_64
%_ptr_Workgroup__arr__arr_float_uint_64_uint_64 = OpTypePointer Workgroup %_arr__arr_float_uint_64_uint_64
    %mm_Asub = OpVariable %_ptr_Workgroup__arr__arr_float_uint_64_uint_64 Workgroup
    %mm_Bsub = OpVariable %_ptr_Workgroup__arr__arr_float_uint_64_uint_64 Workgroup
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%main_local_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
%main_global_invocation_id_Input = OpVariable %_ptr_Input_v3uint Input
%_ptr_Input_uint = OpTypePointer Input %uint
%main_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
         %31 = OpTypeFunction %float %uint %uint
%_ptr_Function_float = OpTypePointer Function %float
         %35 = OpConstantNull %float
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
       %true = OpConstantTrue %bool
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
      %false = OpConstantFalse %bool
%_ptr_StorageBuffer__runtimearr_float = OpTypePointer StorageBuffer %_runtimearr_float
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
    %float_0 = OpConstant %float 0
       %void = OpTypeVoid
        %116 = OpTypeFunction %void %uint %uint %float
%_ptr_StorageBuffer__runtimearr_float_0 = OpTypePointer StorageBuffer %_runtimearr_float
%_ptr_StorageBuffer_float_0 = OpTypePointer StorageBuffer %float
        %148 = OpTypeFunction %void %v3uint %v3uint %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
%ColPerThreadA = OpConstant %uint 4
    %uint_16 = OpConstant %uint 16
%_arr_float_uint_16 = OpTypeArray %float %uint_16
%_ptr_Function__arr_float_uint_16 = OpTypePointer Function %_arr_float_uint_16
        %180 = OpConstantNull %_arr_float_uint_16
%_arr_float_ColPerThreadA = OpTypeArray %float %ColPerThreadA
%_ptr_Function__arr_float_ColPerThreadA = OpTypePointer Function %_arr_float_ColPerThreadA
        %185 = OpConstantNull %_arr_float_ColPerThreadA
  %uint_4096 = OpConstant %uint 4096
%_ptr_Workgroup_float = OpTypePointer Workgroup %float
   %uint_256 = OpConstant %uint 256
%_ptr_Function_uint = OpTypePointer Function %uint
    %uint_15 = OpConstant %uint 15
    %uint_63 = OpConstant %uint 63
     %uint_3 = OpConstant %uint 3
        %429 = OpTypeFunction %uint %uint %uint
        %435 = OpTypeFunction %void
   %mm_readA = OpFunction %float None %31
        %row = OpFunctionParameter %uint
        %col = OpFunctionParameter %uint
         %32 = OpLabel
%return_value = OpVariable %_ptr_Function_float Function %35
%continue_execution = OpVariable %_ptr_Function_bool Function
               OpStore %continue_execution %true
         %40 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
         %43 = OpLoad %v4uint %40 None
         %44 = OpCompositeExtract %uint %43 0
         %45 = OpULessThan %bool %row %44
               OpSelectionMerge %46 None
               OpBranchConditional %45 %47 %48
         %47 = OpLabel
         %58 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
         %59 = OpLoad %v4uint %58 None
         %60 = OpCompositeExtract %uint %59 1
         %50 = OpULessThan %bool %col %60
               OpBranch %46
         %48 = OpLabel
               OpBranch %46
         %46 = OpLabel
         %49 = OpPhi %bool %50 %47 %false %48
               OpSelectionMerge %52 None
               OpBranchConditional %49 %53 %52
         %53 = OpLabel
         %61 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
         %62 = OpLoad %v4uint %61 None
         %63 = OpCompositeExtract %uint %62 1
         %64 = OpIMul %uint %row %63
         %65 = OpIAdd %uint %64 %col
         %66 = OpAccessChain %_ptr_StorageBuffer__runtimearr_float %firstMatrix %uint_0
         %68 = OpArrayLength %uint %firstMatrix 0
         %69 = OpISub %uint %68 %uint_1
         %70 = OpExtInst %uint %71 UMin %65 %69
         %72 = OpAccessChain %_ptr_StorageBuffer_float %firstMatrix %uint_0 %70
     %result = OpLoad %float %72 None
               OpStore %continue_execution %false None
               OpStore %return_value %result None
               OpBranch %52
         %52 = OpLabel
         %54 = OpLoad %bool %continue_execution None
               OpSelectionMerge %55 None
               OpBranchConditional %54 %56 %55
         %56 = OpLabel
               OpStore %return_value %float_0 None
               OpBranch %55
         %55 = OpLabel
         %57 = OpLoad %float %return_value None
               OpReturnValue %57
               OpFunctionEnd
   %mm_readB = OpFunction %float None %31
      %row_0 = OpFunctionParameter %uint
      %col_0 = OpFunctionParameter %uint
         %79 = OpLabel
%return_value_0 = OpVariable %_ptr_Function_float Function %35
%continue_execution_0 = OpVariable %_ptr_Function_bool Function
               OpStore %continue_execution_0 %true
         %82 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
         %83 = OpLoad %v4uint %82 None
         %84 = OpCompositeExtract %uint %83 1
         %85 = OpULessThan %bool %row_0 %84
               OpSelectionMerge %86 None
               OpBranchConditional %85 %87 %88
         %87 = OpLabel
         %97 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
         %98 = OpLoad %v4uint %97 None
         %99 = OpCompositeExtract %uint %98 2
         %90 = OpULessThan %bool %col_0 %99
               OpBranch %86
         %88 = OpLabel
               OpBranch %86
         %86 = OpLabel
         %89 = OpPhi %bool %90 %87 %false %88
               OpSelectionMerge %91 None
               OpBranchConditional %89 %92 %91
         %92 = OpLabel
        %100 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
        %101 = OpLoad %v4uint %100 None
        %102 = OpCompositeExtract %uint %101 2
        %103 = OpIMul %uint %row_0 %102
        %104 = OpIAdd %uint %103 %col_0
        %105 = OpAccessChain %_ptr_StorageBuffer__runtimearr_float %secondMatrix %uint_0
        %106 = OpArrayLength %uint %secondMatrix 0
        %107 = OpISub %uint %106 %uint_1
        %108 = OpExtInst %uint %71 UMin %104 %107
        %109 = OpAccessChain %_ptr_StorageBuffer_float %secondMatrix %uint_0 %108
   %result_0 = OpLoad %float %109 None
               OpStore %continue_execution_0 %false None
               OpStore %return_value_0 %result_0 None
               OpBranch %91
         %91 = OpLabel
         %93 = OpLoad %bool %continue_execution_0 None
               OpSelectionMerge %94 None
               OpBranchConditional %93 %95 %94
         %95 = OpLabel
               OpStore %return_value_0 %float_0 None
               OpBranch %94
         %94 = OpLabel
         %96 = OpLoad %float %return_value_0 None
               OpReturnValue %96
               OpFunctionEnd
   %mm_write = OpFunction %void None %116
      %row_1 = OpFunctionParameter %uint
      %col_1 = OpFunctionParameter %uint
      %value = OpFunctionParameter %float
        %117 = OpLabel
        %118 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
        %119 = OpLoad %v4uint %118 None
        %120 = OpCompositeExtract %uint %119 0
        %121 = OpULessThan %bool %row_1 %120
               OpSelectionMerge %122 None
               OpBranchConditional %121 %123 %124
        %123 = OpLabel
        %129 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
        %130 = OpLoad %v4uint %129 None
        %131 = OpCompositeExtract %uint %130 2
        %126 = OpULessThan %bool %col_1 %131
               OpBranch %122
        %124 = OpLabel
               OpBranch %122
        %122 = OpLabel
        %125 = OpPhi %bool %126 %123 %false %124
               OpSelectionMerge %127 None
               OpBranchConditional %125 %128 %127
        %128 = OpLabel
        %132 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
        %133 = OpLoad %v4uint %132 None
        %134 = OpCompositeExtract %uint %133 2
        %135 = OpIMul %uint %row_1 %134
      %index = OpIAdd %uint %col_1 %135
        %137 = OpAccessChain %_ptr_StorageBuffer__runtimearr_float_0 %resultMatrix %uint_0
        %139 = OpArrayLength %uint %resultMatrix 0
        %140 = OpISub %uint %139 %uint_1
        %141 = OpExtInst %uint %71 UMin %index %140
        %142 = OpAccessChain %_ptr_StorageBuffer_float_0 %resultMatrix %uint_0 %141
               OpStore %142 %value None
               OpBranch %127
        %127 = OpLabel
               OpReturn
               OpFunctionEnd
 %main_inner = OpFunction %void None %148
   %local_id = OpFunctionParameter %v3uint
  %global_id = OpFunctionParameter %v3uint
%tint_local_index = OpFunctionParameter %uint
        %149 = OpLabel
        %acc = OpVariable %_ptr_Function__arr_float_uint_16 Function %180
    %ACached = OpVariable %_ptr_Function_float Function %35
    %BCached = OpVariable %_ptr_Function__arr_float_ColPerThreadA Function %185
    %index_0 = OpVariable %_ptr_Function_uint Function
          %t = OpVariable %_ptr_Function_uint Function
   %innerRow = OpVariable %_ptr_Function_uint Function
 %innerRow_0 = OpVariable %_ptr_Function_uint Function
 %innerRow_1 = OpVariable %_ptr_Function_uint Function
          %k = OpVariable %_ptr_Function_uint Function
   %innerCol = OpVariable %_ptr_Function_uint Function
 %innerCol_0 = OpVariable %_ptr_Function_uint Function
 %innerCol_1 = OpVariable %_ptr_Function_uint Function
      %inner = OpVariable %_ptr_Function_uint Function
 %innerRow_2 = OpVariable %_ptr_Function_uint Function
 %innerCol_2 = OpVariable %_ptr_Function_uint Function
               OpBranch %150
        %150 = OpLabel
               OpBranch %153
        %153 = OpLabel
        %155 = OpPhi %uint %tint_local_index %150 %156 %152
               OpLoopMerge %154 %152 None
               OpBranch %151
        %151 = OpLabel
        %205 = OpUGreaterThanEqual %bool %155 %uint_4096
               OpSelectionMerge %207 None
               OpBranchConditional %205 %208 %207
        %208 = OpLabel
               OpBranch %154
        %207 = OpLabel
        %209 = OpUMod %uint %155 %uint_64
        %210 = OpUDiv %uint %155 %uint_64
        %211 = OpAccessChain %_ptr_Workgroup_float %mm_Asub %210 %209
               OpStore %211 %float_0 None
        %213 = OpUMod %uint %155 %uint_64
        %214 = OpUDiv %uint %155 %uint_64
        %215 = OpAccessChain %_ptr_Workgroup_float %mm_Bsub %214 %213
               OpStore %215 %float_0 None
               OpBranch %152
        %152 = OpLabel
        %156 = OpIAdd %uint %155 %uint_256
               OpBranch %153
        %154 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
        %160 = OpCompositeExtract %uint %local_id 1
    %tileRow = OpIMul %uint %160 %ColPerThreadA
        %163 = OpCompositeExtract %uint %local_id 0
    %tileCol = OpIMul %uint %163 %ColPerThreadA
        %165 = OpCompositeExtract %uint %global_id 1
  %globalRow = OpIMul %uint %165 %ColPerThreadA
        %167 = OpCompositeExtract %uint %global_id 0
  %globalCol = OpIMul %uint %167 %ColPerThreadA
        %169 = OpAccessChain %_ptr_Uniform_v4uint %9 %uint_0 %uint_0
        %170 = OpLoad %v4uint %169 None
        %171 = OpCompositeExtract %uint %170 1
        %172 = OpISub %uint %171 %uint_1
        %173 = OpFunctionCall %uint %tint_div_u32 %172 %uint_64
   %numTiles = OpIAdd %uint %173 %uint_1
               OpBranch %186
        %186 = OpLabel
               OpStore %index_0 %uint_0
               OpBranch %189
        %189 = OpLabel
               OpLoopMerge %190 %188 None
               OpBranch %187
        %187 = OpLabel
        %219 = OpLoad %uint %index_0 None
        %220 = OpULessThan %bool %219 %uint_16
               OpSelectionMerge %221 None
               OpBranchConditional %220 %221 %222
        %222 = OpLabel
               OpBranch %190
        %221 = OpLabel
        %223 = OpLoad %uint %index_0 None
        %224 = OpExtInst %uint %71 UMin %223 %uint_15
        %226 = OpAccessChain %_ptr_Function_float %acc %224
               OpStore %226 %float_0 None
               OpBranch %188
        %188 = OpLabel
        %227 = OpLoad %uint %index_0 None
        %228 = OpIAdd %uint %227 %uint_1
               OpStore %index_0 %228 None
               OpBranch %189
        %190 = OpLabel
        %191 = OpCompositeExtract %uint %local_id 0
   %tileColA = OpIMul %uint %191 %ColPerThreadA
        %193 = OpCompositeExtract %uint %local_id 1
   %tileRowB = OpIMul %uint %193 %ColPerThreadA
               OpBranch %195
        %195 = OpLabel
               OpStore %t %uint_0
               OpBranch %198
        %198 = OpLabel
               OpLoopMerge %199 %197 None
               OpBranch %196
        %196 = OpLabel
        %230 = OpLoad %uint %t None
        %231 = OpULessThan %bool %230 %numTiles
               OpSelectionMerge %232 None
               OpBranchConditional %231 %232 %233
        %233 = OpLabel
               OpBranch %199
        %232 = OpLabel
               OpBranch %234
        %234 = OpLabel
               OpStore %innerRow_0 %uint_0
               OpBranch %237
        %237 = OpLabel
               OpLoopMerge %238 %236 None
               OpBranch %235
        %235 = OpLabel
        %266 = OpLoad %uint %innerRow_0 None
        %267 = OpULessThan %bool %266 %ColPerThreadA
               OpSelectionMerge %268 None
               OpBranchConditional %267 %268 %269
        %269 = OpLabel
               OpBranch %238
        %268 = OpLabel
               OpBranch %270
        %270 = OpLabel
               OpStore %innerCol_0 %uint_0
               OpBranch %273
        %273 = OpLabel
               OpLoopMerge %274 %272 None
               OpBranch %271
        %271 = OpLabel
        %326 = OpLoad %uint %innerCol_0 None
        %327 = OpULessThan %bool %326 %ColPerThreadA
               OpSelectionMerge %328 None
               OpBranchConditional %327 %328 %329
        %329 = OpLabel
               OpBranch %274
        %328 = OpLabel
        %330 = OpLoad %uint %innerRow_0 None
   %inputRow = OpIAdd %uint %tileRow %330
        %332 = OpLoad %uint %innerCol_0 None
   %inputCol = OpIAdd %uint %tileColA %332
        %334 = OpExtInst %uint %71 UMin %inputRow %uint_63
        %336 = OpExtInst %uint %71 UMin %inputCol %uint_63
        %337 = OpAccessChain %_ptr_Workgroup_float %mm_Asub %334 %336
        %338 = OpLoad %uint %innerRow_0 None
        %339 = OpIAdd %uint %globalRow %338
        %340 = OpLoad %uint %t None
        %341 = OpIMul %uint %340 %uint_64
        %342 = OpIAdd %uint %341 %inputCol
        %343 = OpFunctionCall %float %mm_readA %339 %342
               OpStore %337 %343 None
               OpBranch %272
        %272 = OpLabel
        %344 = OpLoad %uint %innerCol_0 None
        %345 = OpIAdd %uint %344 %uint_1
               OpStore %innerCol_0 %345 None
               OpBranch %273
        %274 = OpLabel
               OpBranch %236
        %236 = OpLabel
        %275 = OpLoad %uint %innerRow_0 None
        %276 = OpIAdd %uint %275 %uint_1
               OpStore %innerRow_0 %276 None
               OpBranch %237
        %238 = OpLabel
               OpBranch %239
        %239 = OpLabel
               OpStore %innerRow_1 %uint_0
               OpBranch %242
        %242 = OpLabel
               OpLoopMerge %243 %241 None
               OpBranch %240
        %240 = OpLabel
        %278 = OpLoad %uint %innerRow_1 None
        %279 = OpULessThan %bool %278 %ColPerThreadA
               OpSelectionMerge %280 None
               OpBranchConditional %279 %280 %281
        %281 = OpLabel
               OpBranch %243
        %280 = OpLabel
               OpBranch %282
        %282 = OpLabel
               OpStore %innerCol_1 %uint_0
               OpBranch %285
        %285 = OpLabel
               OpLoopMerge %286 %284 None
               OpBranch %283
        %283 = OpLabel
        %347 = OpLoad %uint %innerCol_1 None
        %348 = OpULessThan %bool %347 %ColPerThreadA
               OpSelectionMerge %349 None
               OpBranchConditional %348 %349 %350
        %350 = OpLabel
               OpBranch %286
        %349 = OpLabel
        %351 = OpLoad %uint %innerRow_1 None
 %inputRow_0 = OpIAdd %uint %tileRowB %351
        %353 = OpLoad %uint %innerCol_1 None
 %inputCol_0 = OpIAdd %uint %tileCol %353
        %355 = OpLoad %uint %innerCol_1 None
        %356 = OpExtInst %uint %71 UMin %355 %uint_63
        %357 = OpExtInst %uint %71 UMin %inputCol_0 %uint_63
        %358 = OpAccessChain %_ptr_Workgroup_float %mm_Bsub %356 %357
        %359 = OpLoad %uint %t None
        %360 = OpIMul %uint %359 %uint_64
        %361 = OpIAdd %uint %360 %inputRow_0
        %362 = OpLoad %uint %innerCol_1 None
        %363 = OpIAdd %uint %globalCol %362
        %364 = OpFunctionCall %float %mm_readB %361 %363
               OpStore %358 %364 None
               OpBranch %284
        %284 = OpLabel
        %365 = OpLoad %uint %innerCol_1 None
        %366 = OpIAdd %uint %365 %uint_1
               OpStore %innerCol_1 %366 None
               OpBranch %285
        %286 = OpLabel
               OpBranch %241
        %241 = OpLabel
        %287 = OpLoad %uint %innerRow_1 None
        %288 = OpIAdd %uint %287 %uint_1
               OpStore %innerRow_1 %288 None
               OpBranch %242
        %243 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
               OpBranch %245
        %245 = OpLabel
               OpStore %k %uint_0
               OpBranch %248
        %248 = OpLabel
               OpLoopMerge %249 %247 None
               OpBranch %246
        %246 = OpLabel
        %290 = OpLoad %uint %k None
        %291 = OpULessThan %bool %290 %uint_64
               OpSelectionMerge %292 None
               OpBranchConditional %291 %292 %293
        %293 = OpLabel
               OpBranch %249
        %292 = OpLabel
               OpBranch %294
        %294 = OpLabel
               OpStore %inner %uint_0
               OpBranch %297
        %297 = OpLabel
               OpLoopMerge %298 %296 None
               OpBranch %295
        %295 = OpLabel
        %368 = OpLoad %uint %inner None
        %369 = OpULessThan %bool %368 %ColPerThreadA
               OpSelectionMerge %370 None
               OpBranchConditional %369 %370 %371
        %371 = OpLabel
               OpBranch %298
        %370 = OpLabel
        %372 = OpLoad %uint %inner None
        %373 = OpExtInst %uint %71 UMin %372 %uint_3
        %375 = OpAccessChain %_ptr_Function_float %BCached %373
        %376 = OpLoad %uint %k None
        %377 = OpLoad %uint %inner None
        %378 = OpIAdd %uint %tileCol %377
        %379 = OpExtInst %uint %71 UMin %376 %uint_63
        %380 = OpExtInst %uint %71 UMin %378 %uint_63
        %381 = OpAccessChain %_ptr_Workgroup_float %mm_Bsub %379 %380
        %382 = OpLoad %float %381 None
               OpStore %375 %382 None
               OpBranch %296
        %296 = OpLabel
        %383 = OpLoad %uint %inner None
        %384 = OpIAdd %uint %383 %uint_1
               OpStore %inner %384 None
               OpBranch %297
        %298 = OpLabel
               OpBranch %299
        %299 = OpLabel
               OpStore %innerRow_2 %uint_0
               OpBranch %302
        %302 = OpLabel
               OpLoopMerge %303 %301 None
               OpBranch %300
        %300 = OpLabel
        %386 = OpLoad %uint %innerRow_2 None
        %387 = OpULessThan %bool %386 %ColPerThreadA
               OpSelectionMerge %388 None
               OpBranchConditional %387 %388 %389
        %389 = OpLabel
               OpBranch %303
        %388 = OpLabel
        %390 = OpLoad %uint %innerRow_2 None
        %391 = OpIAdd %uint %tileRow %390
        %392 = OpLoad %uint %k None
        %393 = OpExtInst %uint %71 UMin %391 %uint_63
        %394 = OpExtInst %uint %71 UMin %392 %uint_63
        %395 = OpAccessChain %_ptr_Workgroup_float %mm_Asub %393 %394
        %396 = OpLoad %float %395 None
               OpStore %ACached %396 None
               OpBranch %397
        %397 = OpLabel
               OpStore %innerCol_2 %uint_0
               OpBranch %400
        %400 = OpLabel
               OpLoopMerge %401 %399 None
               OpBranch %398
        %398 = OpLabel
        %405 = OpLoad %uint %innerCol_2 None
        %406 = OpULessThan %bool %405 %ColPerThreadA
               OpSelectionMerge %407 None
               OpBranchConditional %406 %407 %408
        %408 = OpLabel
               OpBranch %401
        %407 = OpLabel
        %409 = OpLoad %uint %innerRow_2 None
        %410 = OpIMul %uint %409 %ColPerThreadA
        %411 = OpLoad %uint %innerCol_2 None
    %index_2 = OpIAdd %uint %410 %411
        %413 = OpExtInst %uint %71 UMin %index_2 %uint_15
        %414 = OpAccessChain %_ptr_Function_float %acc %413
        %415 = OpExtInst %uint %71 UMin %index_2 %uint_15
        %416 = OpAccessChain %_ptr_Function_float %acc %415
        %417 = OpLoad %float %416 None
        %418 = OpLoad %float %ACached None
        %419 = OpLoad %uint %innerCol_2 None
        %420 = OpExtInst %uint %71 UMin %419 %uint_3
        %421 = OpAccessChain %_ptr_Function_float %BCached %420
        %422 = OpLoad %float %421 None
        %423 = OpFMul %float %418 %422
        %424 = OpFAdd %float %417 %423
               OpStore %414 %424 None
               OpBranch %399
        %399 = OpLabel
        %425 = OpLoad %uint %innerCol_2 None
        %426 = OpIAdd %uint %425 %uint_1
               OpStore %innerCol_2 %426 None
               OpBranch %400
        %401 = OpLabel
               OpBranch %301
        %301 = OpLabel
        %402 = OpLoad %uint %innerRow_2 None
        %403 = OpIAdd %uint %402 %uint_1
               OpStore %innerRow_2 %403 None
               OpBranch %302
        %303 = OpLabel
               OpBranch %247
        %247 = OpLabel
        %304 = OpLoad %uint %k None
        %305 = OpIAdd %uint %304 %uint_1
               OpStore %k %305 None
               OpBranch %248
        %249 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
               OpBranch %197
        %197 = OpLabel
        %251 = OpLoad %uint %t None
        %252 = OpIAdd %uint %251 %uint_1
               OpStore %t %252 None
               OpBranch %198
        %199 = OpLabel
               OpBranch %200
        %200 = OpLabel
               OpStore %innerRow %uint_0
               OpBranch %203
        %203 = OpLabel
               OpLoopMerge %204 %202 None
               OpBranch %201
        %201 = OpLabel
        %254 = OpLoad %uint %innerRow None
        %255 = OpULessThan %bool %254 %ColPerThreadA
               OpSelectionMerge %256 None
               OpBranchConditional %255 %256 %257
        %257 = OpLabel
               OpBranch %204
        %256 = OpLabel
               OpBranch %258
        %258 = OpLabel
               OpStore %innerCol %uint_0
               OpBranch %261
        %261 = OpLabel
               OpLoopMerge %262 %260 None
               OpBranch %259
        %259 = OpLabel
        %307 = OpLoad %uint %innerCol None
        %308 = OpULessThan %bool %307 %ColPerThreadA
               OpSelectionMerge %309 None
               OpBranchConditional %308 %309 %310
        %310 = OpLabel
               OpBranch %262
        %309 = OpLabel
        %311 = OpLoad %uint %innerRow None
        %312 = OpIMul %uint %311 %ColPerThreadA
        %313 = OpLoad %uint %innerCol None
    %index_1 = OpIAdd %uint %312 %313
        %315 = OpLoad %uint %innerRow None
        %316 = OpIAdd %uint %globalRow %315
        %317 = OpLoad %uint %innerCol None
        %318 = OpIAdd %uint %globalCol %317
        %319 = OpExtInst %uint %71 UMin %index_1 %uint_15
        %320 = OpAccessChain %_ptr_Function_float %acc %319
        %321 = OpLoad %float %320 None
        %322 = OpFunctionCall %void %mm_write %316 %318 %321
               OpBranch %260
        %260 = OpLabel
        %323 = OpLoad %uint %innerCol None
        %324 = OpIAdd %uint %323 %uint_1
               OpStore %innerCol %324 None
               OpBranch %261
        %262 = OpLabel
               OpBranch %202
        %202 = OpLabel
        %263 = OpLoad %uint %innerRow None
        %264 = OpIAdd %uint %263 %uint_1
               OpStore %innerRow %264 None
               OpBranch %203
        %204 = OpLabel
               OpReturn
               OpFunctionEnd
%tint_div_u32 = OpFunction %uint None %429
        %lhs = OpFunctionParameter %uint
        %rhs = OpFunctionParameter %uint
        %430 = OpLabel
        %431 = OpIEqual %bool %rhs %uint_0
        %432 = OpSelect %uint %431 %uint_1 %rhs
        %433 = OpUDiv %uint %lhs %432
               OpReturnValue %433
               OpFunctionEnd
       %main = OpFunction %void None %435
        %436 = OpLabel
        %437 = OpLoad %v3uint %main_local_invocation_id_Input None
        %438 = OpLoad %v3uint %main_global_invocation_id_Input None
        %439 = OpLoad %uint %main_local_invocation_index_Input None
        %440 = OpFunctionCall %void %main_inner %437 %438 %439
               OpReturn
               OpFunctionEnd
