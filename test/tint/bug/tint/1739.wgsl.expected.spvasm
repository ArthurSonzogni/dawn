; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 424
; Schema: 0
               OpCapability Shader
         %45 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpName %t_plane0 "t_plane0"
               OpName %t_plane1 "t_plane1"
               OpMemberName %t_params_block_tint_explicit_layout 0 "inner"
               OpName %t_params_block_tint_explicit_layout "t_params_block_tint_explicit_layout"
               OpName %outImage "outImage"
               OpName %main "main"
               OpMemberName %tint_ExternalTextureParams 0 "numPlanes"
               OpMemberName %tint_ExternalTextureParams 1 "doYuvToRgbConversionOnly"
               OpMemberName %tint_ExternalTextureParams 2 "yuvToRgbConversionMatrix"
               OpMemberName %tint_GammaTransferParams 0 "G"
               OpMemberName %tint_GammaTransferParams 1 "A"
               OpMemberName %tint_GammaTransferParams 2 "B"
               OpMemberName %tint_GammaTransferParams 3 "C"
               OpMemberName %tint_GammaTransferParams 4 "D"
               OpMemberName %tint_GammaTransferParams 5 "E"
               OpMemberName %tint_GammaTransferParams 6 "F"
               OpMemberName %tint_GammaTransferParams 7 "padding"
               OpName %tint_GammaTransferParams "tint_GammaTransferParams"
               OpMemberName %tint_ExternalTextureParams 3 "gammaDecodeParams"
               OpMemberName %tint_ExternalTextureParams 4 "gammaEncodeParams"
               OpMemberName %tint_ExternalTextureParams 5 "gamutConversionMatrix"
               OpMemberName %tint_ExternalTextureParams 6 "sampleTransform"
               OpMemberName %tint_ExternalTextureParams 7 "loadTransform"
               OpMemberName %tint_ExternalTextureParams 8 "samplePlane0RectMin"
               OpMemberName %tint_ExternalTextureParams 9 "samplePlane0RectMax"
               OpMemberName %tint_ExternalTextureParams 10 "samplePlane1RectMin"
               OpMemberName %tint_ExternalTextureParams 11 "samplePlane1RectMax"
               OpMemberName %tint_ExternalTextureParams 12 "apparentSize"
               OpMemberName %tint_ExternalTextureParams 13 "plane1CoordFactor"
               OpName %tint_ExternalTextureParams "tint_ExternalTextureParams"
               OpName %red "red"
               OpName %green "green"
               OpName %tint_TextureLoadExternal "tint_TextureLoadExternal"
               OpName %plane_0 "plane_0"
               OpName %plane_1 "plane_1"
               OpName %params "params"
               OpName %coords "coords"
               OpName %tint_GammaCorrection "tint_GammaCorrection"
               OpName %v "v"
               OpName %params_0 "params"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %t_plane0 DescriptorSet 0
               OpDecorate %t_plane0 Binding 0
               OpDecorate %t_plane1 DescriptorSet 0
               OpDecorate %t_plane1 Binding 2
               OpDecorate %_arr_v4uint_uint_17 ArrayStride 16
               OpMemberDecorate %t_params_block_tint_explicit_layout 0 Offset 0
               OpDecorate %t_params_block_tint_explicit_layout Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 3
               OpDecorate %6 NonWritable
               OpDecorate %outImage DescriptorSet 0
               OpDecorate %outImage Binding 1
               OpDecorate %outImage NonReadable
      %float = OpTypeFloat 32
          %3 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_3 = OpTypePointer UniformConstant %3
   %t_plane0 = OpVariable %_ptr_UniformConstant_3 UniformConstant
   %t_plane1 = OpVariable %_ptr_UniformConstant_3 UniformConstant
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_17 = OpConstant %uint 17
%_arr_v4uint_uint_17 = OpTypeArray %v4uint %uint_17
%t_params_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_17
%_ptr_Uniform_t_params_block_tint_explicit_layout = OpTypePointer Uniform %t_params_block_tint_explicit_layout
          %6 = OpVariable %_ptr_Uniform_t_params_block_tint_explicit_layout Uniform
         %15 = OpTypeImage %float 2D 0 0 0 2 Rgba8
%_ptr_UniformConstant_15 = OpTypePointer UniformConstant %15
   %outImage = OpVariable %_ptr_UniformConstant_15 UniformConstant
       %void = OpTypeVoid
         %18 = OpTypeFunction %void
    %v4float = OpTypeVector %float 4
%mat3v4float = OpTypeMatrix %v4float 3
%tint_GammaTransferParams = OpTypeStruct %float %float %float %float %float %float %float %uint
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
     %v2uint = OpTypeVector %uint 2
%tint_ExternalTextureParams = OpTypeStruct %uint %uint %mat3v4float %tint_GammaTransferParams %tint_GammaTransferParams %mat3v3float %mat3v2float %mat3v2float %v2float %v2float %v2float %v2float %v2uint %v2float
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
         %36 = OpConstantComposite %v2uint %uint_1 %uint_1
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
     %int_10 = OpConstant %int 10
         %40 = OpConstantComposite %v2int %int_10 %int_10
%_ptr_Function_v4float = OpTypePointer Function %v4float
         %53 = OpConstantNull %v2int
     %int_70 = OpConstant %int 70
    %int_118 = OpConstant %int 118
         %61 = OpConstantComposite %v2int %int_70 %int_118
      %int_1 = OpConstant %int 1
      %int_0 = OpConstant %int 0
         %70 = OpConstantComposite %v2int %int_1 %int_0
         %77 = OpTypeFunction %v4float %3 %3 %tint_ExternalTextureParams %v2uint
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
        %125 = OpTypeFunction %v3float %v3float %tint_GammaTransferParams
     %v3bool = OpTypeVector %bool 3
        %153 = OpTypeFunction %tint_ExternalTextureParams %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
    %uint_64 = OpConstant %uint 64
    %uint_96 = OpConstant %uint 96
   %uint_128 = OpConstant %uint 128
   %uint_176 = OpConstant %uint 176
   %uint_200 = OpConstant %uint 200
   %uint_224 = OpConstant %uint 224
     %v2bool = OpTypeVector %bool 2
   %uint_232 = OpConstant %uint 232
   %uint_240 = OpConstant %uint 240
   %uint_248 = OpConstant %uint 248
   %uint_256 = OpConstant %uint 256
   %uint_264 = OpConstant %uint 264
        %274 = OpTypeFunction %mat3v4float %uint
    %uint_32 = OpConstant %uint 32
        %293 = OpTypeFunction %tint_GammaTransferParams %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
    %uint_20 = OpConstant %uint 20
    %uint_24 = OpConstant %uint 24
    %uint_28 = OpConstant %uint 28
        %364 = OpTypeFunction %mat3v3float %uint
     %v3uint = OpTypeVector %uint 3
        %386 = OpTypeFunction %mat3v2float %uint
       %main = OpFunction %void None %18
         %19 = OpLabel
        %red = OpVariable %_ptr_Function_v4float Function
      %green = OpVariable %_ptr_Function_v4float Function
         %20 = OpLoad %3 %t_plane0 None
         %21 = OpLoad %3 %t_plane1 None
         %22 = OpFunctionCall %tint_ExternalTextureParams %32 %uint_0
         %34 = OpCompositeExtract %v2uint %22 12
         %35 = OpIAdd %v2uint %34 %36
         %38 = OpISub %v2uint %35 %36
         %39 = OpBitcast %v2uint %40
         %44 = OpExtInst %v2uint %45 UMin %39 %38
         %46 = OpFunctionCall %v4float %tint_TextureLoadExternal %20 %21 %22 %44
               OpStore %red %46
         %50 = OpLoad %15 %outImage None
         %51 = OpLoad %v4float %red None
               OpImageWrite %50 %53 %51 None
         %54 = OpLoad %3 %t_plane0 None
         %55 = OpLoad %3 %t_plane1 None
         %56 = OpFunctionCall %tint_ExternalTextureParams %32 %uint_0
         %57 = OpCompositeExtract %v2uint %56 12
         %58 = OpIAdd %v2uint %57 %36
         %59 = OpISub %v2uint %58 %36
         %60 = OpBitcast %v2uint %61
         %64 = OpExtInst %v2uint %45 UMin %60 %59
         %65 = OpFunctionCall %v4float %tint_TextureLoadExternal %54 %55 %56 %64
               OpStore %green %65
         %67 = OpLoad %15 %outImage None
         %68 = OpLoad %v4float %green None
               OpImageWrite %67 %70 %68 None
               OpReturn
               OpFunctionEnd
%tint_TextureLoadExternal = OpFunction %v4float None %77
    %plane_0 = OpFunctionParameter %3
    %plane_1 = OpFunctionParameter %3
     %params = OpFunctionParameter %tint_ExternalTextureParams
     %coords = OpFunctionParameter %v2uint
         %78 = OpLabel
         %79 = OpCompositeExtract %uint %params 1
         %80 = OpCompositeExtract %mat3v4float %params 2
         %81 = OpCompositeExtract %mat3v2float %params 7
         %82 = OpCompositeExtract %v2uint %params 12
         %83 = OpCompositeExtract %v2float %params 13
         %84 = OpExtInst %v2uint %45 UMin %coords %82
         %85 = OpConvertUToF %v2float %84
         %86 = OpCompositeConstruct %v3float %85 %float_1
         %88 = OpMatrixTimesVector %v2float %81 %86
         %89 = OpExtInst %v2float %45 RoundEven %88
         %90 = OpConvertFToU %v2uint %89
         %91 = OpCompositeExtract %uint %params 0
         %92 = OpIEqual %bool %91 %uint_1
               OpSelectionMerge %94 None
               OpBranchConditional %92 %95 %96
         %95 = OpLabel
        %109 = OpImageFetch %v4float %plane_0 %90 Lod %uint_0
         %98 = OpVectorShuffle %v3float %109 %109 0 1 2
        %101 = OpCompositeExtract %float %109 3
               OpBranch %94
         %96 = OpLabel
        %110 = OpImageFetch %v4float %plane_0 %90 Lod %uint_0
        %111 = OpCompositeExtract %float %110 0
        %112 = OpFMul %v2float %89 %83
        %113 = OpConvertFToU %v2uint %112
        %114 = OpImageFetch %v4float %plane_1 %113 Lod %uint_0
        %115 = OpVectorShuffle %v2float %114 %114 0 1
        %116 = OpCompositeConstruct %v4float %111 %115 %float_1
         %99 = OpVectorTimesMatrix %v3float %116 %80
               OpBranch %94
         %94 = OpLabel
         %97 = OpPhi %v3float %98 %95 %99 %96
        %100 = OpPhi %float %101 %95 %float_1 %96
        %102 = OpIEqual %bool %79 %uint_0
               OpSelectionMerge %103 None
               OpBranchConditional %102 %104 %105
        %104 = OpLabel
        %117 = OpCompositeExtract %tint_GammaTransferParams %params 3
        %118 = OpCompositeExtract %tint_GammaTransferParams %params 4
        %119 = OpCompositeExtract %mat3v3float %params 5
        %120 = OpFunctionCall %v3float %tint_GammaCorrection %97 %117
        %122 = OpMatrixTimesVector %v3float %119 %120
        %107 = OpFunctionCall %v3float %tint_GammaCorrection %122 %118
               OpBranch %103
        %105 = OpLabel
               OpBranch %103
        %103 = OpLabel
        %106 = OpPhi %v3float %107 %104 %97 %105
        %108 = OpCompositeConstruct %v4float %106 %100
               OpReturnValue %108
               OpFunctionEnd
%tint_GammaCorrection = OpFunction %v3float None %125
          %v = OpFunctionParameter %v3float
   %params_0 = OpFunctionParameter %tint_GammaTransferParams
        %126 = OpLabel
        %127 = OpCompositeExtract %float %params_0 0
        %128 = OpCompositeExtract %float %params_0 1
        %129 = OpCompositeExtract %float %params_0 2
        %130 = OpCompositeExtract %float %params_0 3
        %131 = OpCompositeExtract %float %params_0 4
        %132 = OpCompositeExtract %float %params_0 5
        %133 = OpCompositeExtract %float %params_0 6
        %134 = OpCompositeConstruct %v3float %127 %127 %127
        %135 = OpCompositeConstruct %v3float %131 %131 %131
        %136 = OpExtInst %v3float %45 FAbs %v
        %137 = OpExtInst %v3float %45 FSign %v
        %138 = OpFOrdLessThan %v3bool %136 %135
        %140 = OpVectorTimesScalar %v3float %136 %130
        %141 = OpCompositeConstruct %v3float %133 %133 %133
        %142 = OpFAdd %v3float %140 %141
        %143 = OpFMul %v3float %137 %142
        %144 = OpVectorTimesScalar %v3float %136 %128
        %145 = OpCompositeConstruct %v3float %129 %129 %129
        %146 = OpFAdd %v3float %144 %145
        %147 = OpExtInst %v3float %45 Pow %146 %134
        %148 = OpCompositeConstruct %v3float %132 %132 %132
        %149 = OpFAdd %v3float %147 %148
        %150 = OpFMul %v3float %137 %149
        %151 = OpSelect %v3float %138 %143 %150
               OpReturnValue %151
               OpFunctionEnd
         %32 = OpFunction %tint_ExternalTextureParams None %153
%start_byte_offset = OpFunctionParameter %uint
        %154 = OpLabel
        %155 = OpUDiv %uint %start_byte_offset %uint_16
        %157 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %155
        %159 = OpBitwiseAnd %uint %start_byte_offset %uint_15
        %161 = OpShiftRightLogical %uint %159 %uint_2
        %163 = OpLoad %v4uint %157 None
        %164 = OpVectorExtractDynamic %uint %163 %161
        %165 = OpIAdd %uint %uint_4 %start_byte_offset
        %167 = OpUDiv %uint %165 %uint_16
        %168 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %167
        %169 = OpBitwiseAnd %uint %165 %uint_15
        %170 = OpShiftRightLogical %uint %169 %uint_2
        %171 = OpLoad %v4uint %168 None
        %172 = OpVectorExtractDynamic %uint %171 %170
        %173 = OpIAdd %uint %uint_16 %start_byte_offset
        %174 = OpFunctionCall %mat3v4float %175 %173
        %176 = OpIAdd %uint %uint_64 %start_byte_offset
        %178 = OpFunctionCall %tint_GammaTransferParams %179 %176
        %180 = OpIAdd %uint %uint_96 %start_byte_offset
        %182 = OpFunctionCall %tint_GammaTransferParams %179 %180
        %183 = OpIAdd %uint %uint_128 %start_byte_offset
        %185 = OpFunctionCall %mat3v3float %186 %183
        %187 = OpIAdd %uint %uint_176 %start_byte_offset
        %189 = OpFunctionCall %mat3v2float %190 %187
        %191 = OpIAdd %uint %uint_200 %start_byte_offset
        %193 = OpFunctionCall %mat3v2float %190 %191
        %194 = OpIAdd %uint %uint_224 %start_byte_offset
        %196 = OpUDiv %uint %194 %uint_16
        %197 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %196
        %198 = OpBitwiseAnd %uint %194 %uint_15
        %199 = OpShiftRightLogical %uint %198 %uint_2
        %200 = OpLoad %v4uint %197 None
        %201 = OpVectorShuffle %v2uint %200 %200 2 3
        %202 = OpVectorShuffle %v2uint %200 %200 0 1
        %203 = OpIEqual %bool %199 %uint_2
        %205 = OpCompositeConstruct %v2bool %203 %203
        %206 = OpSelect %v2uint %205 %201 %202
        %207 = OpBitcast %v2float %206
        %208 = OpIAdd %uint %uint_232 %start_byte_offset
        %210 = OpUDiv %uint %208 %uint_16
        %211 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %210
        %212 = OpBitwiseAnd %uint %208 %uint_15
        %213 = OpShiftRightLogical %uint %212 %uint_2
        %214 = OpLoad %v4uint %211 None
        %215 = OpVectorShuffle %v2uint %214 %214 2 3
        %216 = OpVectorShuffle %v2uint %214 %214 0 1
        %217 = OpIEqual %bool %213 %uint_2
        %218 = OpCompositeConstruct %v2bool %217 %217
        %219 = OpSelect %v2uint %218 %215 %216
        %220 = OpBitcast %v2float %219
        %221 = OpIAdd %uint %uint_240 %start_byte_offset
        %223 = OpUDiv %uint %221 %uint_16
        %224 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %223
        %225 = OpBitwiseAnd %uint %221 %uint_15
        %226 = OpShiftRightLogical %uint %225 %uint_2
        %227 = OpLoad %v4uint %224 None
        %228 = OpVectorShuffle %v2uint %227 %227 2 3
        %229 = OpVectorShuffle %v2uint %227 %227 0 1
        %230 = OpIEqual %bool %226 %uint_2
        %231 = OpCompositeConstruct %v2bool %230 %230
        %232 = OpSelect %v2uint %231 %228 %229
        %233 = OpBitcast %v2float %232
        %234 = OpIAdd %uint %uint_248 %start_byte_offset
        %236 = OpUDiv %uint %234 %uint_16
        %237 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %236
        %238 = OpBitwiseAnd %uint %234 %uint_15
        %239 = OpShiftRightLogical %uint %238 %uint_2
        %240 = OpLoad %v4uint %237 None
        %241 = OpVectorShuffle %v2uint %240 %240 2 3
        %242 = OpVectorShuffle %v2uint %240 %240 0 1
        %243 = OpIEqual %bool %239 %uint_2
        %244 = OpCompositeConstruct %v2bool %243 %243
        %245 = OpSelect %v2uint %244 %241 %242
        %246 = OpBitcast %v2float %245
        %247 = OpIAdd %uint %uint_256 %start_byte_offset
        %249 = OpUDiv %uint %247 %uint_16
        %250 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %249
        %251 = OpBitwiseAnd %uint %247 %uint_15
        %252 = OpShiftRightLogical %uint %251 %uint_2
        %253 = OpLoad %v4uint %250 None
        %254 = OpVectorShuffle %v2uint %253 %253 2 3
        %255 = OpVectorShuffle %v2uint %253 %253 0 1
        %256 = OpIEqual %bool %252 %uint_2
        %257 = OpCompositeConstruct %v2bool %256 %256
        %258 = OpSelect %v2uint %257 %254 %255
        %259 = OpIAdd %uint %uint_264 %start_byte_offset
        %261 = OpUDiv %uint %259 %uint_16
        %262 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %261
        %263 = OpBitwiseAnd %uint %259 %uint_15
        %264 = OpShiftRightLogical %uint %263 %uint_2
        %265 = OpLoad %v4uint %262 None
        %266 = OpVectorShuffle %v2uint %265 %265 2 3
        %267 = OpVectorShuffle %v2uint %265 %265 0 1
        %268 = OpIEqual %bool %264 %uint_2
        %269 = OpCompositeConstruct %v2bool %268 %268
        %270 = OpSelect %v2uint %269 %266 %267
        %271 = OpBitcast %v2float %270
        %272 = OpCompositeConstruct %tint_ExternalTextureParams %164 %172 %174 %178 %182 %185 %189 %193 %207 %220 %233 %246 %258 %271
               OpReturnValue %272
               OpFunctionEnd
        %175 = OpFunction %mat3v4float None %274
%start_byte_offset_0 = OpFunctionParameter %uint
        %275 = OpLabel
        %276 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %277 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %276
        %278 = OpLoad %v4uint %277 None
        %279 = OpBitcast %v4float %278
        %280 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %281 = OpUDiv %uint %280 %uint_16
        %282 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %281
        %283 = OpLoad %v4uint %282 None
        %284 = OpBitcast %v4float %283
        %285 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %287 = OpUDiv %uint %285 %uint_16
        %288 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %287
        %289 = OpLoad %v4uint %288 None
        %290 = OpBitcast %v4float %289
        %291 = OpCompositeConstruct %mat3v4float %279 %284 %290
               OpReturnValue %291
               OpFunctionEnd
        %179 = OpFunction %tint_GammaTransferParams None %293
%start_byte_offset_1 = OpFunctionParameter %uint
        %294 = OpLabel
        %295 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %296 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %295
        %297 = OpBitwiseAnd %uint %start_byte_offset_1 %uint_15
        %298 = OpShiftRightLogical %uint %297 %uint_2
        %299 = OpLoad %v4uint %296 None
        %300 = OpVectorExtractDynamic %uint %299 %298
        %301 = OpBitcast %float %300
        %302 = OpIAdd %uint %uint_4 %start_byte_offset_1
        %303 = OpUDiv %uint %302 %uint_16
        %304 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %303
        %305 = OpBitwiseAnd %uint %302 %uint_15
        %306 = OpShiftRightLogical %uint %305 %uint_2
        %307 = OpLoad %v4uint %304 None
        %308 = OpVectorExtractDynamic %uint %307 %306
        %309 = OpBitcast %float %308
        %310 = OpIAdd %uint %uint_8 %start_byte_offset_1
        %312 = OpUDiv %uint %310 %uint_16
        %313 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %312
        %314 = OpBitwiseAnd %uint %310 %uint_15
        %315 = OpShiftRightLogical %uint %314 %uint_2
        %316 = OpLoad %v4uint %313 None
        %317 = OpVectorExtractDynamic %uint %316 %315
        %318 = OpBitcast %float %317
        %319 = OpIAdd %uint %uint_12 %start_byte_offset_1
        %321 = OpUDiv %uint %319 %uint_16
        %322 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %321
        %323 = OpBitwiseAnd %uint %319 %uint_15
        %324 = OpShiftRightLogical %uint %323 %uint_2
        %325 = OpLoad %v4uint %322 None
        %326 = OpVectorExtractDynamic %uint %325 %324
        %327 = OpBitcast %float %326
        %328 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %329 = OpUDiv %uint %328 %uint_16
        %330 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %329
        %331 = OpBitwiseAnd %uint %328 %uint_15
        %332 = OpShiftRightLogical %uint %331 %uint_2
        %333 = OpLoad %v4uint %330 None
        %334 = OpVectorExtractDynamic %uint %333 %332
        %335 = OpBitcast %float %334
        %336 = OpIAdd %uint %uint_20 %start_byte_offset_1
        %338 = OpUDiv %uint %336 %uint_16
        %339 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %338
        %340 = OpBitwiseAnd %uint %336 %uint_15
        %341 = OpShiftRightLogical %uint %340 %uint_2
        %342 = OpLoad %v4uint %339 None
        %343 = OpVectorExtractDynamic %uint %342 %341
        %344 = OpBitcast %float %343
        %345 = OpIAdd %uint %uint_24 %start_byte_offset_1
        %347 = OpUDiv %uint %345 %uint_16
        %348 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %347
        %349 = OpBitwiseAnd %uint %345 %uint_15
        %350 = OpShiftRightLogical %uint %349 %uint_2
        %351 = OpLoad %v4uint %348 None
        %352 = OpVectorExtractDynamic %uint %351 %350
        %353 = OpBitcast %float %352
        %354 = OpIAdd %uint %uint_28 %start_byte_offset_1
        %356 = OpUDiv %uint %354 %uint_16
        %357 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %356
        %358 = OpBitwiseAnd %uint %354 %uint_15
        %359 = OpShiftRightLogical %uint %358 %uint_2
        %360 = OpLoad %v4uint %357 None
        %361 = OpVectorExtractDynamic %uint %360 %359
        %362 = OpCompositeConstruct %tint_GammaTransferParams %301 %309 %318 %327 %335 %344 %353 %361
               OpReturnValue %362
               OpFunctionEnd
        %186 = OpFunction %mat3v3float None %364
%start_byte_offset_2 = OpFunctionParameter %uint
        %365 = OpLabel
        %366 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %367 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %366
        %368 = OpLoad %v4uint %367 None
        %369 = OpVectorShuffle %v3uint %368 %368 0 1 2
        %371 = OpBitcast %v3float %369
        %372 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %373 = OpUDiv %uint %372 %uint_16
        %374 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %373
        %375 = OpLoad %v4uint %374 None
        %376 = OpVectorShuffle %v3uint %375 %375 0 1 2
        %377 = OpBitcast %v3float %376
        %378 = OpIAdd %uint %uint_32 %start_byte_offset_2
        %379 = OpUDiv %uint %378 %uint_16
        %380 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %379
        %381 = OpLoad %v4uint %380 None
        %382 = OpVectorShuffle %v3uint %381 %381 0 1 2
        %383 = OpBitcast %v3float %382
        %384 = OpCompositeConstruct %mat3v3float %371 %377 %383
               OpReturnValue %384
               OpFunctionEnd
        %190 = OpFunction %mat3v2float None %386
%start_byte_offset_3 = OpFunctionParameter %uint
        %387 = OpLabel
        %388 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %389 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %388
        %390 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %391 = OpShiftRightLogical %uint %390 %uint_2
        %392 = OpLoad %v4uint %389 None
        %393 = OpVectorShuffle %v2uint %392 %392 2 3
        %394 = OpVectorShuffle %v2uint %392 %392 0 1
        %395 = OpIEqual %bool %391 %uint_2
        %396 = OpCompositeConstruct %v2bool %395 %395
        %397 = OpSelect %v2uint %396 %393 %394
        %398 = OpBitcast %v2float %397
        %399 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %400 = OpUDiv %uint %399 %uint_16
        %401 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %400
        %402 = OpBitwiseAnd %uint %399 %uint_15
        %403 = OpShiftRightLogical %uint %402 %uint_2
        %404 = OpLoad %v4uint %401 None
        %405 = OpVectorShuffle %v2uint %404 %404 2 3
        %406 = OpVectorShuffle %v2uint %404 %404 0 1
        %407 = OpIEqual %bool %403 %uint_2
        %408 = OpCompositeConstruct %v2bool %407 %407
        %409 = OpSelect %v2uint %408 %405 %406
        %410 = OpBitcast %v2float %409
        %411 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %412 = OpUDiv %uint %411 %uint_16
        %413 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %412
        %414 = OpBitwiseAnd %uint %411 %uint_15
        %415 = OpShiftRightLogical %uint %414 %uint_2
        %416 = OpLoad %v4uint %413 None
        %417 = OpVectorShuffle %v2uint %416 %416 2 3
        %418 = OpVectorShuffle %v2uint %416 %416 0 1
        %419 = OpIEqual %bool %415 %uint_2
        %420 = OpCompositeConstruct %v2bool %419 %419
        %421 = OpSelect %v2uint %420 %417 %418
        %422 = OpBitcast %v2float %421
        %423 = OpCompositeConstruct %mat3v2float %398 %410 %422
               OpReturnValue %423
               OpFunctionEnd
