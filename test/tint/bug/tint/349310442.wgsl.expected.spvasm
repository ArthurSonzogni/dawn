; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 397
; Schema: 0
               OpCapability Shader
         %41 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %i "i"
               OpExecutionMode %i LocalSize 1 1 1
               OpName %t_plane0 "t_plane0"
               OpName %t_plane1 "t_plane1"
               OpMemberName %t_params_block_tint_explicit_layout 0 "inner"
               OpName %t_params_block_tint_explicit_layout "t_params_block_tint_explicit_layout"
               OpName %i "i"
               OpMemberName %tint_ExternalTextureParams 0 "numPlanes"
               OpMemberName %tint_ExternalTextureParams 1 "doYuvToRgbConversionOnly"
               OpMemberName %tint_ExternalTextureParams 2 "yuvToRgbConversionMatrix"
               OpMemberName %tint_GammaTransferParams 0 "G"
               OpMemberName %tint_GammaTransferParams 1 "A"
               OpMemberName %tint_GammaTransferParams 2 "B"
               OpMemberName %tint_GammaTransferParams 3 "C"
               OpMemberName %tint_GammaTransferParams 4 "D"
               OpMemberName %tint_GammaTransferParams 5 "E"
               OpMemberName %tint_GammaTransferParams 6 "F"
               OpMemberName %tint_GammaTransferParams 7 "padding"
               OpName %tint_GammaTransferParams "tint_GammaTransferParams"
               OpMemberName %tint_ExternalTextureParams 3 "gammaDecodeParams"
               OpMemberName %tint_ExternalTextureParams 4 "gammaEncodeParams"
               OpMemberName %tint_ExternalTextureParams 5 "gamutConversionMatrix"
               OpMemberName %tint_ExternalTextureParams 6 "sampleTransform"
               OpMemberName %tint_ExternalTextureParams 7 "loadTransform"
               OpMemberName %tint_ExternalTextureParams 8 "samplePlane0RectMin"
               OpMemberName %tint_ExternalTextureParams 9 "samplePlane0RectMax"
               OpMemberName %tint_ExternalTextureParams 10 "samplePlane1RectMin"
               OpMemberName %tint_ExternalTextureParams 11 "samplePlane1RectMax"
               OpMemberName %tint_ExternalTextureParams 12 "apparentSize"
               OpMemberName %tint_ExternalTextureParams 13 "plane1CoordFactor"
               OpName %tint_ExternalTextureParams "tint_ExternalTextureParams"
               OpName %r "r"
               OpName %tint_TextureLoadExternal "tint_TextureLoadExternal"
               OpName %plane_0 "plane_0"
               OpName %plane_1 "plane_1"
               OpName %params "params"
               OpName %coords "coords"
               OpName %tint_GammaCorrection "tint_GammaCorrection"
               OpName %v "v"
               OpName %params_0 "params"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %t_plane0 DescriptorSet 0
               OpDecorate %t_plane0 Binding 0
               OpDecorate %t_plane1 DescriptorSet 0
               OpDecorate %t_plane1 Binding 1
               OpDecorate %_arr_v4uint_uint_17 ArrayStride 16
               OpMemberDecorate %t_params_block_tint_explicit_layout 0 Offset 0
               OpDecorate %t_params_block_tint_explicit_layout Block
               OpDecorate %6 DescriptorSet 0
               OpDecorate %6 Binding 2
               OpDecorate %6 NonWritable
      %float = OpTypeFloat 32
          %3 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_3 = OpTypePointer UniformConstant %3
   %t_plane0 = OpVariable %_ptr_UniformConstant_3 UniformConstant
   %t_plane1 = OpVariable %_ptr_UniformConstant_3 UniformConstant
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_17 = OpConstant %uint 17
%_arr_v4uint_uint_17 = OpTypeArray %v4uint %uint_17
%t_params_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_17
%_ptr_Uniform_t_params_block_tint_explicit_layout = OpTypePointer Uniform %t_params_block_tint_explicit_layout
          %6 = OpVariable %_ptr_Uniform_t_params_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
    %v4float = OpTypeVector %float 4
%mat3v4float = OpTypeMatrix %v4float 3
%tint_GammaTransferParams = OpTypeStruct %float %float %float %float %float %float %float %uint
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
     %v2uint = OpTypeVector %uint 2
%tint_ExternalTextureParams = OpTypeStruct %uint %uint %mat3v4float %tint_GammaTransferParams %tint_GammaTransferParams %mat3v3float %mat3v2float %mat3v2float %v2float %v2float %v2float %v2float %v2uint %v2float
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
         %33 = OpConstantComposite %v2uint %uint_1 %uint_1
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
         %37 = OpConstantNull %v2int
%_ptr_Function_v4float = OpTypePointer Function %v4float
         %50 = OpTypeFunction %v4float %3 %3 %tint_ExternalTextureParams %v2uint
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
         %98 = OpTypeFunction %v3float %v3float %tint_GammaTransferParams
     %v3bool = OpTypeVector %bool 3
        %126 = OpTypeFunction %tint_ExternalTextureParams %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
    %uint_64 = OpConstant %uint 64
    %uint_96 = OpConstant %uint 96
   %uint_128 = OpConstant %uint 128
   %uint_176 = OpConstant %uint 176
   %uint_200 = OpConstant %uint 200
   %uint_224 = OpConstant %uint 224
     %v2bool = OpTypeVector %bool 2
   %uint_232 = OpConstant %uint 232
   %uint_240 = OpConstant %uint 240
   %uint_248 = OpConstant %uint 248
   %uint_256 = OpConstant %uint 256
   %uint_264 = OpConstant %uint 264
        %247 = OpTypeFunction %mat3v4float %uint
    %uint_32 = OpConstant %uint 32
        %266 = OpTypeFunction %tint_GammaTransferParams %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
    %uint_20 = OpConstant %uint 20
    %uint_24 = OpConstant %uint 24
    %uint_28 = OpConstant %uint 28
        %337 = OpTypeFunction %mat3v3float %uint
     %v3uint = OpTypeVector %uint 3
        %359 = OpTypeFunction %mat3v2float %uint
          %i = OpFunction %void None %15
         %16 = OpLabel
          %r = OpVariable %_ptr_Function_v4float Function
         %17 = OpLoad %3 %t_plane0 None
         %18 = OpLoad %3 %t_plane1 None
         %19 = OpFunctionCall %tint_ExternalTextureParams %29 %uint_0
         %31 = OpCompositeExtract %v2uint %19 12
         %32 = OpIAdd %v2uint %31 %33
         %35 = OpISub %v2uint %32 %33
         %36 = OpBitcast %v2uint %37
         %40 = OpExtInst %v2uint %41 UMin %36 %35
         %42 = OpFunctionCall %v4float %tint_TextureLoadExternal %17 %18 %19 %40
               OpStore %r %42
               OpReturn
               OpFunctionEnd
%tint_TextureLoadExternal = OpFunction %v4float None %50
    %plane_0 = OpFunctionParameter %3
    %plane_1 = OpFunctionParameter %3
     %params = OpFunctionParameter %tint_ExternalTextureParams
     %coords = OpFunctionParameter %v2uint
         %51 = OpLabel
         %52 = OpCompositeExtract %uint %params 1
         %53 = OpCompositeExtract %mat3v4float %params 2
         %54 = OpCompositeExtract %mat3v2float %params 7
         %55 = OpCompositeExtract %v2uint %params 12
         %56 = OpCompositeExtract %v2float %params 13
         %57 = OpExtInst %v2uint %41 UMin %coords %55
         %58 = OpConvertUToF %v2float %57
         %59 = OpCompositeConstruct %v3float %58 %float_1
         %61 = OpMatrixTimesVector %v2float %54 %59
         %62 = OpExtInst %v2float %41 RoundEven %61
         %63 = OpConvertFToU %v2uint %62
         %64 = OpCompositeExtract %uint %params 0
         %65 = OpIEqual %bool %64 %uint_1
               OpSelectionMerge %67 None
               OpBranchConditional %65 %68 %69
         %68 = OpLabel
         %82 = OpImageFetch %v4float %plane_0 %63 Lod %uint_0
         %71 = OpVectorShuffle %v3float %82 %82 0 1 2
         %74 = OpCompositeExtract %float %82 3
               OpBranch %67
         %69 = OpLabel
         %83 = OpImageFetch %v4float %plane_0 %63 Lod %uint_0
         %84 = OpCompositeExtract %float %83 0
         %85 = OpFMul %v2float %62 %56
         %86 = OpConvertFToU %v2uint %85
         %87 = OpImageFetch %v4float %plane_1 %86 Lod %uint_0
         %88 = OpVectorShuffle %v2float %87 %87 0 1
         %89 = OpCompositeConstruct %v4float %84 %88 %float_1
         %72 = OpVectorTimesMatrix %v3float %89 %53
               OpBranch %67
         %67 = OpLabel
         %70 = OpPhi %v3float %71 %68 %72 %69
         %73 = OpPhi %float %74 %68 %float_1 %69
         %75 = OpIEqual %bool %52 %uint_0
               OpSelectionMerge %76 None
               OpBranchConditional %75 %77 %78
         %77 = OpLabel
         %90 = OpCompositeExtract %tint_GammaTransferParams %params 3
         %91 = OpCompositeExtract %tint_GammaTransferParams %params 4
         %92 = OpCompositeExtract %mat3v3float %params 5
         %93 = OpFunctionCall %v3float %tint_GammaCorrection %70 %90
         %95 = OpMatrixTimesVector %v3float %92 %93
         %80 = OpFunctionCall %v3float %tint_GammaCorrection %95 %91
               OpBranch %76
         %78 = OpLabel
               OpBranch %76
         %76 = OpLabel
         %79 = OpPhi %v3float %80 %77 %70 %78
         %81 = OpCompositeConstruct %v4float %79 %73
               OpReturnValue %81
               OpFunctionEnd
%tint_GammaCorrection = OpFunction %v3float None %98
          %v = OpFunctionParameter %v3float
   %params_0 = OpFunctionParameter %tint_GammaTransferParams
         %99 = OpLabel
        %100 = OpCompositeExtract %float %params_0 0
        %101 = OpCompositeExtract %float %params_0 1
        %102 = OpCompositeExtract %float %params_0 2
        %103 = OpCompositeExtract %float %params_0 3
        %104 = OpCompositeExtract %float %params_0 4
        %105 = OpCompositeExtract %float %params_0 5
        %106 = OpCompositeExtract %float %params_0 6
        %107 = OpCompositeConstruct %v3float %100 %100 %100
        %108 = OpCompositeConstruct %v3float %104 %104 %104
        %109 = OpExtInst %v3float %41 FAbs %v
        %110 = OpExtInst %v3float %41 FSign %v
        %111 = OpFOrdLessThan %v3bool %109 %108
        %113 = OpVectorTimesScalar %v3float %109 %103
        %114 = OpCompositeConstruct %v3float %106 %106 %106
        %115 = OpFAdd %v3float %113 %114
        %116 = OpFMul %v3float %110 %115
        %117 = OpVectorTimesScalar %v3float %109 %101
        %118 = OpCompositeConstruct %v3float %102 %102 %102
        %119 = OpFAdd %v3float %117 %118
        %120 = OpExtInst %v3float %41 Pow %119 %107
        %121 = OpCompositeConstruct %v3float %105 %105 %105
        %122 = OpFAdd %v3float %120 %121
        %123 = OpFMul %v3float %110 %122
        %124 = OpSelect %v3float %111 %116 %123
               OpReturnValue %124
               OpFunctionEnd
         %29 = OpFunction %tint_ExternalTextureParams None %126
%start_byte_offset = OpFunctionParameter %uint
        %127 = OpLabel
        %128 = OpUDiv %uint %start_byte_offset %uint_16
        %130 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %128
        %132 = OpBitwiseAnd %uint %start_byte_offset %uint_15
        %134 = OpShiftRightLogical %uint %132 %uint_2
        %136 = OpLoad %v4uint %130 None
        %137 = OpVectorExtractDynamic %uint %136 %134
        %138 = OpIAdd %uint %uint_4 %start_byte_offset
        %140 = OpUDiv %uint %138 %uint_16
        %141 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %140
        %142 = OpBitwiseAnd %uint %138 %uint_15
        %143 = OpShiftRightLogical %uint %142 %uint_2
        %144 = OpLoad %v4uint %141 None
        %145 = OpVectorExtractDynamic %uint %144 %143
        %146 = OpIAdd %uint %uint_16 %start_byte_offset
        %147 = OpFunctionCall %mat3v4float %148 %146
        %149 = OpIAdd %uint %uint_64 %start_byte_offset
        %151 = OpFunctionCall %tint_GammaTransferParams %152 %149
        %153 = OpIAdd %uint %uint_96 %start_byte_offset
        %155 = OpFunctionCall %tint_GammaTransferParams %152 %153
        %156 = OpIAdd %uint %uint_128 %start_byte_offset
        %158 = OpFunctionCall %mat3v3float %159 %156
        %160 = OpIAdd %uint %uint_176 %start_byte_offset
        %162 = OpFunctionCall %mat3v2float %163 %160
        %164 = OpIAdd %uint %uint_200 %start_byte_offset
        %166 = OpFunctionCall %mat3v2float %163 %164
        %167 = OpIAdd %uint %uint_224 %start_byte_offset
        %169 = OpUDiv %uint %167 %uint_16
        %170 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %169
        %171 = OpBitwiseAnd %uint %167 %uint_15
        %172 = OpShiftRightLogical %uint %171 %uint_2
        %173 = OpLoad %v4uint %170 None
        %174 = OpVectorShuffle %v2uint %173 %173 2 3
        %175 = OpVectorShuffle %v2uint %173 %173 0 1
        %176 = OpIEqual %bool %172 %uint_2
        %178 = OpCompositeConstruct %v2bool %176 %176
        %179 = OpSelect %v2uint %178 %174 %175
        %180 = OpBitcast %v2float %179
        %181 = OpIAdd %uint %uint_232 %start_byte_offset
        %183 = OpUDiv %uint %181 %uint_16
        %184 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %183
        %185 = OpBitwiseAnd %uint %181 %uint_15
        %186 = OpShiftRightLogical %uint %185 %uint_2
        %187 = OpLoad %v4uint %184 None
        %188 = OpVectorShuffle %v2uint %187 %187 2 3
        %189 = OpVectorShuffle %v2uint %187 %187 0 1
        %190 = OpIEqual %bool %186 %uint_2
        %191 = OpCompositeConstruct %v2bool %190 %190
        %192 = OpSelect %v2uint %191 %188 %189
        %193 = OpBitcast %v2float %192
        %194 = OpIAdd %uint %uint_240 %start_byte_offset
        %196 = OpUDiv %uint %194 %uint_16
        %197 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %196
        %198 = OpBitwiseAnd %uint %194 %uint_15
        %199 = OpShiftRightLogical %uint %198 %uint_2
        %200 = OpLoad %v4uint %197 None
        %201 = OpVectorShuffle %v2uint %200 %200 2 3
        %202 = OpVectorShuffle %v2uint %200 %200 0 1
        %203 = OpIEqual %bool %199 %uint_2
        %204 = OpCompositeConstruct %v2bool %203 %203
        %205 = OpSelect %v2uint %204 %201 %202
        %206 = OpBitcast %v2float %205
        %207 = OpIAdd %uint %uint_248 %start_byte_offset
        %209 = OpUDiv %uint %207 %uint_16
        %210 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %209
        %211 = OpBitwiseAnd %uint %207 %uint_15
        %212 = OpShiftRightLogical %uint %211 %uint_2
        %213 = OpLoad %v4uint %210 None
        %214 = OpVectorShuffle %v2uint %213 %213 2 3
        %215 = OpVectorShuffle %v2uint %213 %213 0 1
        %216 = OpIEqual %bool %212 %uint_2
        %217 = OpCompositeConstruct %v2bool %216 %216
        %218 = OpSelect %v2uint %217 %214 %215
        %219 = OpBitcast %v2float %218
        %220 = OpIAdd %uint %uint_256 %start_byte_offset
        %222 = OpUDiv %uint %220 %uint_16
        %223 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %222
        %224 = OpBitwiseAnd %uint %220 %uint_15
        %225 = OpShiftRightLogical %uint %224 %uint_2
        %226 = OpLoad %v4uint %223 None
        %227 = OpVectorShuffle %v2uint %226 %226 2 3
        %228 = OpVectorShuffle %v2uint %226 %226 0 1
        %229 = OpIEqual %bool %225 %uint_2
        %230 = OpCompositeConstruct %v2bool %229 %229
        %231 = OpSelect %v2uint %230 %227 %228
        %232 = OpIAdd %uint %uint_264 %start_byte_offset
        %234 = OpUDiv %uint %232 %uint_16
        %235 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %234
        %236 = OpBitwiseAnd %uint %232 %uint_15
        %237 = OpShiftRightLogical %uint %236 %uint_2
        %238 = OpLoad %v4uint %235 None
        %239 = OpVectorShuffle %v2uint %238 %238 2 3
        %240 = OpVectorShuffle %v2uint %238 %238 0 1
        %241 = OpIEqual %bool %237 %uint_2
        %242 = OpCompositeConstruct %v2bool %241 %241
        %243 = OpSelect %v2uint %242 %239 %240
        %244 = OpBitcast %v2float %243
        %245 = OpCompositeConstruct %tint_ExternalTextureParams %137 %145 %147 %151 %155 %158 %162 %166 %180 %193 %206 %219 %231 %244
               OpReturnValue %245
               OpFunctionEnd
        %148 = OpFunction %mat3v4float None %247
%start_byte_offset_0 = OpFunctionParameter %uint
        %248 = OpLabel
        %249 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %250 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %249
        %251 = OpLoad %v4uint %250 None
        %252 = OpBitcast %v4float %251
        %253 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %254 = OpUDiv %uint %253 %uint_16
        %255 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %254
        %256 = OpLoad %v4uint %255 None
        %257 = OpBitcast %v4float %256
        %258 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %260 = OpUDiv %uint %258 %uint_16
        %261 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %260
        %262 = OpLoad %v4uint %261 None
        %263 = OpBitcast %v4float %262
        %264 = OpCompositeConstruct %mat3v4float %252 %257 %263
               OpReturnValue %264
               OpFunctionEnd
        %152 = OpFunction %tint_GammaTransferParams None %266
%start_byte_offset_1 = OpFunctionParameter %uint
        %267 = OpLabel
        %268 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %269 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %268
        %270 = OpBitwiseAnd %uint %start_byte_offset_1 %uint_15
        %271 = OpShiftRightLogical %uint %270 %uint_2
        %272 = OpLoad %v4uint %269 None
        %273 = OpVectorExtractDynamic %uint %272 %271
        %274 = OpBitcast %float %273
        %275 = OpIAdd %uint %uint_4 %start_byte_offset_1
        %276 = OpUDiv %uint %275 %uint_16
        %277 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %276
        %278 = OpBitwiseAnd %uint %275 %uint_15
        %279 = OpShiftRightLogical %uint %278 %uint_2
        %280 = OpLoad %v4uint %277 None
        %281 = OpVectorExtractDynamic %uint %280 %279
        %282 = OpBitcast %float %281
        %283 = OpIAdd %uint %uint_8 %start_byte_offset_1
        %285 = OpUDiv %uint %283 %uint_16
        %286 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %285
        %287 = OpBitwiseAnd %uint %283 %uint_15
        %288 = OpShiftRightLogical %uint %287 %uint_2
        %289 = OpLoad %v4uint %286 None
        %290 = OpVectorExtractDynamic %uint %289 %288
        %291 = OpBitcast %float %290
        %292 = OpIAdd %uint %uint_12 %start_byte_offset_1
        %294 = OpUDiv %uint %292 %uint_16
        %295 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %294
        %296 = OpBitwiseAnd %uint %292 %uint_15
        %297 = OpShiftRightLogical %uint %296 %uint_2
        %298 = OpLoad %v4uint %295 None
        %299 = OpVectorExtractDynamic %uint %298 %297
        %300 = OpBitcast %float %299
        %301 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %302 = OpUDiv %uint %301 %uint_16
        %303 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %302
        %304 = OpBitwiseAnd %uint %301 %uint_15
        %305 = OpShiftRightLogical %uint %304 %uint_2
        %306 = OpLoad %v4uint %303 None
        %307 = OpVectorExtractDynamic %uint %306 %305
        %308 = OpBitcast %float %307
        %309 = OpIAdd %uint %uint_20 %start_byte_offset_1
        %311 = OpUDiv %uint %309 %uint_16
        %312 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %311
        %313 = OpBitwiseAnd %uint %309 %uint_15
        %314 = OpShiftRightLogical %uint %313 %uint_2
        %315 = OpLoad %v4uint %312 None
        %316 = OpVectorExtractDynamic %uint %315 %314
        %317 = OpBitcast %float %316
        %318 = OpIAdd %uint %uint_24 %start_byte_offset_1
        %320 = OpUDiv %uint %318 %uint_16
        %321 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %320
        %322 = OpBitwiseAnd %uint %318 %uint_15
        %323 = OpShiftRightLogical %uint %322 %uint_2
        %324 = OpLoad %v4uint %321 None
        %325 = OpVectorExtractDynamic %uint %324 %323
        %326 = OpBitcast %float %325
        %327 = OpIAdd %uint %uint_28 %start_byte_offset_1
        %329 = OpUDiv %uint %327 %uint_16
        %330 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %329
        %331 = OpBitwiseAnd %uint %327 %uint_15
        %332 = OpShiftRightLogical %uint %331 %uint_2
        %333 = OpLoad %v4uint %330 None
        %334 = OpVectorExtractDynamic %uint %333 %332
        %335 = OpCompositeConstruct %tint_GammaTransferParams %274 %282 %291 %300 %308 %317 %326 %334
               OpReturnValue %335
               OpFunctionEnd
        %159 = OpFunction %mat3v3float None %337
%start_byte_offset_2 = OpFunctionParameter %uint
        %338 = OpLabel
        %339 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %340 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %339
        %341 = OpLoad %v4uint %340 None
        %342 = OpVectorShuffle %v3uint %341 %341 0 1 2
        %344 = OpBitcast %v3float %342
        %345 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %346 = OpUDiv %uint %345 %uint_16
        %347 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %346
        %348 = OpLoad %v4uint %347 None
        %349 = OpVectorShuffle %v3uint %348 %348 0 1 2
        %350 = OpBitcast %v3float %349
        %351 = OpIAdd %uint %uint_32 %start_byte_offset_2
        %352 = OpUDiv %uint %351 %uint_16
        %353 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %352
        %354 = OpLoad %v4uint %353 None
        %355 = OpVectorShuffle %v3uint %354 %354 0 1 2
        %356 = OpBitcast %v3float %355
        %357 = OpCompositeConstruct %mat3v3float %344 %350 %356
               OpReturnValue %357
               OpFunctionEnd
        %163 = OpFunction %mat3v2float None %359
%start_byte_offset_3 = OpFunctionParameter %uint
        %360 = OpLabel
        %361 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %362 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %361
        %363 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %364 = OpShiftRightLogical %uint %363 %uint_2
        %365 = OpLoad %v4uint %362 None
        %366 = OpVectorShuffle %v2uint %365 %365 2 3
        %367 = OpVectorShuffle %v2uint %365 %365 0 1
        %368 = OpIEqual %bool %364 %uint_2
        %369 = OpCompositeConstruct %v2bool %368 %368
        %370 = OpSelect %v2uint %369 %366 %367
        %371 = OpBitcast %v2float %370
        %372 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %373 = OpUDiv %uint %372 %uint_16
        %374 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %373
        %375 = OpBitwiseAnd %uint %372 %uint_15
        %376 = OpShiftRightLogical %uint %375 %uint_2
        %377 = OpLoad %v4uint %374 None
        %378 = OpVectorShuffle %v2uint %377 %377 2 3
        %379 = OpVectorShuffle %v2uint %377 %377 0 1
        %380 = OpIEqual %bool %376 %uint_2
        %381 = OpCompositeConstruct %v2bool %380 %380
        %382 = OpSelect %v2uint %381 %378 %379
        %383 = OpBitcast %v2float %382
        %384 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %385 = OpUDiv %uint %384 %uint_16
        %386 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %385
        %387 = OpBitwiseAnd %uint %384 %uint_15
        %388 = OpShiftRightLogical %uint %387 %uint_2
        %389 = OpLoad %v4uint %386 None
        %390 = OpVectorShuffle %v2uint %389 %389 2 3
        %391 = OpVectorShuffle %v2uint %389 %389 0 1
        %392 = OpIEqual %bool %388 %uint_2
        %393 = OpCompositeConstruct %v2bool %392 %392
        %394 = OpSelect %v2uint %393 %390 %391
        %395 = OpBitcast %v2float %394
        %396 = OpCompositeConstruct %mat3v2float %371 %383 %395
               OpReturnValue %396
               OpFunctionEnd
