;
; fragment_main
;
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 411
; Schema: 0
               OpCapability Shader
         %47 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %fragment_main "fragment_main"
               OpExecutionMode %fragment_main OriginUpperLeft
               OpMemberName %prevent_dce_block 0 "inner"
               OpName %prevent_dce_block "prevent_dce_block"
               OpName %arg_0_plane0 "arg_0_plane0"
               OpName %arg_0_plane1 "arg_0_plane1"
               OpMemberName %arg_0_params_block_tint_explicit_layout 0 "inner"
               OpName %arg_0_params_block_tint_explicit_layout "arg_0_params_block_tint_explicit_layout"
               OpName %textureLoad_8acf41 "textureLoad_8acf41"
               OpName %arg_1 "arg_1"
               OpMemberName %tint_ExternalTextureParams 0 "numPlanes"
               OpMemberName %tint_ExternalTextureParams 1 "doYuvToRgbConversionOnly"
               OpMemberName %tint_ExternalTextureParams 2 "yuvToRgbConversionMatrix"
               OpMemberName %tint_GammaTransferParams 0 "G"
               OpMemberName %tint_GammaTransferParams 1 "A"
               OpMemberName %tint_GammaTransferParams 2 "B"
               OpMemberName %tint_GammaTransferParams 3 "C"
               OpMemberName %tint_GammaTransferParams 4 "D"
               OpMemberName %tint_GammaTransferParams 5 "E"
               OpMemberName %tint_GammaTransferParams 6 "F"
               OpMemberName %tint_GammaTransferParams 7 "padding"
               OpName %tint_GammaTransferParams "tint_GammaTransferParams"
               OpMemberName %tint_ExternalTextureParams 3 "gammaDecodeParams"
               OpMemberName %tint_ExternalTextureParams 4 "gammaEncodeParams"
               OpMemberName %tint_ExternalTextureParams 5 "gamutConversionMatrix"
               OpMemberName %tint_ExternalTextureParams 6 "sampleTransform"
               OpMemberName %tint_ExternalTextureParams 7 "loadTransform"
               OpMemberName %tint_ExternalTextureParams 8 "samplePlane0RectMin"
               OpMemberName %tint_ExternalTextureParams 9 "samplePlane0RectMax"
               OpMemberName %tint_ExternalTextureParams 10 "samplePlane1RectMin"
               OpMemberName %tint_ExternalTextureParams 11 "samplePlane1RectMax"
               OpMemberName %tint_ExternalTextureParams 12 "apparentSize"
               OpMemberName %tint_ExternalTextureParams 13 "plane1CoordFactor"
               OpName %tint_ExternalTextureParams "tint_ExternalTextureParams"
               OpName %res "res"
               OpName %fragment_main "fragment_main"
               OpName %tint_TextureLoadExternal "tint_TextureLoadExternal"
               OpName %plane_0 "plane_0"
               OpName %plane_1 "plane_1"
               OpName %params "params"
               OpName %coords "coords"
               OpName %tint_GammaCorrection "tint_GammaCorrection"
               OpName %v "v"
               OpName %params_0 "params"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpMemberDecorate %prevent_dce_block 0 Offset 0
               OpDecorate %prevent_dce_block Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %arg_0_plane0 DescriptorSet 1
               OpDecorate %arg_0_plane0 Binding 0
               OpDecorate %arg_0_plane1 DescriptorSet 1
               OpDecorate %arg_0_plane1 Binding 1
               OpDecorate %_arr_v4uint_uint_17 ArrayStride 16
               OpMemberDecorate %arg_0_params_block_tint_explicit_layout 0 Offset 0
               OpDecorate %arg_0_params_block_tint_explicit_layout Block
               OpDecorate %10 DescriptorSet 1
               OpDecorate %10 Binding 2
               OpDecorate %10 NonWritable
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%prevent_dce_block = OpTypeStruct %v4float
%_ptr_StorageBuffer_prevent_dce_block = OpTypePointer StorageBuffer %prevent_dce_block
          %1 = OpVariable %_ptr_StorageBuffer_prevent_dce_block StorageBuffer
          %8 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_8 = OpTypePointer UniformConstant %8
%arg_0_plane0 = OpVariable %_ptr_UniformConstant_8 UniformConstant
%arg_0_plane1 = OpVariable %_ptr_UniformConstant_8 UniformConstant
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_17 = OpConstant %uint 17
%_arr_v4uint_uint_17 = OpTypeArray %v4uint %uint_17
%arg_0_params_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_17
%_ptr_Uniform_arg_0_params_block_tint_explicit_layout = OpTypePointer Uniform %arg_0_params_block_tint_explicit_layout
         %10 = OpVariable %_ptr_Uniform_arg_0_params_block_tint_explicit_layout Uniform
         %18 = OpTypeFunction %v4float
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
      %int_1 = OpConstant %int 1
         %24 = OpConstantComposite %v2int %int_1 %int_1
%mat3v4float = OpTypeMatrix %v4float 3
%tint_GammaTransferParams = OpTypeStruct %float %float %float %float %float %float %float %uint
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
     %v2uint = OpTypeVector %uint 2
%tint_ExternalTextureParams = OpTypeStruct %uint %uint %mat3v4float %tint_GammaTransferParams %tint_GammaTransferParams %mat3v3float %mat3v2float %mat3v2float %v2float %v2float %v2float %v2float %v2uint %v2float
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
         %42 = OpConstantComposite %v2uint %uint_1 %uint_1
%_ptr_Function_v4float = OpTypePointer Function %v4float
       %void = OpTypeVoid
         %55 = OpTypeFunction %void
%_ptr_StorageBuffer_v4float = OpTypePointer StorageBuffer %v4float
         %64 = OpTypeFunction %v4float %8 %8 %tint_ExternalTextureParams %v2uint
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
        %112 = OpTypeFunction %v3float %v3float %tint_GammaTransferParams
     %v3bool = OpTypeVector %bool 3
        %140 = OpTypeFunction %tint_ExternalTextureParams %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
    %uint_64 = OpConstant %uint 64
    %uint_96 = OpConstant %uint 96
   %uint_128 = OpConstant %uint 128
   %uint_176 = OpConstant %uint 176
   %uint_200 = OpConstant %uint 200
   %uint_224 = OpConstant %uint 224
     %v2bool = OpTypeVector %bool 2
   %uint_232 = OpConstant %uint 232
   %uint_240 = OpConstant %uint 240
   %uint_248 = OpConstant %uint 248
   %uint_256 = OpConstant %uint 256
   %uint_264 = OpConstant %uint 264
        %261 = OpTypeFunction %mat3v4float %uint
    %uint_32 = OpConstant %uint 32
        %280 = OpTypeFunction %tint_GammaTransferParams %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
    %uint_20 = OpConstant %uint 20
    %uint_24 = OpConstant %uint 24
    %uint_28 = OpConstant %uint 28
        %351 = OpTypeFunction %mat3v3float %uint
     %v3uint = OpTypeVector %uint 3
        %373 = OpTypeFunction %mat3v2float %uint
%textureLoad_8acf41 = OpFunction %v4float None %18
         %19 = OpLabel
      %arg_1 = OpVariable %_ptr_Function_v2int Function
        %res = OpVariable %_ptr_Function_v4float Function
               OpStore %arg_1 %24
         %26 = OpLoad %8 %arg_0_plane0 None
         %27 = OpLoad %8 %arg_0_plane1 None
         %28 = OpFunctionCall %tint_ExternalTextureParams %37 %uint_0
         %39 = OpLoad %v2int %arg_1 None
         %40 = OpCompositeExtract %v2uint %28 12
         %41 = OpIAdd %v2uint %40 %42
         %44 = OpISub %v2uint %41 %42
         %45 = OpBitcast %v2uint %39
         %46 = OpExtInst %v2uint %47 UMin %45 %44
         %48 = OpFunctionCall %v4float %tint_TextureLoadExternal %26 %27 %28 %46
               OpStore %res %48
         %52 = OpLoad %v4float %res None
               OpReturnValue %52
               OpFunctionEnd
%fragment_main = OpFunction %void None %55
         %56 = OpLabel
         %57 = OpFunctionCall %v4float %textureLoad_8acf41
         %58 = OpAccessChain %_ptr_StorageBuffer_v4float %1 %uint_0
               OpStore %58 %57 None
               OpReturn
               OpFunctionEnd
%tint_TextureLoadExternal = OpFunction %v4float None %64
    %plane_0 = OpFunctionParameter %8
    %plane_1 = OpFunctionParameter %8
     %params = OpFunctionParameter %tint_ExternalTextureParams
     %coords = OpFunctionParameter %v2uint
         %65 = OpLabel
         %66 = OpCompositeExtract %uint %params 1
         %67 = OpCompositeExtract %mat3v4float %params 2
         %68 = OpCompositeExtract %mat3v2float %params 7
         %69 = OpCompositeExtract %v2uint %params 12
         %70 = OpCompositeExtract %v2float %params 13
         %71 = OpExtInst %v2uint %47 UMin %coords %69
         %72 = OpConvertUToF %v2float %71
         %73 = OpCompositeConstruct %v3float %72 %float_1
         %75 = OpMatrixTimesVector %v2float %68 %73
         %76 = OpExtInst %v2float %47 RoundEven %75
         %77 = OpConvertFToU %v2uint %76
         %78 = OpCompositeExtract %uint %params 0
         %79 = OpIEqual %bool %78 %uint_1
               OpSelectionMerge %81 None
               OpBranchConditional %79 %82 %83
         %82 = OpLabel
         %96 = OpImageFetch %v4float %plane_0 %77 Lod %uint_0
         %85 = OpVectorShuffle %v3float %96 %96 0 1 2
         %88 = OpCompositeExtract %float %96 3
               OpBranch %81
         %83 = OpLabel
         %97 = OpImageFetch %v4float %plane_0 %77 Lod %uint_0
         %98 = OpCompositeExtract %float %97 0
         %99 = OpFMul %v2float %76 %70
        %100 = OpConvertFToU %v2uint %99
        %101 = OpImageFetch %v4float %plane_1 %100 Lod %uint_0
        %102 = OpVectorShuffle %v2float %101 %101 0 1
        %103 = OpCompositeConstruct %v4float %98 %102 %float_1
         %86 = OpVectorTimesMatrix %v3float %103 %67
               OpBranch %81
         %81 = OpLabel
         %84 = OpPhi %v3float %85 %82 %86 %83
         %87 = OpPhi %float %88 %82 %float_1 %83
         %89 = OpIEqual %bool %66 %uint_0
               OpSelectionMerge %90 None
               OpBranchConditional %89 %91 %92
         %91 = OpLabel
        %104 = OpCompositeExtract %tint_GammaTransferParams %params 3
        %105 = OpCompositeExtract %tint_GammaTransferParams %params 4
        %106 = OpCompositeExtract %mat3v3float %params 5
        %107 = OpFunctionCall %v3float %tint_GammaCorrection %84 %104
        %109 = OpMatrixTimesVector %v3float %106 %107
         %94 = OpFunctionCall %v3float %tint_GammaCorrection %109 %105
               OpBranch %90
         %92 = OpLabel
               OpBranch %90
         %90 = OpLabel
         %93 = OpPhi %v3float %94 %91 %84 %92
         %95 = OpCompositeConstruct %v4float %93 %87
               OpReturnValue %95
               OpFunctionEnd
%tint_GammaCorrection = OpFunction %v3float None %112
          %v = OpFunctionParameter %v3float
   %params_0 = OpFunctionParameter %tint_GammaTransferParams
        %113 = OpLabel
        %114 = OpCompositeExtract %float %params_0 0
        %115 = OpCompositeExtract %float %params_0 1
        %116 = OpCompositeExtract %float %params_0 2
        %117 = OpCompositeExtract %float %params_0 3
        %118 = OpCompositeExtract %float %params_0 4
        %119 = OpCompositeExtract %float %params_0 5
        %120 = OpCompositeExtract %float %params_0 6
        %121 = OpCompositeConstruct %v3float %114 %114 %114
        %122 = OpCompositeConstruct %v3float %118 %118 %118
        %123 = OpExtInst %v3float %47 FAbs %v
        %124 = OpExtInst %v3float %47 FSign %v
        %125 = OpFOrdLessThan %v3bool %123 %122
        %127 = OpVectorTimesScalar %v3float %123 %117
        %128 = OpCompositeConstruct %v3float %120 %120 %120
        %129 = OpFAdd %v3float %127 %128
        %130 = OpFMul %v3float %124 %129
        %131 = OpVectorTimesScalar %v3float %123 %115
        %132 = OpCompositeConstruct %v3float %116 %116 %116
        %133 = OpFAdd %v3float %131 %132
        %134 = OpExtInst %v3float %47 Pow %133 %121
        %135 = OpCompositeConstruct %v3float %119 %119 %119
        %136 = OpFAdd %v3float %134 %135
        %137 = OpFMul %v3float %124 %136
        %138 = OpSelect %v3float %125 %130 %137
               OpReturnValue %138
               OpFunctionEnd
         %37 = OpFunction %tint_ExternalTextureParams None %140
%start_byte_offset = OpFunctionParameter %uint
        %141 = OpLabel
        %142 = OpUDiv %uint %start_byte_offset %uint_16
        %144 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %142
        %146 = OpBitwiseAnd %uint %start_byte_offset %uint_15
        %148 = OpShiftRightLogical %uint %146 %uint_2
        %150 = OpLoad %v4uint %144 None
        %151 = OpVectorExtractDynamic %uint %150 %148
        %152 = OpIAdd %uint %uint_4 %start_byte_offset
        %154 = OpUDiv %uint %152 %uint_16
        %155 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %154
        %156 = OpBitwiseAnd %uint %152 %uint_15
        %157 = OpShiftRightLogical %uint %156 %uint_2
        %158 = OpLoad %v4uint %155 None
        %159 = OpVectorExtractDynamic %uint %158 %157
        %160 = OpIAdd %uint %uint_16 %start_byte_offset
        %161 = OpFunctionCall %mat3v4float %162 %160
        %163 = OpIAdd %uint %uint_64 %start_byte_offset
        %165 = OpFunctionCall %tint_GammaTransferParams %166 %163
        %167 = OpIAdd %uint %uint_96 %start_byte_offset
        %169 = OpFunctionCall %tint_GammaTransferParams %166 %167
        %170 = OpIAdd %uint %uint_128 %start_byte_offset
        %172 = OpFunctionCall %mat3v3float %173 %170
        %174 = OpIAdd %uint %uint_176 %start_byte_offset
        %176 = OpFunctionCall %mat3v2float %177 %174
        %178 = OpIAdd %uint %uint_200 %start_byte_offset
        %180 = OpFunctionCall %mat3v2float %177 %178
        %181 = OpIAdd %uint %uint_224 %start_byte_offset
        %183 = OpUDiv %uint %181 %uint_16
        %184 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %183
        %185 = OpBitwiseAnd %uint %181 %uint_15
        %186 = OpShiftRightLogical %uint %185 %uint_2
        %187 = OpLoad %v4uint %184 None
        %188 = OpVectorShuffle %v2uint %187 %187 2 3
        %189 = OpVectorShuffle %v2uint %187 %187 0 1
        %190 = OpIEqual %bool %186 %uint_2
        %192 = OpCompositeConstruct %v2bool %190 %190
        %193 = OpSelect %v2uint %192 %188 %189
        %194 = OpBitcast %v2float %193
        %195 = OpIAdd %uint %uint_232 %start_byte_offset
        %197 = OpUDiv %uint %195 %uint_16
        %198 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %197
        %199 = OpBitwiseAnd %uint %195 %uint_15
        %200 = OpShiftRightLogical %uint %199 %uint_2
        %201 = OpLoad %v4uint %198 None
        %202 = OpVectorShuffle %v2uint %201 %201 2 3
        %203 = OpVectorShuffle %v2uint %201 %201 0 1
        %204 = OpIEqual %bool %200 %uint_2
        %205 = OpCompositeConstruct %v2bool %204 %204
        %206 = OpSelect %v2uint %205 %202 %203
        %207 = OpBitcast %v2float %206
        %208 = OpIAdd %uint %uint_240 %start_byte_offset
        %210 = OpUDiv %uint %208 %uint_16
        %211 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %210
        %212 = OpBitwiseAnd %uint %208 %uint_15
        %213 = OpShiftRightLogical %uint %212 %uint_2
        %214 = OpLoad %v4uint %211 None
        %215 = OpVectorShuffle %v2uint %214 %214 2 3
        %216 = OpVectorShuffle %v2uint %214 %214 0 1
        %217 = OpIEqual %bool %213 %uint_2
        %218 = OpCompositeConstruct %v2bool %217 %217
        %219 = OpSelect %v2uint %218 %215 %216
        %220 = OpBitcast %v2float %219
        %221 = OpIAdd %uint %uint_248 %start_byte_offset
        %223 = OpUDiv %uint %221 %uint_16
        %224 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %223
        %225 = OpBitwiseAnd %uint %221 %uint_15
        %226 = OpShiftRightLogical %uint %225 %uint_2
        %227 = OpLoad %v4uint %224 None
        %228 = OpVectorShuffle %v2uint %227 %227 2 3
        %229 = OpVectorShuffle %v2uint %227 %227 0 1
        %230 = OpIEqual %bool %226 %uint_2
        %231 = OpCompositeConstruct %v2bool %230 %230
        %232 = OpSelect %v2uint %231 %228 %229
        %233 = OpBitcast %v2float %232
        %234 = OpIAdd %uint %uint_256 %start_byte_offset
        %236 = OpUDiv %uint %234 %uint_16
        %237 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %236
        %238 = OpBitwiseAnd %uint %234 %uint_15
        %239 = OpShiftRightLogical %uint %238 %uint_2
        %240 = OpLoad %v4uint %237 None
        %241 = OpVectorShuffle %v2uint %240 %240 2 3
        %242 = OpVectorShuffle %v2uint %240 %240 0 1
        %243 = OpIEqual %bool %239 %uint_2
        %244 = OpCompositeConstruct %v2bool %243 %243
        %245 = OpSelect %v2uint %244 %241 %242
        %246 = OpIAdd %uint %uint_264 %start_byte_offset
        %248 = OpUDiv %uint %246 %uint_16
        %249 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %248
        %250 = OpBitwiseAnd %uint %246 %uint_15
        %251 = OpShiftRightLogical %uint %250 %uint_2
        %252 = OpLoad %v4uint %249 None
        %253 = OpVectorShuffle %v2uint %252 %252 2 3
        %254 = OpVectorShuffle %v2uint %252 %252 0 1
        %255 = OpIEqual %bool %251 %uint_2
        %256 = OpCompositeConstruct %v2bool %255 %255
        %257 = OpSelect %v2uint %256 %253 %254
        %258 = OpBitcast %v2float %257
        %259 = OpCompositeConstruct %tint_ExternalTextureParams %151 %159 %161 %165 %169 %172 %176 %180 %194 %207 %220 %233 %245 %258
               OpReturnValue %259
               OpFunctionEnd
        %162 = OpFunction %mat3v4float None %261
%start_byte_offset_0 = OpFunctionParameter %uint
        %262 = OpLabel
        %263 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %264 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %263
        %265 = OpLoad %v4uint %264 None
        %266 = OpBitcast %v4float %265
        %267 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %268 = OpUDiv %uint %267 %uint_16
        %269 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %268
        %270 = OpLoad %v4uint %269 None
        %271 = OpBitcast %v4float %270
        %272 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %274 = OpUDiv %uint %272 %uint_16
        %275 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %274
        %276 = OpLoad %v4uint %275 None
        %277 = OpBitcast %v4float %276
        %278 = OpCompositeConstruct %mat3v4float %266 %271 %277
               OpReturnValue %278
               OpFunctionEnd
        %166 = OpFunction %tint_GammaTransferParams None %280
%start_byte_offset_1 = OpFunctionParameter %uint
        %281 = OpLabel
        %282 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %283 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %282
        %284 = OpBitwiseAnd %uint %start_byte_offset_1 %uint_15
        %285 = OpShiftRightLogical %uint %284 %uint_2
        %286 = OpLoad %v4uint %283 None
        %287 = OpVectorExtractDynamic %uint %286 %285
        %288 = OpBitcast %float %287
        %289 = OpIAdd %uint %uint_4 %start_byte_offset_1
        %290 = OpUDiv %uint %289 %uint_16
        %291 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %290
        %292 = OpBitwiseAnd %uint %289 %uint_15
        %293 = OpShiftRightLogical %uint %292 %uint_2
        %294 = OpLoad %v4uint %291 None
        %295 = OpVectorExtractDynamic %uint %294 %293
        %296 = OpBitcast %float %295
        %297 = OpIAdd %uint %uint_8 %start_byte_offset_1
        %299 = OpUDiv %uint %297 %uint_16
        %300 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %299
        %301 = OpBitwiseAnd %uint %297 %uint_15
        %302 = OpShiftRightLogical %uint %301 %uint_2
        %303 = OpLoad %v4uint %300 None
        %304 = OpVectorExtractDynamic %uint %303 %302
        %305 = OpBitcast %float %304
        %306 = OpIAdd %uint %uint_12 %start_byte_offset_1
        %308 = OpUDiv %uint %306 %uint_16
        %309 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %308
        %310 = OpBitwiseAnd %uint %306 %uint_15
        %311 = OpShiftRightLogical %uint %310 %uint_2
        %312 = OpLoad %v4uint %309 None
        %313 = OpVectorExtractDynamic %uint %312 %311
        %314 = OpBitcast %float %313
        %315 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %316 = OpUDiv %uint %315 %uint_16
        %317 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %316
        %318 = OpBitwiseAnd %uint %315 %uint_15
        %319 = OpShiftRightLogical %uint %318 %uint_2
        %320 = OpLoad %v4uint %317 None
        %321 = OpVectorExtractDynamic %uint %320 %319
        %322 = OpBitcast %float %321
        %323 = OpIAdd %uint %uint_20 %start_byte_offset_1
        %325 = OpUDiv %uint %323 %uint_16
        %326 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %325
        %327 = OpBitwiseAnd %uint %323 %uint_15
        %328 = OpShiftRightLogical %uint %327 %uint_2
        %329 = OpLoad %v4uint %326 None
        %330 = OpVectorExtractDynamic %uint %329 %328
        %331 = OpBitcast %float %330
        %332 = OpIAdd %uint %uint_24 %start_byte_offset_1
        %334 = OpUDiv %uint %332 %uint_16
        %335 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %334
        %336 = OpBitwiseAnd %uint %332 %uint_15
        %337 = OpShiftRightLogical %uint %336 %uint_2
        %338 = OpLoad %v4uint %335 None
        %339 = OpVectorExtractDynamic %uint %338 %337
        %340 = OpBitcast %float %339
        %341 = OpIAdd %uint %uint_28 %start_byte_offset_1
        %343 = OpUDiv %uint %341 %uint_16
        %344 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %343
        %345 = OpBitwiseAnd %uint %341 %uint_15
        %346 = OpShiftRightLogical %uint %345 %uint_2
        %347 = OpLoad %v4uint %344 None
        %348 = OpVectorExtractDynamic %uint %347 %346
        %349 = OpCompositeConstruct %tint_GammaTransferParams %288 %296 %305 %314 %322 %331 %340 %348
               OpReturnValue %349
               OpFunctionEnd
        %173 = OpFunction %mat3v3float None %351
%start_byte_offset_2 = OpFunctionParameter %uint
        %352 = OpLabel
        %353 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %354 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %353
        %355 = OpLoad %v4uint %354 None
        %356 = OpVectorShuffle %v3uint %355 %355 0 1 2
        %358 = OpBitcast %v3float %356
        %359 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %360 = OpUDiv %uint %359 %uint_16
        %361 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %360
        %362 = OpLoad %v4uint %361 None
        %363 = OpVectorShuffle %v3uint %362 %362 0 1 2
        %364 = OpBitcast %v3float %363
        %365 = OpIAdd %uint %uint_32 %start_byte_offset_2
        %366 = OpUDiv %uint %365 %uint_16
        %367 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %366
        %368 = OpLoad %v4uint %367 None
        %369 = OpVectorShuffle %v3uint %368 %368 0 1 2
        %370 = OpBitcast %v3float %369
        %371 = OpCompositeConstruct %mat3v3float %358 %364 %370
               OpReturnValue %371
               OpFunctionEnd
        %177 = OpFunction %mat3v2float None %373
%start_byte_offset_3 = OpFunctionParameter %uint
        %374 = OpLabel
        %375 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %376 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %375
        %377 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %378 = OpShiftRightLogical %uint %377 %uint_2
        %379 = OpLoad %v4uint %376 None
        %380 = OpVectorShuffle %v2uint %379 %379 2 3
        %381 = OpVectorShuffle %v2uint %379 %379 0 1
        %382 = OpIEqual %bool %378 %uint_2
        %383 = OpCompositeConstruct %v2bool %382 %382
        %384 = OpSelect %v2uint %383 %380 %381
        %385 = OpBitcast %v2float %384
        %386 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %387 = OpUDiv %uint %386 %uint_16
        %388 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %387
        %389 = OpBitwiseAnd %uint %386 %uint_15
        %390 = OpShiftRightLogical %uint %389 %uint_2
        %391 = OpLoad %v4uint %388 None
        %392 = OpVectorShuffle %v2uint %391 %391 2 3
        %393 = OpVectorShuffle %v2uint %391 %391 0 1
        %394 = OpIEqual %bool %390 %uint_2
        %395 = OpCompositeConstruct %v2bool %394 %394
        %396 = OpSelect %v2uint %395 %392 %393
        %397 = OpBitcast %v2float %396
        %398 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %399 = OpUDiv %uint %398 %uint_16
        %400 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %399
        %401 = OpBitwiseAnd %uint %398 %uint_15
        %402 = OpShiftRightLogical %uint %401 %uint_2
        %403 = OpLoad %v4uint %400 None
        %404 = OpVectorShuffle %v2uint %403 %403 2 3
        %405 = OpVectorShuffle %v2uint %403 %403 0 1
        %406 = OpIEqual %bool %402 %uint_2
        %407 = OpCompositeConstruct %v2bool %406 %406
        %408 = OpSelect %v2uint %407 %404 %405
        %409 = OpBitcast %v2float %408
        %410 = OpCompositeConstruct %mat3v2float %385 %397 %409
               OpReturnValue %410
               OpFunctionEnd
;
; compute_main
;
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 411
; Schema: 0
               OpCapability Shader
         %47 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %compute_main "compute_main"
               OpExecutionMode %compute_main LocalSize 1 1 1
               OpMemberName %prevent_dce_block 0 "inner"
               OpName %prevent_dce_block "prevent_dce_block"
               OpName %arg_0_plane0 "arg_0_plane0"
               OpName %arg_0_plane1 "arg_0_plane1"
               OpMemberName %arg_0_params_block_tint_explicit_layout 0 "inner"
               OpName %arg_0_params_block_tint_explicit_layout "arg_0_params_block_tint_explicit_layout"
               OpName %textureLoad_8acf41 "textureLoad_8acf41"
               OpName %arg_1 "arg_1"
               OpMemberName %tint_ExternalTextureParams 0 "numPlanes"
               OpMemberName %tint_ExternalTextureParams 1 "doYuvToRgbConversionOnly"
               OpMemberName %tint_ExternalTextureParams 2 "yuvToRgbConversionMatrix"
               OpMemberName %tint_GammaTransferParams 0 "G"
               OpMemberName %tint_GammaTransferParams 1 "A"
               OpMemberName %tint_GammaTransferParams 2 "B"
               OpMemberName %tint_GammaTransferParams 3 "C"
               OpMemberName %tint_GammaTransferParams 4 "D"
               OpMemberName %tint_GammaTransferParams 5 "E"
               OpMemberName %tint_GammaTransferParams 6 "F"
               OpMemberName %tint_GammaTransferParams 7 "padding"
               OpName %tint_GammaTransferParams "tint_GammaTransferParams"
               OpMemberName %tint_ExternalTextureParams 3 "gammaDecodeParams"
               OpMemberName %tint_ExternalTextureParams 4 "gammaEncodeParams"
               OpMemberName %tint_ExternalTextureParams 5 "gamutConversionMatrix"
               OpMemberName %tint_ExternalTextureParams 6 "sampleTransform"
               OpMemberName %tint_ExternalTextureParams 7 "loadTransform"
               OpMemberName %tint_ExternalTextureParams 8 "samplePlane0RectMin"
               OpMemberName %tint_ExternalTextureParams 9 "samplePlane0RectMax"
               OpMemberName %tint_ExternalTextureParams 10 "samplePlane1RectMin"
               OpMemberName %tint_ExternalTextureParams 11 "samplePlane1RectMax"
               OpMemberName %tint_ExternalTextureParams 12 "apparentSize"
               OpMemberName %tint_ExternalTextureParams 13 "plane1CoordFactor"
               OpName %tint_ExternalTextureParams "tint_ExternalTextureParams"
               OpName %res "res"
               OpName %compute_main "compute_main"
               OpName %tint_TextureLoadExternal "tint_TextureLoadExternal"
               OpName %plane_0 "plane_0"
               OpName %plane_1 "plane_1"
               OpName %params "params"
               OpName %coords "coords"
               OpName %tint_GammaCorrection "tint_GammaCorrection"
               OpName %v "v"
               OpName %params_0 "params"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpMemberDecorate %prevent_dce_block 0 Offset 0
               OpDecorate %prevent_dce_block Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %arg_0_plane0 DescriptorSet 1
               OpDecorate %arg_0_plane0 Binding 0
               OpDecorate %arg_0_plane1 DescriptorSet 1
               OpDecorate %arg_0_plane1 Binding 1
               OpDecorate %_arr_v4uint_uint_17 ArrayStride 16
               OpMemberDecorate %arg_0_params_block_tint_explicit_layout 0 Offset 0
               OpDecorate %arg_0_params_block_tint_explicit_layout Block
               OpDecorate %10 DescriptorSet 1
               OpDecorate %10 Binding 2
               OpDecorate %10 NonWritable
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%prevent_dce_block = OpTypeStruct %v4float
%_ptr_StorageBuffer_prevent_dce_block = OpTypePointer StorageBuffer %prevent_dce_block
          %1 = OpVariable %_ptr_StorageBuffer_prevent_dce_block StorageBuffer
          %8 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_8 = OpTypePointer UniformConstant %8
%arg_0_plane0 = OpVariable %_ptr_UniformConstant_8 UniformConstant
%arg_0_plane1 = OpVariable %_ptr_UniformConstant_8 UniformConstant
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_17 = OpConstant %uint 17
%_arr_v4uint_uint_17 = OpTypeArray %v4uint %uint_17
%arg_0_params_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_17
%_ptr_Uniform_arg_0_params_block_tint_explicit_layout = OpTypePointer Uniform %arg_0_params_block_tint_explicit_layout
         %10 = OpVariable %_ptr_Uniform_arg_0_params_block_tint_explicit_layout Uniform
         %18 = OpTypeFunction %v4float
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
      %int_1 = OpConstant %int 1
         %24 = OpConstantComposite %v2int %int_1 %int_1
%mat3v4float = OpTypeMatrix %v4float 3
%tint_GammaTransferParams = OpTypeStruct %float %float %float %float %float %float %float %uint
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
     %v2uint = OpTypeVector %uint 2
%tint_ExternalTextureParams = OpTypeStruct %uint %uint %mat3v4float %tint_GammaTransferParams %tint_GammaTransferParams %mat3v3float %mat3v2float %mat3v2float %v2float %v2float %v2float %v2float %v2uint %v2float
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
         %42 = OpConstantComposite %v2uint %uint_1 %uint_1
%_ptr_Function_v4float = OpTypePointer Function %v4float
       %void = OpTypeVoid
         %55 = OpTypeFunction %void
%_ptr_StorageBuffer_v4float = OpTypePointer StorageBuffer %v4float
         %64 = OpTypeFunction %v4float %8 %8 %tint_ExternalTextureParams %v2uint
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
        %112 = OpTypeFunction %v3float %v3float %tint_GammaTransferParams
     %v3bool = OpTypeVector %bool 3
        %140 = OpTypeFunction %tint_ExternalTextureParams %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
    %uint_64 = OpConstant %uint 64
    %uint_96 = OpConstant %uint 96
   %uint_128 = OpConstant %uint 128
   %uint_176 = OpConstant %uint 176
   %uint_200 = OpConstant %uint 200
   %uint_224 = OpConstant %uint 224
     %v2bool = OpTypeVector %bool 2
   %uint_232 = OpConstant %uint 232
   %uint_240 = OpConstant %uint 240
   %uint_248 = OpConstant %uint 248
   %uint_256 = OpConstant %uint 256
   %uint_264 = OpConstant %uint 264
        %261 = OpTypeFunction %mat3v4float %uint
    %uint_32 = OpConstant %uint 32
        %280 = OpTypeFunction %tint_GammaTransferParams %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
    %uint_20 = OpConstant %uint 20
    %uint_24 = OpConstant %uint 24
    %uint_28 = OpConstant %uint 28
        %351 = OpTypeFunction %mat3v3float %uint
     %v3uint = OpTypeVector %uint 3
        %373 = OpTypeFunction %mat3v2float %uint
%textureLoad_8acf41 = OpFunction %v4float None %18
         %19 = OpLabel
      %arg_1 = OpVariable %_ptr_Function_v2int Function
        %res = OpVariable %_ptr_Function_v4float Function
               OpStore %arg_1 %24
         %26 = OpLoad %8 %arg_0_plane0 None
         %27 = OpLoad %8 %arg_0_plane1 None
         %28 = OpFunctionCall %tint_ExternalTextureParams %37 %uint_0
         %39 = OpLoad %v2int %arg_1 None
         %40 = OpCompositeExtract %v2uint %28 12
         %41 = OpIAdd %v2uint %40 %42
         %44 = OpISub %v2uint %41 %42
         %45 = OpBitcast %v2uint %39
         %46 = OpExtInst %v2uint %47 UMin %45 %44
         %48 = OpFunctionCall %v4float %tint_TextureLoadExternal %26 %27 %28 %46
               OpStore %res %48
         %52 = OpLoad %v4float %res None
               OpReturnValue %52
               OpFunctionEnd
%compute_main = OpFunction %void None %55
         %56 = OpLabel
         %57 = OpFunctionCall %v4float %textureLoad_8acf41
         %58 = OpAccessChain %_ptr_StorageBuffer_v4float %1 %uint_0
               OpStore %58 %57 None
               OpReturn
               OpFunctionEnd
%tint_TextureLoadExternal = OpFunction %v4float None %64
    %plane_0 = OpFunctionParameter %8
    %plane_1 = OpFunctionParameter %8
     %params = OpFunctionParameter %tint_ExternalTextureParams
     %coords = OpFunctionParameter %v2uint
         %65 = OpLabel
         %66 = OpCompositeExtract %uint %params 1
         %67 = OpCompositeExtract %mat3v4float %params 2
         %68 = OpCompositeExtract %mat3v2float %params 7
         %69 = OpCompositeExtract %v2uint %params 12
         %70 = OpCompositeExtract %v2float %params 13
         %71 = OpExtInst %v2uint %47 UMin %coords %69
         %72 = OpConvertUToF %v2float %71
         %73 = OpCompositeConstruct %v3float %72 %float_1
         %75 = OpMatrixTimesVector %v2float %68 %73
         %76 = OpExtInst %v2float %47 RoundEven %75
         %77 = OpConvertFToU %v2uint %76
         %78 = OpCompositeExtract %uint %params 0
         %79 = OpIEqual %bool %78 %uint_1
               OpSelectionMerge %81 None
               OpBranchConditional %79 %82 %83
         %82 = OpLabel
         %96 = OpImageFetch %v4float %plane_0 %77 Lod %uint_0
         %85 = OpVectorShuffle %v3float %96 %96 0 1 2
         %88 = OpCompositeExtract %float %96 3
               OpBranch %81
         %83 = OpLabel
         %97 = OpImageFetch %v4float %plane_0 %77 Lod %uint_0
         %98 = OpCompositeExtract %float %97 0
         %99 = OpFMul %v2float %76 %70
        %100 = OpConvertFToU %v2uint %99
        %101 = OpImageFetch %v4float %plane_1 %100 Lod %uint_0
        %102 = OpVectorShuffle %v2float %101 %101 0 1
        %103 = OpCompositeConstruct %v4float %98 %102 %float_1
         %86 = OpVectorTimesMatrix %v3float %103 %67
               OpBranch %81
         %81 = OpLabel
         %84 = OpPhi %v3float %85 %82 %86 %83
         %87 = OpPhi %float %88 %82 %float_1 %83
         %89 = OpIEqual %bool %66 %uint_0
               OpSelectionMerge %90 None
               OpBranchConditional %89 %91 %92
         %91 = OpLabel
        %104 = OpCompositeExtract %tint_GammaTransferParams %params 3
        %105 = OpCompositeExtract %tint_GammaTransferParams %params 4
        %106 = OpCompositeExtract %mat3v3float %params 5
        %107 = OpFunctionCall %v3float %tint_GammaCorrection %84 %104
        %109 = OpMatrixTimesVector %v3float %106 %107
         %94 = OpFunctionCall %v3float %tint_GammaCorrection %109 %105
               OpBranch %90
         %92 = OpLabel
               OpBranch %90
         %90 = OpLabel
         %93 = OpPhi %v3float %94 %91 %84 %92
         %95 = OpCompositeConstruct %v4float %93 %87
               OpReturnValue %95
               OpFunctionEnd
%tint_GammaCorrection = OpFunction %v3float None %112
          %v = OpFunctionParameter %v3float
   %params_0 = OpFunctionParameter %tint_GammaTransferParams
        %113 = OpLabel
        %114 = OpCompositeExtract %float %params_0 0
        %115 = OpCompositeExtract %float %params_0 1
        %116 = OpCompositeExtract %float %params_0 2
        %117 = OpCompositeExtract %float %params_0 3
        %118 = OpCompositeExtract %float %params_0 4
        %119 = OpCompositeExtract %float %params_0 5
        %120 = OpCompositeExtract %float %params_0 6
        %121 = OpCompositeConstruct %v3float %114 %114 %114
        %122 = OpCompositeConstruct %v3float %118 %118 %118
        %123 = OpExtInst %v3float %47 FAbs %v
        %124 = OpExtInst %v3float %47 FSign %v
        %125 = OpFOrdLessThan %v3bool %123 %122
        %127 = OpVectorTimesScalar %v3float %123 %117
        %128 = OpCompositeConstruct %v3float %120 %120 %120
        %129 = OpFAdd %v3float %127 %128
        %130 = OpFMul %v3float %124 %129
        %131 = OpVectorTimesScalar %v3float %123 %115
        %132 = OpCompositeConstruct %v3float %116 %116 %116
        %133 = OpFAdd %v3float %131 %132
        %134 = OpExtInst %v3float %47 Pow %133 %121
        %135 = OpCompositeConstruct %v3float %119 %119 %119
        %136 = OpFAdd %v3float %134 %135
        %137 = OpFMul %v3float %124 %136
        %138 = OpSelect %v3float %125 %130 %137
               OpReturnValue %138
               OpFunctionEnd
         %37 = OpFunction %tint_ExternalTextureParams None %140
%start_byte_offset = OpFunctionParameter %uint
        %141 = OpLabel
        %142 = OpUDiv %uint %start_byte_offset %uint_16
        %144 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %142
        %146 = OpBitwiseAnd %uint %start_byte_offset %uint_15
        %148 = OpShiftRightLogical %uint %146 %uint_2
        %150 = OpLoad %v4uint %144 None
        %151 = OpVectorExtractDynamic %uint %150 %148
        %152 = OpIAdd %uint %uint_4 %start_byte_offset
        %154 = OpUDiv %uint %152 %uint_16
        %155 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %154
        %156 = OpBitwiseAnd %uint %152 %uint_15
        %157 = OpShiftRightLogical %uint %156 %uint_2
        %158 = OpLoad %v4uint %155 None
        %159 = OpVectorExtractDynamic %uint %158 %157
        %160 = OpIAdd %uint %uint_16 %start_byte_offset
        %161 = OpFunctionCall %mat3v4float %162 %160
        %163 = OpIAdd %uint %uint_64 %start_byte_offset
        %165 = OpFunctionCall %tint_GammaTransferParams %166 %163
        %167 = OpIAdd %uint %uint_96 %start_byte_offset
        %169 = OpFunctionCall %tint_GammaTransferParams %166 %167
        %170 = OpIAdd %uint %uint_128 %start_byte_offset
        %172 = OpFunctionCall %mat3v3float %173 %170
        %174 = OpIAdd %uint %uint_176 %start_byte_offset
        %176 = OpFunctionCall %mat3v2float %177 %174
        %178 = OpIAdd %uint %uint_200 %start_byte_offset
        %180 = OpFunctionCall %mat3v2float %177 %178
        %181 = OpIAdd %uint %uint_224 %start_byte_offset
        %183 = OpUDiv %uint %181 %uint_16
        %184 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %183
        %185 = OpBitwiseAnd %uint %181 %uint_15
        %186 = OpShiftRightLogical %uint %185 %uint_2
        %187 = OpLoad %v4uint %184 None
        %188 = OpVectorShuffle %v2uint %187 %187 2 3
        %189 = OpVectorShuffle %v2uint %187 %187 0 1
        %190 = OpIEqual %bool %186 %uint_2
        %192 = OpCompositeConstruct %v2bool %190 %190
        %193 = OpSelect %v2uint %192 %188 %189
        %194 = OpBitcast %v2float %193
        %195 = OpIAdd %uint %uint_232 %start_byte_offset
        %197 = OpUDiv %uint %195 %uint_16
        %198 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %197
        %199 = OpBitwiseAnd %uint %195 %uint_15
        %200 = OpShiftRightLogical %uint %199 %uint_2
        %201 = OpLoad %v4uint %198 None
        %202 = OpVectorShuffle %v2uint %201 %201 2 3
        %203 = OpVectorShuffle %v2uint %201 %201 0 1
        %204 = OpIEqual %bool %200 %uint_2
        %205 = OpCompositeConstruct %v2bool %204 %204
        %206 = OpSelect %v2uint %205 %202 %203
        %207 = OpBitcast %v2float %206
        %208 = OpIAdd %uint %uint_240 %start_byte_offset
        %210 = OpUDiv %uint %208 %uint_16
        %211 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %210
        %212 = OpBitwiseAnd %uint %208 %uint_15
        %213 = OpShiftRightLogical %uint %212 %uint_2
        %214 = OpLoad %v4uint %211 None
        %215 = OpVectorShuffle %v2uint %214 %214 2 3
        %216 = OpVectorShuffle %v2uint %214 %214 0 1
        %217 = OpIEqual %bool %213 %uint_2
        %218 = OpCompositeConstruct %v2bool %217 %217
        %219 = OpSelect %v2uint %218 %215 %216
        %220 = OpBitcast %v2float %219
        %221 = OpIAdd %uint %uint_248 %start_byte_offset
        %223 = OpUDiv %uint %221 %uint_16
        %224 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %223
        %225 = OpBitwiseAnd %uint %221 %uint_15
        %226 = OpShiftRightLogical %uint %225 %uint_2
        %227 = OpLoad %v4uint %224 None
        %228 = OpVectorShuffle %v2uint %227 %227 2 3
        %229 = OpVectorShuffle %v2uint %227 %227 0 1
        %230 = OpIEqual %bool %226 %uint_2
        %231 = OpCompositeConstruct %v2bool %230 %230
        %232 = OpSelect %v2uint %231 %228 %229
        %233 = OpBitcast %v2float %232
        %234 = OpIAdd %uint %uint_256 %start_byte_offset
        %236 = OpUDiv %uint %234 %uint_16
        %237 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %236
        %238 = OpBitwiseAnd %uint %234 %uint_15
        %239 = OpShiftRightLogical %uint %238 %uint_2
        %240 = OpLoad %v4uint %237 None
        %241 = OpVectorShuffle %v2uint %240 %240 2 3
        %242 = OpVectorShuffle %v2uint %240 %240 0 1
        %243 = OpIEqual %bool %239 %uint_2
        %244 = OpCompositeConstruct %v2bool %243 %243
        %245 = OpSelect %v2uint %244 %241 %242
        %246 = OpIAdd %uint %uint_264 %start_byte_offset
        %248 = OpUDiv %uint %246 %uint_16
        %249 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %248
        %250 = OpBitwiseAnd %uint %246 %uint_15
        %251 = OpShiftRightLogical %uint %250 %uint_2
        %252 = OpLoad %v4uint %249 None
        %253 = OpVectorShuffle %v2uint %252 %252 2 3
        %254 = OpVectorShuffle %v2uint %252 %252 0 1
        %255 = OpIEqual %bool %251 %uint_2
        %256 = OpCompositeConstruct %v2bool %255 %255
        %257 = OpSelect %v2uint %256 %253 %254
        %258 = OpBitcast %v2float %257
        %259 = OpCompositeConstruct %tint_ExternalTextureParams %151 %159 %161 %165 %169 %172 %176 %180 %194 %207 %220 %233 %245 %258
               OpReturnValue %259
               OpFunctionEnd
        %162 = OpFunction %mat3v4float None %261
%start_byte_offset_0 = OpFunctionParameter %uint
        %262 = OpLabel
        %263 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %264 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %263
        %265 = OpLoad %v4uint %264 None
        %266 = OpBitcast %v4float %265
        %267 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %268 = OpUDiv %uint %267 %uint_16
        %269 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %268
        %270 = OpLoad %v4uint %269 None
        %271 = OpBitcast %v4float %270
        %272 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %274 = OpUDiv %uint %272 %uint_16
        %275 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %274
        %276 = OpLoad %v4uint %275 None
        %277 = OpBitcast %v4float %276
        %278 = OpCompositeConstruct %mat3v4float %266 %271 %277
               OpReturnValue %278
               OpFunctionEnd
        %166 = OpFunction %tint_GammaTransferParams None %280
%start_byte_offset_1 = OpFunctionParameter %uint
        %281 = OpLabel
        %282 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %283 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %282
        %284 = OpBitwiseAnd %uint %start_byte_offset_1 %uint_15
        %285 = OpShiftRightLogical %uint %284 %uint_2
        %286 = OpLoad %v4uint %283 None
        %287 = OpVectorExtractDynamic %uint %286 %285
        %288 = OpBitcast %float %287
        %289 = OpIAdd %uint %uint_4 %start_byte_offset_1
        %290 = OpUDiv %uint %289 %uint_16
        %291 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %290
        %292 = OpBitwiseAnd %uint %289 %uint_15
        %293 = OpShiftRightLogical %uint %292 %uint_2
        %294 = OpLoad %v4uint %291 None
        %295 = OpVectorExtractDynamic %uint %294 %293
        %296 = OpBitcast %float %295
        %297 = OpIAdd %uint %uint_8 %start_byte_offset_1
        %299 = OpUDiv %uint %297 %uint_16
        %300 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %299
        %301 = OpBitwiseAnd %uint %297 %uint_15
        %302 = OpShiftRightLogical %uint %301 %uint_2
        %303 = OpLoad %v4uint %300 None
        %304 = OpVectorExtractDynamic %uint %303 %302
        %305 = OpBitcast %float %304
        %306 = OpIAdd %uint %uint_12 %start_byte_offset_1
        %308 = OpUDiv %uint %306 %uint_16
        %309 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %308
        %310 = OpBitwiseAnd %uint %306 %uint_15
        %311 = OpShiftRightLogical %uint %310 %uint_2
        %312 = OpLoad %v4uint %309 None
        %313 = OpVectorExtractDynamic %uint %312 %311
        %314 = OpBitcast %float %313
        %315 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %316 = OpUDiv %uint %315 %uint_16
        %317 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %316
        %318 = OpBitwiseAnd %uint %315 %uint_15
        %319 = OpShiftRightLogical %uint %318 %uint_2
        %320 = OpLoad %v4uint %317 None
        %321 = OpVectorExtractDynamic %uint %320 %319
        %322 = OpBitcast %float %321
        %323 = OpIAdd %uint %uint_20 %start_byte_offset_1
        %325 = OpUDiv %uint %323 %uint_16
        %326 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %325
        %327 = OpBitwiseAnd %uint %323 %uint_15
        %328 = OpShiftRightLogical %uint %327 %uint_2
        %329 = OpLoad %v4uint %326 None
        %330 = OpVectorExtractDynamic %uint %329 %328
        %331 = OpBitcast %float %330
        %332 = OpIAdd %uint %uint_24 %start_byte_offset_1
        %334 = OpUDiv %uint %332 %uint_16
        %335 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %334
        %336 = OpBitwiseAnd %uint %332 %uint_15
        %337 = OpShiftRightLogical %uint %336 %uint_2
        %338 = OpLoad %v4uint %335 None
        %339 = OpVectorExtractDynamic %uint %338 %337
        %340 = OpBitcast %float %339
        %341 = OpIAdd %uint %uint_28 %start_byte_offset_1
        %343 = OpUDiv %uint %341 %uint_16
        %344 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %343
        %345 = OpBitwiseAnd %uint %341 %uint_15
        %346 = OpShiftRightLogical %uint %345 %uint_2
        %347 = OpLoad %v4uint %344 None
        %348 = OpVectorExtractDynamic %uint %347 %346
        %349 = OpCompositeConstruct %tint_GammaTransferParams %288 %296 %305 %314 %322 %331 %340 %348
               OpReturnValue %349
               OpFunctionEnd
        %173 = OpFunction %mat3v3float None %351
%start_byte_offset_2 = OpFunctionParameter %uint
        %352 = OpLabel
        %353 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %354 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %353
        %355 = OpLoad %v4uint %354 None
        %356 = OpVectorShuffle %v3uint %355 %355 0 1 2
        %358 = OpBitcast %v3float %356
        %359 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %360 = OpUDiv %uint %359 %uint_16
        %361 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %360
        %362 = OpLoad %v4uint %361 None
        %363 = OpVectorShuffle %v3uint %362 %362 0 1 2
        %364 = OpBitcast %v3float %363
        %365 = OpIAdd %uint %uint_32 %start_byte_offset_2
        %366 = OpUDiv %uint %365 %uint_16
        %367 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %366
        %368 = OpLoad %v4uint %367 None
        %369 = OpVectorShuffle %v3uint %368 %368 0 1 2
        %370 = OpBitcast %v3float %369
        %371 = OpCompositeConstruct %mat3v3float %358 %364 %370
               OpReturnValue %371
               OpFunctionEnd
        %177 = OpFunction %mat3v2float None %373
%start_byte_offset_3 = OpFunctionParameter %uint
        %374 = OpLabel
        %375 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %376 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %375
        %377 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %378 = OpShiftRightLogical %uint %377 %uint_2
        %379 = OpLoad %v4uint %376 None
        %380 = OpVectorShuffle %v2uint %379 %379 2 3
        %381 = OpVectorShuffle %v2uint %379 %379 0 1
        %382 = OpIEqual %bool %378 %uint_2
        %383 = OpCompositeConstruct %v2bool %382 %382
        %384 = OpSelect %v2uint %383 %380 %381
        %385 = OpBitcast %v2float %384
        %386 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %387 = OpUDiv %uint %386 %uint_16
        %388 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %387
        %389 = OpBitwiseAnd %uint %386 %uint_15
        %390 = OpShiftRightLogical %uint %389 %uint_2
        %391 = OpLoad %v4uint %388 None
        %392 = OpVectorShuffle %v2uint %391 %391 2 3
        %393 = OpVectorShuffle %v2uint %391 %391 0 1
        %394 = OpIEqual %bool %390 %uint_2
        %395 = OpCompositeConstruct %v2bool %394 %394
        %396 = OpSelect %v2uint %395 %392 %393
        %397 = OpBitcast %v2float %396
        %398 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %399 = OpUDiv %uint %398 %uint_16
        %400 = OpAccessChain %_ptr_Uniform_v4uint %10 %uint_0 %399
        %401 = OpBitwiseAnd %uint %398 %uint_15
        %402 = OpShiftRightLogical %uint %401 %uint_2
        %403 = OpLoad %v4uint %400 None
        %404 = OpVectorShuffle %v2uint %403 %403 2 3
        %405 = OpVectorShuffle %v2uint %403 %403 0 1
        %406 = OpIEqual %bool %402 %uint_2
        %407 = OpCompositeConstruct %v2bool %406 %406
        %408 = OpSelect %v2uint %407 %404 %405
        %409 = OpBitcast %v2float %408
        %410 = OpCompositeConstruct %mat3v2float %385 %397 %409
               OpReturnValue %410
               OpFunctionEnd
;
; vertex_main
;
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 425
; Schema: 0
               OpCapability Shader
         %49 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %vertex_main "vertex_main" %vertex_main_position_Output %vertex_main_loc0_Output %vertex_main___point_size_Output
               OpName %arg_0_plane0 "arg_0_plane0"
               OpName %arg_0_plane1 "arg_0_plane1"
               OpMemberName %arg_0_params_block_tint_explicit_layout 0 "inner"
               OpName %arg_0_params_block_tint_explicit_layout "arg_0_params_block_tint_explicit_layout"
               OpName %vertex_main_position_Output "vertex_main_position_Output"
               OpName %vertex_main_loc0_Output "vertex_main_loc0_Output"
               OpName %vertex_main___point_size_Output "vertex_main___point_size_Output"
               OpName %textureLoad_8acf41 "textureLoad_8acf41"
               OpName %arg_1 "arg_1"
               OpMemberName %tint_ExternalTextureParams 0 "numPlanes"
               OpMemberName %tint_ExternalTextureParams 1 "doYuvToRgbConversionOnly"
               OpMemberName %tint_ExternalTextureParams 2 "yuvToRgbConversionMatrix"
               OpMemberName %tint_GammaTransferParams 0 "G"
               OpMemberName %tint_GammaTransferParams 1 "A"
               OpMemberName %tint_GammaTransferParams 2 "B"
               OpMemberName %tint_GammaTransferParams 3 "C"
               OpMemberName %tint_GammaTransferParams 4 "D"
               OpMemberName %tint_GammaTransferParams 5 "E"
               OpMemberName %tint_GammaTransferParams 6 "F"
               OpMemberName %tint_GammaTransferParams 7 "padding"
               OpName %tint_GammaTransferParams "tint_GammaTransferParams"
               OpMemberName %tint_ExternalTextureParams 3 "gammaDecodeParams"
               OpMemberName %tint_ExternalTextureParams 4 "gammaEncodeParams"
               OpMemberName %tint_ExternalTextureParams 5 "gamutConversionMatrix"
               OpMemberName %tint_ExternalTextureParams 6 "sampleTransform"
               OpMemberName %tint_ExternalTextureParams 7 "loadTransform"
               OpMemberName %tint_ExternalTextureParams 8 "samplePlane0RectMin"
               OpMemberName %tint_ExternalTextureParams 9 "samplePlane0RectMax"
               OpMemberName %tint_ExternalTextureParams 10 "samplePlane1RectMin"
               OpMemberName %tint_ExternalTextureParams 11 "samplePlane1RectMax"
               OpMemberName %tint_ExternalTextureParams 12 "apparentSize"
               OpMemberName %tint_ExternalTextureParams 13 "plane1CoordFactor"
               OpName %tint_ExternalTextureParams "tint_ExternalTextureParams"
               OpName %res "res"
               OpName %vertex_main_inner "vertex_main_inner"
               OpMemberName %VertexOutput 0 "pos"
               OpMemberName %VertexOutput 1 "prevent_dce"
               OpName %VertexOutput "VertexOutput"
               OpName %out "out"
               OpName %tint_TextureLoadExternal "tint_TextureLoadExternal"
               OpName %plane_0 "plane_0"
               OpName %plane_1 "plane_1"
               OpName %params "params"
               OpName %coords "coords"
               OpName %tint_GammaCorrection "tint_GammaCorrection"
               OpName %v "v"
               OpName %params_0 "params"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpName %vertex_main "vertex_main"
               OpDecorate %arg_0_plane0 DescriptorSet 1
               OpDecorate %arg_0_plane0 Binding 0
               OpDecorate %arg_0_plane1 DescriptorSet 1
               OpDecorate %arg_0_plane1 Binding 1
               OpDecorate %_arr_v4uint_uint_17 ArrayStride 16
               OpMemberDecorate %arg_0_params_block_tint_explicit_layout 0 Offset 0
               OpDecorate %arg_0_params_block_tint_explicit_layout Block
               OpDecorate %6 DescriptorSet 1
               OpDecorate %6 Binding 2
               OpDecorate %6 NonWritable
               OpDecorate %vertex_main_position_Output BuiltIn Position
               OpDecorate %vertex_main_loc0_Output Location 0
               OpDecorate %vertex_main_loc0_Output Flat
               OpDecorate %vertex_main___point_size_Output BuiltIn PointSize
      %float = OpTypeFloat 32
          %3 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_3 = OpTypePointer UniformConstant %3
%arg_0_plane0 = OpVariable %_ptr_UniformConstant_3 UniformConstant
%arg_0_plane1 = OpVariable %_ptr_UniformConstant_3 UniformConstant
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_17 = OpConstant %uint 17
%_arr_v4uint_uint_17 = OpTypeArray %v4uint %uint_17
%arg_0_params_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_17
%_ptr_Uniform_arg_0_params_block_tint_explicit_layout = OpTypePointer Uniform %arg_0_params_block_tint_explicit_layout
          %6 = OpVariable %_ptr_Uniform_arg_0_params_block_tint_explicit_layout Uniform
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
%vertex_main_position_Output = OpVariable %_ptr_Output_v4float Output
%vertex_main_loc0_Output = OpVariable %_ptr_Output_v4float Output
%_ptr_Output_float = OpTypePointer Output %float
%vertex_main___point_size_Output = OpVariable %_ptr_Output_float Output
         %20 = OpTypeFunction %v4float
        %int = OpTypeInt 32 1
      %v2int = OpTypeVector %int 2
%_ptr_Function_v2int = OpTypePointer Function %v2int
      %int_1 = OpConstant %int 1
         %26 = OpConstantComposite %v2int %int_1 %int_1
%mat3v4float = OpTypeMatrix %v4float 3
%tint_GammaTransferParams = OpTypeStruct %float %float %float %float %float %float %float %uint
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
     %v2uint = OpTypeVector %uint 2
%tint_ExternalTextureParams = OpTypeStruct %uint %uint %mat3v4float %tint_GammaTransferParams %tint_GammaTransferParams %mat3v3float %mat3v2float %mat3v2float %v2float %v2float %v2float %v2float %v2uint %v2float
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
         %44 = OpConstantComposite %v2uint %uint_1 %uint_1
%_ptr_Function_v4float = OpTypePointer Function %v4float
%VertexOutput = OpTypeStruct %v4float %v4float
         %57 = OpTypeFunction %VertexOutput
%_ptr_Function_VertexOutput = OpTypePointer Function %VertexOutput
         %61 = OpConstantNull %VertexOutput
         %63 = OpConstantNull %v4float
         %71 = OpTypeFunction %v4float %3 %3 %tint_ExternalTextureParams %v2uint
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
        %119 = OpTypeFunction %v3float %v3float %tint_GammaTransferParams
     %v3bool = OpTypeVector %bool 3
        %147 = OpTypeFunction %tint_ExternalTextureParams %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
    %uint_64 = OpConstant %uint 64
    %uint_96 = OpConstant %uint 96
   %uint_128 = OpConstant %uint 128
   %uint_176 = OpConstant %uint 176
   %uint_200 = OpConstant %uint 200
   %uint_224 = OpConstant %uint 224
     %v2bool = OpTypeVector %bool 2
   %uint_232 = OpConstant %uint 232
   %uint_240 = OpConstant %uint 240
   %uint_248 = OpConstant %uint 248
   %uint_256 = OpConstant %uint 256
   %uint_264 = OpConstant %uint 264
        %268 = OpTypeFunction %mat3v4float %uint
    %uint_32 = OpConstant %uint 32
        %287 = OpTypeFunction %tint_GammaTransferParams %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
    %uint_20 = OpConstant %uint 20
    %uint_24 = OpConstant %uint 24
    %uint_28 = OpConstant %uint 28
        %358 = OpTypeFunction %mat3v3float %uint
     %v3uint = OpTypeVector %uint 3
        %380 = OpTypeFunction %mat3v2float %uint
       %void = OpTypeVoid
        %420 = OpTypeFunction %void
%textureLoad_8acf41 = OpFunction %v4float None %20
         %21 = OpLabel
      %arg_1 = OpVariable %_ptr_Function_v2int Function
        %res = OpVariable %_ptr_Function_v4float Function
               OpStore %arg_1 %26
         %28 = OpLoad %3 %arg_0_plane0 None
         %29 = OpLoad %3 %arg_0_plane1 None
         %30 = OpFunctionCall %tint_ExternalTextureParams %39 %uint_0
         %41 = OpLoad %v2int %arg_1 None
         %42 = OpCompositeExtract %v2uint %30 12
         %43 = OpIAdd %v2uint %42 %44
         %46 = OpISub %v2uint %43 %44
         %47 = OpBitcast %v2uint %41
         %48 = OpExtInst %v2uint %49 UMin %47 %46
         %50 = OpFunctionCall %v4float %tint_TextureLoadExternal %28 %29 %30 %48
               OpStore %res %50
         %54 = OpLoad %v4float %res None
               OpReturnValue %54
               OpFunctionEnd
%vertex_main_inner = OpFunction %VertexOutput None %57
         %58 = OpLabel
        %out = OpVariable %_ptr_Function_VertexOutput Function %61
         %62 = OpAccessChain %_ptr_Function_v4float %out %uint_0
               OpStore %62 %63 None
         %64 = OpAccessChain %_ptr_Function_v4float %out %uint_1
         %65 = OpFunctionCall %v4float %textureLoad_8acf41
               OpStore %64 %65 None
         %66 = OpLoad %VertexOutput %out None
               OpReturnValue %66
               OpFunctionEnd
%tint_TextureLoadExternal = OpFunction %v4float None %71
    %plane_0 = OpFunctionParameter %3
    %plane_1 = OpFunctionParameter %3
     %params = OpFunctionParameter %tint_ExternalTextureParams
     %coords = OpFunctionParameter %v2uint
         %72 = OpLabel
         %73 = OpCompositeExtract %uint %params 1
         %74 = OpCompositeExtract %mat3v4float %params 2
         %75 = OpCompositeExtract %mat3v2float %params 7
         %76 = OpCompositeExtract %v2uint %params 12
         %77 = OpCompositeExtract %v2float %params 13
         %78 = OpExtInst %v2uint %49 UMin %coords %76
         %79 = OpConvertUToF %v2float %78
         %80 = OpCompositeConstruct %v3float %79 %float_1
         %82 = OpMatrixTimesVector %v2float %75 %80
         %83 = OpExtInst %v2float %49 RoundEven %82
         %84 = OpConvertFToU %v2uint %83
         %85 = OpCompositeExtract %uint %params 0
         %86 = OpIEqual %bool %85 %uint_1
               OpSelectionMerge %88 None
               OpBranchConditional %86 %89 %90
         %89 = OpLabel
        %103 = OpImageFetch %v4float %plane_0 %84 Lod %uint_0
         %92 = OpVectorShuffle %v3float %103 %103 0 1 2
         %95 = OpCompositeExtract %float %103 3
               OpBranch %88
         %90 = OpLabel
        %104 = OpImageFetch %v4float %plane_0 %84 Lod %uint_0
        %105 = OpCompositeExtract %float %104 0
        %106 = OpFMul %v2float %83 %77
        %107 = OpConvertFToU %v2uint %106
        %108 = OpImageFetch %v4float %plane_1 %107 Lod %uint_0
        %109 = OpVectorShuffle %v2float %108 %108 0 1
        %110 = OpCompositeConstruct %v4float %105 %109 %float_1
         %93 = OpVectorTimesMatrix %v3float %110 %74
               OpBranch %88
         %88 = OpLabel
         %91 = OpPhi %v3float %92 %89 %93 %90
         %94 = OpPhi %float %95 %89 %float_1 %90
         %96 = OpIEqual %bool %73 %uint_0
               OpSelectionMerge %97 None
               OpBranchConditional %96 %98 %99
         %98 = OpLabel
        %111 = OpCompositeExtract %tint_GammaTransferParams %params 3
        %112 = OpCompositeExtract %tint_GammaTransferParams %params 4
        %113 = OpCompositeExtract %mat3v3float %params 5
        %114 = OpFunctionCall %v3float %tint_GammaCorrection %91 %111
        %116 = OpMatrixTimesVector %v3float %113 %114
        %101 = OpFunctionCall %v3float %tint_GammaCorrection %116 %112
               OpBranch %97
         %99 = OpLabel
               OpBranch %97
         %97 = OpLabel
        %100 = OpPhi %v3float %101 %98 %91 %99
        %102 = OpCompositeConstruct %v4float %100 %94
               OpReturnValue %102
               OpFunctionEnd
%tint_GammaCorrection = OpFunction %v3float None %119
          %v = OpFunctionParameter %v3float
   %params_0 = OpFunctionParameter %tint_GammaTransferParams
        %120 = OpLabel
        %121 = OpCompositeExtract %float %params_0 0
        %122 = OpCompositeExtract %float %params_0 1
        %123 = OpCompositeExtract %float %params_0 2
        %124 = OpCompositeExtract %float %params_0 3
        %125 = OpCompositeExtract %float %params_0 4
        %126 = OpCompositeExtract %float %params_0 5
        %127 = OpCompositeExtract %float %params_0 6
        %128 = OpCompositeConstruct %v3float %121 %121 %121
        %129 = OpCompositeConstruct %v3float %125 %125 %125
        %130 = OpExtInst %v3float %49 FAbs %v
        %131 = OpExtInst %v3float %49 FSign %v
        %132 = OpFOrdLessThan %v3bool %130 %129
        %134 = OpVectorTimesScalar %v3float %130 %124
        %135 = OpCompositeConstruct %v3float %127 %127 %127
        %136 = OpFAdd %v3float %134 %135
        %137 = OpFMul %v3float %131 %136
        %138 = OpVectorTimesScalar %v3float %130 %122
        %139 = OpCompositeConstruct %v3float %123 %123 %123
        %140 = OpFAdd %v3float %138 %139
        %141 = OpExtInst %v3float %49 Pow %140 %128
        %142 = OpCompositeConstruct %v3float %126 %126 %126
        %143 = OpFAdd %v3float %141 %142
        %144 = OpFMul %v3float %131 %143
        %145 = OpSelect %v3float %132 %137 %144
               OpReturnValue %145
               OpFunctionEnd
         %39 = OpFunction %tint_ExternalTextureParams None %147
%start_byte_offset = OpFunctionParameter %uint
        %148 = OpLabel
        %149 = OpUDiv %uint %start_byte_offset %uint_16
        %151 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %149
        %153 = OpBitwiseAnd %uint %start_byte_offset %uint_15
        %155 = OpShiftRightLogical %uint %153 %uint_2
        %157 = OpLoad %v4uint %151 None
        %158 = OpVectorExtractDynamic %uint %157 %155
        %159 = OpIAdd %uint %uint_4 %start_byte_offset
        %161 = OpUDiv %uint %159 %uint_16
        %162 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %161
        %163 = OpBitwiseAnd %uint %159 %uint_15
        %164 = OpShiftRightLogical %uint %163 %uint_2
        %165 = OpLoad %v4uint %162 None
        %166 = OpVectorExtractDynamic %uint %165 %164
        %167 = OpIAdd %uint %uint_16 %start_byte_offset
        %168 = OpFunctionCall %mat3v4float %169 %167
        %170 = OpIAdd %uint %uint_64 %start_byte_offset
        %172 = OpFunctionCall %tint_GammaTransferParams %173 %170
        %174 = OpIAdd %uint %uint_96 %start_byte_offset
        %176 = OpFunctionCall %tint_GammaTransferParams %173 %174
        %177 = OpIAdd %uint %uint_128 %start_byte_offset
        %179 = OpFunctionCall %mat3v3float %180 %177
        %181 = OpIAdd %uint %uint_176 %start_byte_offset
        %183 = OpFunctionCall %mat3v2float %184 %181
        %185 = OpIAdd %uint %uint_200 %start_byte_offset
        %187 = OpFunctionCall %mat3v2float %184 %185
        %188 = OpIAdd %uint %uint_224 %start_byte_offset
        %190 = OpUDiv %uint %188 %uint_16
        %191 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %190
        %192 = OpBitwiseAnd %uint %188 %uint_15
        %193 = OpShiftRightLogical %uint %192 %uint_2
        %194 = OpLoad %v4uint %191 None
        %195 = OpVectorShuffle %v2uint %194 %194 2 3
        %196 = OpVectorShuffle %v2uint %194 %194 0 1
        %197 = OpIEqual %bool %193 %uint_2
        %199 = OpCompositeConstruct %v2bool %197 %197
        %200 = OpSelect %v2uint %199 %195 %196
        %201 = OpBitcast %v2float %200
        %202 = OpIAdd %uint %uint_232 %start_byte_offset
        %204 = OpUDiv %uint %202 %uint_16
        %205 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %204
        %206 = OpBitwiseAnd %uint %202 %uint_15
        %207 = OpShiftRightLogical %uint %206 %uint_2
        %208 = OpLoad %v4uint %205 None
        %209 = OpVectorShuffle %v2uint %208 %208 2 3
        %210 = OpVectorShuffle %v2uint %208 %208 0 1
        %211 = OpIEqual %bool %207 %uint_2
        %212 = OpCompositeConstruct %v2bool %211 %211
        %213 = OpSelect %v2uint %212 %209 %210
        %214 = OpBitcast %v2float %213
        %215 = OpIAdd %uint %uint_240 %start_byte_offset
        %217 = OpUDiv %uint %215 %uint_16
        %218 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %217
        %219 = OpBitwiseAnd %uint %215 %uint_15
        %220 = OpShiftRightLogical %uint %219 %uint_2
        %221 = OpLoad %v4uint %218 None
        %222 = OpVectorShuffle %v2uint %221 %221 2 3
        %223 = OpVectorShuffle %v2uint %221 %221 0 1
        %224 = OpIEqual %bool %220 %uint_2
        %225 = OpCompositeConstruct %v2bool %224 %224
        %226 = OpSelect %v2uint %225 %222 %223
        %227 = OpBitcast %v2float %226
        %228 = OpIAdd %uint %uint_248 %start_byte_offset
        %230 = OpUDiv %uint %228 %uint_16
        %231 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %230
        %232 = OpBitwiseAnd %uint %228 %uint_15
        %233 = OpShiftRightLogical %uint %232 %uint_2
        %234 = OpLoad %v4uint %231 None
        %235 = OpVectorShuffle %v2uint %234 %234 2 3
        %236 = OpVectorShuffle %v2uint %234 %234 0 1
        %237 = OpIEqual %bool %233 %uint_2
        %238 = OpCompositeConstruct %v2bool %237 %237
        %239 = OpSelect %v2uint %238 %235 %236
        %240 = OpBitcast %v2float %239
        %241 = OpIAdd %uint %uint_256 %start_byte_offset
        %243 = OpUDiv %uint %241 %uint_16
        %244 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %243
        %245 = OpBitwiseAnd %uint %241 %uint_15
        %246 = OpShiftRightLogical %uint %245 %uint_2
        %247 = OpLoad %v4uint %244 None
        %248 = OpVectorShuffle %v2uint %247 %247 2 3
        %249 = OpVectorShuffle %v2uint %247 %247 0 1
        %250 = OpIEqual %bool %246 %uint_2
        %251 = OpCompositeConstruct %v2bool %250 %250
        %252 = OpSelect %v2uint %251 %248 %249
        %253 = OpIAdd %uint %uint_264 %start_byte_offset
        %255 = OpUDiv %uint %253 %uint_16
        %256 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %255
        %257 = OpBitwiseAnd %uint %253 %uint_15
        %258 = OpShiftRightLogical %uint %257 %uint_2
        %259 = OpLoad %v4uint %256 None
        %260 = OpVectorShuffle %v2uint %259 %259 2 3
        %261 = OpVectorShuffle %v2uint %259 %259 0 1
        %262 = OpIEqual %bool %258 %uint_2
        %263 = OpCompositeConstruct %v2bool %262 %262
        %264 = OpSelect %v2uint %263 %260 %261
        %265 = OpBitcast %v2float %264
        %266 = OpCompositeConstruct %tint_ExternalTextureParams %158 %166 %168 %172 %176 %179 %183 %187 %201 %214 %227 %240 %252 %265
               OpReturnValue %266
               OpFunctionEnd
        %169 = OpFunction %mat3v4float None %268
%start_byte_offset_0 = OpFunctionParameter %uint
        %269 = OpLabel
        %270 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %271 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %270
        %272 = OpLoad %v4uint %271 None
        %273 = OpBitcast %v4float %272
        %274 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %275 = OpUDiv %uint %274 %uint_16
        %276 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %275
        %277 = OpLoad %v4uint %276 None
        %278 = OpBitcast %v4float %277
        %279 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %281 = OpUDiv %uint %279 %uint_16
        %282 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %281
        %283 = OpLoad %v4uint %282 None
        %284 = OpBitcast %v4float %283
        %285 = OpCompositeConstruct %mat3v4float %273 %278 %284
               OpReturnValue %285
               OpFunctionEnd
        %173 = OpFunction %tint_GammaTransferParams None %287
%start_byte_offset_1 = OpFunctionParameter %uint
        %288 = OpLabel
        %289 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %290 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %289
        %291 = OpBitwiseAnd %uint %start_byte_offset_1 %uint_15
        %292 = OpShiftRightLogical %uint %291 %uint_2
        %293 = OpLoad %v4uint %290 None
        %294 = OpVectorExtractDynamic %uint %293 %292
        %295 = OpBitcast %float %294
        %296 = OpIAdd %uint %uint_4 %start_byte_offset_1
        %297 = OpUDiv %uint %296 %uint_16
        %298 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %297
        %299 = OpBitwiseAnd %uint %296 %uint_15
        %300 = OpShiftRightLogical %uint %299 %uint_2
        %301 = OpLoad %v4uint %298 None
        %302 = OpVectorExtractDynamic %uint %301 %300
        %303 = OpBitcast %float %302
        %304 = OpIAdd %uint %uint_8 %start_byte_offset_1
        %306 = OpUDiv %uint %304 %uint_16
        %307 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %306
        %308 = OpBitwiseAnd %uint %304 %uint_15
        %309 = OpShiftRightLogical %uint %308 %uint_2
        %310 = OpLoad %v4uint %307 None
        %311 = OpVectorExtractDynamic %uint %310 %309
        %312 = OpBitcast %float %311
        %313 = OpIAdd %uint %uint_12 %start_byte_offset_1
        %315 = OpUDiv %uint %313 %uint_16
        %316 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %315
        %317 = OpBitwiseAnd %uint %313 %uint_15
        %318 = OpShiftRightLogical %uint %317 %uint_2
        %319 = OpLoad %v4uint %316 None
        %320 = OpVectorExtractDynamic %uint %319 %318
        %321 = OpBitcast %float %320
        %322 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %323 = OpUDiv %uint %322 %uint_16
        %324 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %323
        %325 = OpBitwiseAnd %uint %322 %uint_15
        %326 = OpShiftRightLogical %uint %325 %uint_2
        %327 = OpLoad %v4uint %324 None
        %328 = OpVectorExtractDynamic %uint %327 %326
        %329 = OpBitcast %float %328
        %330 = OpIAdd %uint %uint_20 %start_byte_offset_1
        %332 = OpUDiv %uint %330 %uint_16
        %333 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %332
        %334 = OpBitwiseAnd %uint %330 %uint_15
        %335 = OpShiftRightLogical %uint %334 %uint_2
        %336 = OpLoad %v4uint %333 None
        %337 = OpVectorExtractDynamic %uint %336 %335
        %338 = OpBitcast %float %337
        %339 = OpIAdd %uint %uint_24 %start_byte_offset_1
        %341 = OpUDiv %uint %339 %uint_16
        %342 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %341
        %343 = OpBitwiseAnd %uint %339 %uint_15
        %344 = OpShiftRightLogical %uint %343 %uint_2
        %345 = OpLoad %v4uint %342 None
        %346 = OpVectorExtractDynamic %uint %345 %344
        %347 = OpBitcast %float %346
        %348 = OpIAdd %uint %uint_28 %start_byte_offset_1
        %350 = OpUDiv %uint %348 %uint_16
        %351 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %350
        %352 = OpBitwiseAnd %uint %348 %uint_15
        %353 = OpShiftRightLogical %uint %352 %uint_2
        %354 = OpLoad %v4uint %351 None
        %355 = OpVectorExtractDynamic %uint %354 %353
        %356 = OpCompositeConstruct %tint_GammaTransferParams %295 %303 %312 %321 %329 %338 %347 %355
               OpReturnValue %356
               OpFunctionEnd
        %180 = OpFunction %mat3v3float None %358
%start_byte_offset_2 = OpFunctionParameter %uint
        %359 = OpLabel
        %360 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %361 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %360
        %362 = OpLoad %v4uint %361 None
        %363 = OpVectorShuffle %v3uint %362 %362 0 1 2
        %365 = OpBitcast %v3float %363
        %366 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %367 = OpUDiv %uint %366 %uint_16
        %368 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %367
        %369 = OpLoad %v4uint %368 None
        %370 = OpVectorShuffle %v3uint %369 %369 0 1 2
        %371 = OpBitcast %v3float %370
        %372 = OpIAdd %uint %uint_32 %start_byte_offset_2
        %373 = OpUDiv %uint %372 %uint_16
        %374 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %373
        %375 = OpLoad %v4uint %374 None
        %376 = OpVectorShuffle %v3uint %375 %375 0 1 2
        %377 = OpBitcast %v3float %376
        %378 = OpCompositeConstruct %mat3v3float %365 %371 %377
               OpReturnValue %378
               OpFunctionEnd
        %184 = OpFunction %mat3v2float None %380
%start_byte_offset_3 = OpFunctionParameter %uint
        %381 = OpLabel
        %382 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %383 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %382
        %384 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %385 = OpShiftRightLogical %uint %384 %uint_2
        %386 = OpLoad %v4uint %383 None
        %387 = OpVectorShuffle %v2uint %386 %386 2 3
        %388 = OpVectorShuffle %v2uint %386 %386 0 1
        %389 = OpIEqual %bool %385 %uint_2
        %390 = OpCompositeConstruct %v2bool %389 %389
        %391 = OpSelect %v2uint %390 %387 %388
        %392 = OpBitcast %v2float %391
        %393 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %394 = OpUDiv %uint %393 %uint_16
        %395 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %394
        %396 = OpBitwiseAnd %uint %393 %uint_15
        %397 = OpShiftRightLogical %uint %396 %uint_2
        %398 = OpLoad %v4uint %395 None
        %399 = OpVectorShuffle %v2uint %398 %398 2 3
        %400 = OpVectorShuffle %v2uint %398 %398 0 1
        %401 = OpIEqual %bool %397 %uint_2
        %402 = OpCompositeConstruct %v2bool %401 %401
        %403 = OpSelect %v2uint %402 %399 %400
        %404 = OpBitcast %v2float %403
        %405 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %406 = OpUDiv %uint %405 %uint_16
        %407 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %406
        %408 = OpBitwiseAnd %uint %405 %uint_15
        %409 = OpShiftRightLogical %uint %408 %uint_2
        %410 = OpLoad %v4uint %407 None
        %411 = OpVectorShuffle %v2uint %410 %410 2 3
        %412 = OpVectorShuffle %v2uint %410 %410 0 1
        %413 = OpIEqual %bool %409 %uint_2
        %414 = OpCompositeConstruct %v2bool %413 %413
        %415 = OpSelect %v2uint %414 %411 %412
        %416 = OpBitcast %v2float %415
        %417 = OpCompositeConstruct %mat3v2float %392 %404 %416
               OpReturnValue %417
               OpFunctionEnd
%vertex_main = OpFunction %void None %420
        %421 = OpLabel
        %422 = OpFunctionCall %VertexOutput %vertex_main_inner
        %423 = OpCompositeExtract %v4float %422 0
               OpStore %vertex_main_position_Output %423 None
        %424 = OpCompositeExtract %v4float %422 1
               OpStore %vertex_main_loc0_Output %424 None
               OpStore %vertex_main___point_size_Output %float_1 None
               OpReturn
               OpFunctionEnd
