;
; fragment_main
;
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 320
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %fragment_main "fragment_main"
               OpExecutionMode %fragment_main OriginUpperLeft
               OpMemberName %prevent_dce_block 0 "inner"
               OpName %prevent_dce_block "prevent_dce_block"
               OpName %arg_0_plane0 "arg_0_plane0"
               OpName %arg_0_plane1 "arg_0_plane1"
               OpMemberName %arg_0_params_block_tint_explicit_layout 0 "inner"
               OpName %arg_0_params_block_tint_explicit_layout "arg_0_params_block_tint_explicit_layout"
               OpName %textureDimensions_cdc6c9 "textureDimensions_cdc6c9"
               OpMemberName %tint_ExternalTextureParams 0 "numPlanes"
               OpMemberName %tint_ExternalTextureParams 1 "doYuvToRgbConversionOnly"
               OpMemberName %tint_ExternalTextureParams 2 "yuvToRgbConversionMatrix"
               OpMemberName %tint_GammaTransferParams 0 "G"
               OpMemberName %tint_GammaTransferParams 1 "A"
               OpMemberName %tint_GammaTransferParams 2 "B"
               OpMemberName %tint_GammaTransferParams 3 "C"
               OpMemberName %tint_GammaTransferParams 4 "D"
               OpMemberName %tint_GammaTransferParams 5 "E"
               OpMemberName %tint_GammaTransferParams 6 "F"
               OpMemberName %tint_GammaTransferParams 7 "padding"
               OpName %tint_GammaTransferParams "tint_GammaTransferParams"
               OpMemberName %tint_ExternalTextureParams 3 "gammaDecodeParams"
               OpMemberName %tint_ExternalTextureParams 4 "gammaEncodeParams"
               OpMemberName %tint_ExternalTextureParams 5 "gamutConversionMatrix"
               OpMemberName %tint_ExternalTextureParams 6 "sampleTransform"
               OpMemberName %tint_ExternalTextureParams 7 "loadTransform"
               OpMemberName %tint_ExternalTextureParams 8 "samplePlane0RectMin"
               OpMemberName %tint_ExternalTextureParams 9 "samplePlane0RectMax"
               OpMemberName %tint_ExternalTextureParams 10 "samplePlane1RectMin"
               OpMemberName %tint_ExternalTextureParams 11 "samplePlane1RectMax"
               OpMemberName %tint_ExternalTextureParams 12 "apparentSize"
               OpMemberName %tint_ExternalTextureParams 13 "plane1CoordFactor"
               OpName %tint_ExternalTextureParams "tint_ExternalTextureParams"
               OpName %res "res"
               OpName %fragment_main "fragment_main"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpMemberDecorate %prevent_dce_block 0 Offset 0
               OpDecorate %prevent_dce_block Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %arg_0_plane0 DescriptorSet 1
               OpDecorate %arg_0_plane0 Binding 0
               OpDecorate %arg_0_plane1 DescriptorSet 1
               OpDecorate %arg_0_plane1 Binding 1
               OpDecorate %_arr_v4uint_uint_17 ArrayStride 16
               OpMemberDecorate %arg_0_params_block_tint_explicit_layout 0 Offset 0
               OpDecorate %arg_0_params_block_tint_explicit_layout Block
               OpDecorate %11 DescriptorSet 1
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
       %uint = OpTypeInt 32 0
     %v2uint = OpTypeVector %uint 2
%prevent_dce_block = OpTypeStruct %v2uint
%_ptr_StorageBuffer_prevent_dce_block = OpTypePointer StorageBuffer %prevent_dce_block
          %1 = OpVariable %_ptr_StorageBuffer_prevent_dce_block StorageBuffer
      %float = OpTypeFloat 32
          %8 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_8 = OpTypePointer UniformConstant %8
%arg_0_plane0 = OpVariable %_ptr_UniformConstant_8 UniformConstant
%arg_0_plane1 = OpVariable %_ptr_UniformConstant_8 UniformConstant
     %v4uint = OpTypeVector %uint 4
    %uint_17 = OpConstant %uint 17
%_arr_v4uint_uint_17 = OpTypeArray %v4uint %uint_17
%arg_0_params_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_17
%_ptr_Uniform_arg_0_params_block_tint_explicit_layout = OpTypePointer Uniform %arg_0_params_block_tint_explicit_layout
         %11 = OpVariable %_ptr_Uniform_arg_0_params_block_tint_explicit_layout Uniform
         %18 = OpTypeFunction %v2uint
    %v4float = OpTypeVector %float 4
%mat3v4float = OpTypeMatrix %v4float 3
%tint_GammaTransferParams = OpTypeStruct %float %float %float %float %float %float %float %uint
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
%tint_ExternalTextureParams = OpTypeStruct %uint %uint %mat3v4float %tint_GammaTransferParams %tint_GammaTransferParams %mat3v3float %mat3v2float %mat3v2float %v2float %v2float %v2float %v2float %v2uint %v2float
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
         %35 = OpConstantComposite %v2uint %uint_1 %uint_1
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
       %void = OpTypeVoid
         %42 = OpTypeFunction %void
%_ptr_StorageBuffer_v2uint = OpTypePointer StorageBuffer %v2uint
         %48 = OpTypeFunction %tint_ExternalTextureParams %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
    %uint_64 = OpConstant %uint 64
    %uint_96 = OpConstant %uint 96
   %uint_128 = OpConstant %uint 128
   %uint_176 = OpConstant %uint 176
   %uint_200 = OpConstant %uint 200
   %uint_224 = OpConstant %uint 224
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
   %uint_232 = OpConstant %uint 232
   %uint_240 = OpConstant %uint 240
   %uint_248 = OpConstant %uint 248
   %uint_256 = OpConstant %uint 256
   %uint_264 = OpConstant %uint 264
        %170 = OpTypeFunction %mat3v4float %uint
    %uint_32 = OpConstant %uint 32
        %189 = OpTypeFunction %tint_GammaTransferParams %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
    %uint_20 = OpConstant %uint 20
    %uint_24 = OpConstant %uint 24
    %uint_28 = OpConstant %uint 28
        %260 = OpTypeFunction %mat3v3float %uint
     %v3uint = OpTypeVector %uint 3
        %282 = OpTypeFunction %mat3v2float %uint
%textureDimensions_cdc6c9 = OpFunction %v2uint None %18
         %19 = OpLabel
        %res = OpVariable %_ptr_Function_v2uint Function
         %20 = OpLoad %8 %arg_0_plane0 None
         %21 = OpLoad %8 %arg_0_plane1 None
         %22 = OpFunctionCall %tint_ExternalTextureParams %31 %uint_0
         %33 = OpCompositeExtract %v2uint %22 12
         %34 = OpIAdd %v2uint %33 %35
               OpStore %res %34
         %39 = OpLoad %v2uint %res None
               OpReturnValue %39
               OpFunctionEnd
%fragment_main = OpFunction %void None %42
         %43 = OpLabel
         %44 = OpFunctionCall %v2uint %textureDimensions_cdc6c9
         %45 = OpAccessChain %_ptr_StorageBuffer_v2uint %1 %uint_0
               OpStore %45 %44 None
               OpReturn
               OpFunctionEnd
         %31 = OpFunction %tint_ExternalTextureParams None %48
%start_byte_offset = OpFunctionParameter %uint
         %49 = OpLabel
         %50 = OpUDiv %uint %start_byte_offset %uint_16
         %52 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %50
         %54 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %56 = OpShiftRightLogical %uint %54 %uint_2
         %58 = OpLoad %v4uint %52 None
         %59 = OpVectorExtractDynamic %uint %58 %56
         %60 = OpIAdd %uint %uint_4 %start_byte_offset
         %62 = OpUDiv %uint %60 %uint_16
         %63 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %62
         %64 = OpBitwiseAnd %uint %60 %uint_15
         %65 = OpShiftRightLogical %uint %64 %uint_2
         %66 = OpLoad %v4uint %63 None
         %67 = OpVectorExtractDynamic %uint %66 %65
         %68 = OpIAdd %uint %uint_16 %start_byte_offset
         %69 = OpFunctionCall %mat3v4float %70 %68
         %71 = OpIAdd %uint %uint_64 %start_byte_offset
         %73 = OpFunctionCall %tint_GammaTransferParams %74 %71
         %75 = OpIAdd %uint %uint_96 %start_byte_offset
         %77 = OpFunctionCall %tint_GammaTransferParams %74 %75
         %78 = OpIAdd %uint %uint_128 %start_byte_offset
         %80 = OpFunctionCall %mat3v3float %81 %78
         %82 = OpIAdd %uint %uint_176 %start_byte_offset
         %84 = OpFunctionCall %mat3v2float %85 %82
         %86 = OpIAdd %uint %uint_200 %start_byte_offset
         %88 = OpFunctionCall %mat3v2float %85 %86
         %89 = OpIAdd %uint %uint_224 %start_byte_offset
         %91 = OpUDiv %uint %89 %uint_16
         %92 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %91
         %93 = OpBitwiseAnd %uint %89 %uint_15
         %94 = OpShiftRightLogical %uint %93 %uint_2
         %95 = OpLoad %v4uint %92 None
         %96 = OpVectorShuffle %v2uint %95 %95 2 3
         %97 = OpVectorShuffle %v2uint %95 %95 0 1
         %98 = OpIEqual %bool %94 %uint_2
        %101 = OpCompositeConstruct %v2bool %98 %98
        %102 = OpSelect %v2uint %101 %96 %97
        %103 = OpBitcast %v2float %102
        %104 = OpIAdd %uint %uint_232 %start_byte_offset
        %106 = OpUDiv %uint %104 %uint_16
        %107 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %106
        %108 = OpBitwiseAnd %uint %104 %uint_15
        %109 = OpShiftRightLogical %uint %108 %uint_2
        %110 = OpLoad %v4uint %107 None
        %111 = OpVectorShuffle %v2uint %110 %110 2 3
        %112 = OpVectorShuffle %v2uint %110 %110 0 1
        %113 = OpIEqual %bool %109 %uint_2
        %114 = OpCompositeConstruct %v2bool %113 %113
        %115 = OpSelect %v2uint %114 %111 %112
        %116 = OpBitcast %v2float %115
        %117 = OpIAdd %uint %uint_240 %start_byte_offset
        %119 = OpUDiv %uint %117 %uint_16
        %120 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %119
        %121 = OpBitwiseAnd %uint %117 %uint_15
        %122 = OpShiftRightLogical %uint %121 %uint_2
        %123 = OpLoad %v4uint %120 None
        %124 = OpVectorShuffle %v2uint %123 %123 2 3
        %125 = OpVectorShuffle %v2uint %123 %123 0 1
        %126 = OpIEqual %bool %122 %uint_2
        %127 = OpCompositeConstruct %v2bool %126 %126
        %128 = OpSelect %v2uint %127 %124 %125
        %129 = OpBitcast %v2float %128
        %130 = OpIAdd %uint %uint_248 %start_byte_offset
        %132 = OpUDiv %uint %130 %uint_16
        %133 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %132
        %134 = OpBitwiseAnd %uint %130 %uint_15
        %135 = OpShiftRightLogical %uint %134 %uint_2
        %136 = OpLoad %v4uint %133 None
        %137 = OpVectorShuffle %v2uint %136 %136 2 3
        %138 = OpVectorShuffle %v2uint %136 %136 0 1
        %139 = OpIEqual %bool %135 %uint_2
        %140 = OpCompositeConstruct %v2bool %139 %139
        %141 = OpSelect %v2uint %140 %137 %138
        %142 = OpBitcast %v2float %141
        %143 = OpIAdd %uint %uint_256 %start_byte_offset
        %145 = OpUDiv %uint %143 %uint_16
        %146 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %145
        %147 = OpBitwiseAnd %uint %143 %uint_15
        %148 = OpShiftRightLogical %uint %147 %uint_2
        %149 = OpLoad %v4uint %146 None
        %150 = OpVectorShuffle %v2uint %149 %149 2 3
        %151 = OpVectorShuffle %v2uint %149 %149 0 1
        %152 = OpIEqual %bool %148 %uint_2
        %153 = OpCompositeConstruct %v2bool %152 %152
        %154 = OpSelect %v2uint %153 %150 %151
        %155 = OpIAdd %uint %uint_264 %start_byte_offset
        %157 = OpUDiv %uint %155 %uint_16
        %158 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %157
        %159 = OpBitwiseAnd %uint %155 %uint_15
        %160 = OpShiftRightLogical %uint %159 %uint_2
        %161 = OpLoad %v4uint %158 None
        %162 = OpVectorShuffle %v2uint %161 %161 2 3
        %163 = OpVectorShuffle %v2uint %161 %161 0 1
        %164 = OpIEqual %bool %160 %uint_2
        %165 = OpCompositeConstruct %v2bool %164 %164
        %166 = OpSelect %v2uint %165 %162 %163
        %167 = OpBitcast %v2float %166
        %168 = OpCompositeConstruct %tint_ExternalTextureParams %59 %67 %69 %73 %77 %80 %84 %88 %103 %116 %129 %142 %154 %167
               OpReturnValue %168
               OpFunctionEnd
         %70 = OpFunction %mat3v4float None %170
%start_byte_offset_0 = OpFunctionParameter %uint
        %171 = OpLabel
        %172 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %173 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %172
        %174 = OpLoad %v4uint %173 None
        %175 = OpBitcast %v4float %174
        %176 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %177 = OpUDiv %uint %176 %uint_16
        %178 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %177
        %179 = OpLoad %v4uint %178 None
        %180 = OpBitcast %v4float %179
        %181 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %183 = OpUDiv %uint %181 %uint_16
        %184 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %183
        %185 = OpLoad %v4uint %184 None
        %186 = OpBitcast %v4float %185
        %187 = OpCompositeConstruct %mat3v4float %175 %180 %186
               OpReturnValue %187
               OpFunctionEnd
         %74 = OpFunction %tint_GammaTransferParams None %189
%start_byte_offset_1 = OpFunctionParameter %uint
        %190 = OpLabel
        %191 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %192 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %191
        %193 = OpBitwiseAnd %uint %start_byte_offset_1 %uint_15
        %194 = OpShiftRightLogical %uint %193 %uint_2
        %195 = OpLoad %v4uint %192 None
        %196 = OpVectorExtractDynamic %uint %195 %194
        %197 = OpBitcast %float %196
        %198 = OpIAdd %uint %uint_4 %start_byte_offset_1
        %199 = OpUDiv %uint %198 %uint_16
        %200 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %199
        %201 = OpBitwiseAnd %uint %198 %uint_15
        %202 = OpShiftRightLogical %uint %201 %uint_2
        %203 = OpLoad %v4uint %200 None
        %204 = OpVectorExtractDynamic %uint %203 %202
        %205 = OpBitcast %float %204
        %206 = OpIAdd %uint %uint_8 %start_byte_offset_1
        %208 = OpUDiv %uint %206 %uint_16
        %209 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %208
        %210 = OpBitwiseAnd %uint %206 %uint_15
        %211 = OpShiftRightLogical %uint %210 %uint_2
        %212 = OpLoad %v4uint %209 None
        %213 = OpVectorExtractDynamic %uint %212 %211
        %214 = OpBitcast %float %213
        %215 = OpIAdd %uint %uint_12 %start_byte_offset_1
        %217 = OpUDiv %uint %215 %uint_16
        %218 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %217
        %219 = OpBitwiseAnd %uint %215 %uint_15
        %220 = OpShiftRightLogical %uint %219 %uint_2
        %221 = OpLoad %v4uint %218 None
        %222 = OpVectorExtractDynamic %uint %221 %220
        %223 = OpBitcast %float %222
        %224 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %225 = OpUDiv %uint %224 %uint_16
        %226 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %225
        %227 = OpBitwiseAnd %uint %224 %uint_15
        %228 = OpShiftRightLogical %uint %227 %uint_2
        %229 = OpLoad %v4uint %226 None
        %230 = OpVectorExtractDynamic %uint %229 %228
        %231 = OpBitcast %float %230
        %232 = OpIAdd %uint %uint_20 %start_byte_offset_1
        %234 = OpUDiv %uint %232 %uint_16
        %235 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %234
        %236 = OpBitwiseAnd %uint %232 %uint_15
        %237 = OpShiftRightLogical %uint %236 %uint_2
        %238 = OpLoad %v4uint %235 None
        %239 = OpVectorExtractDynamic %uint %238 %237
        %240 = OpBitcast %float %239
        %241 = OpIAdd %uint %uint_24 %start_byte_offset_1
        %243 = OpUDiv %uint %241 %uint_16
        %244 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %243
        %245 = OpBitwiseAnd %uint %241 %uint_15
        %246 = OpShiftRightLogical %uint %245 %uint_2
        %247 = OpLoad %v4uint %244 None
        %248 = OpVectorExtractDynamic %uint %247 %246
        %249 = OpBitcast %float %248
        %250 = OpIAdd %uint %uint_28 %start_byte_offset_1
        %252 = OpUDiv %uint %250 %uint_16
        %253 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %252
        %254 = OpBitwiseAnd %uint %250 %uint_15
        %255 = OpShiftRightLogical %uint %254 %uint_2
        %256 = OpLoad %v4uint %253 None
        %257 = OpVectorExtractDynamic %uint %256 %255
        %258 = OpCompositeConstruct %tint_GammaTransferParams %197 %205 %214 %223 %231 %240 %249 %257
               OpReturnValue %258
               OpFunctionEnd
         %81 = OpFunction %mat3v3float None %260
%start_byte_offset_2 = OpFunctionParameter %uint
        %261 = OpLabel
        %262 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %263 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %262
        %264 = OpLoad %v4uint %263 None
        %265 = OpVectorShuffle %v3uint %264 %264 0 1 2
        %267 = OpBitcast %v3float %265
        %268 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %269 = OpUDiv %uint %268 %uint_16
        %270 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %269
        %271 = OpLoad %v4uint %270 None
        %272 = OpVectorShuffle %v3uint %271 %271 0 1 2
        %273 = OpBitcast %v3float %272
        %274 = OpIAdd %uint %uint_32 %start_byte_offset_2
        %275 = OpUDiv %uint %274 %uint_16
        %276 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %275
        %277 = OpLoad %v4uint %276 None
        %278 = OpVectorShuffle %v3uint %277 %277 0 1 2
        %279 = OpBitcast %v3float %278
        %280 = OpCompositeConstruct %mat3v3float %267 %273 %279
               OpReturnValue %280
               OpFunctionEnd
         %85 = OpFunction %mat3v2float None %282
%start_byte_offset_3 = OpFunctionParameter %uint
        %283 = OpLabel
        %284 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %285 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %284
        %286 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %287 = OpShiftRightLogical %uint %286 %uint_2
        %288 = OpLoad %v4uint %285 None
        %289 = OpVectorShuffle %v2uint %288 %288 2 3
        %290 = OpVectorShuffle %v2uint %288 %288 0 1
        %291 = OpIEqual %bool %287 %uint_2
        %292 = OpCompositeConstruct %v2bool %291 %291
        %293 = OpSelect %v2uint %292 %289 %290
        %294 = OpBitcast %v2float %293
        %295 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %296 = OpUDiv %uint %295 %uint_16
        %297 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %296
        %298 = OpBitwiseAnd %uint %295 %uint_15
        %299 = OpShiftRightLogical %uint %298 %uint_2
        %300 = OpLoad %v4uint %297 None
        %301 = OpVectorShuffle %v2uint %300 %300 2 3
        %302 = OpVectorShuffle %v2uint %300 %300 0 1
        %303 = OpIEqual %bool %299 %uint_2
        %304 = OpCompositeConstruct %v2bool %303 %303
        %305 = OpSelect %v2uint %304 %301 %302
        %306 = OpBitcast %v2float %305
        %307 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %308 = OpUDiv %uint %307 %uint_16
        %309 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %308
        %310 = OpBitwiseAnd %uint %307 %uint_15
        %311 = OpShiftRightLogical %uint %310 %uint_2
        %312 = OpLoad %v4uint %309 None
        %313 = OpVectorShuffle %v2uint %312 %312 2 3
        %314 = OpVectorShuffle %v2uint %312 %312 0 1
        %315 = OpIEqual %bool %311 %uint_2
        %316 = OpCompositeConstruct %v2bool %315 %315
        %317 = OpSelect %v2uint %316 %313 %314
        %318 = OpBitcast %v2float %317
        %319 = OpCompositeConstruct %mat3v2float %294 %306 %318
               OpReturnValue %319
               OpFunctionEnd
;
; compute_main
;
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 320
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %compute_main "compute_main"
               OpExecutionMode %compute_main LocalSize 1 1 1
               OpMemberName %prevent_dce_block 0 "inner"
               OpName %prevent_dce_block "prevent_dce_block"
               OpName %arg_0_plane0 "arg_0_plane0"
               OpName %arg_0_plane1 "arg_0_plane1"
               OpMemberName %arg_0_params_block_tint_explicit_layout 0 "inner"
               OpName %arg_0_params_block_tint_explicit_layout "arg_0_params_block_tint_explicit_layout"
               OpName %textureDimensions_cdc6c9 "textureDimensions_cdc6c9"
               OpMemberName %tint_ExternalTextureParams 0 "numPlanes"
               OpMemberName %tint_ExternalTextureParams 1 "doYuvToRgbConversionOnly"
               OpMemberName %tint_ExternalTextureParams 2 "yuvToRgbConversionMatrix"
               OpMemberName %tint_GammaTransferParams 0 "G"
               OpMemberName %tint_GammaTransferParams 1 "A"
               OpMemberName %tint_GammaTransferParams 2 "B"
               OpMemberName %tint_GammaTransferParams 3 "C"
               OpMemberName %tint_GammaTransferParams 4 "D"
               OpMemberName %tint_GammaTransferParams 5 "E"
               OpMemberName %tint_GammaTransferParams 6 "F"
               OpMemberName %tint_GammaTransferParams 7 "padding"
               OpName %tint_GammaTransferParams "tint_GammaTransferParams"
               OpMemberName %tint_ExternalTextureParams 3 "gammaDecodeParams"
               OpMemberName %tint_ExternalTextureParams 4 "gammaEncodeParams"
               OpMemberName %tint_ExternalTextureParams 5 "gamutConversionMatrix"
               OpMemberName %tint_ExternalTextureParams 6 "sampleTransform"
               OpMemberName %tint_ExternalTextureParams 7 "loadTransform"
               OpMemberName %tint_ExternalTextureParams 8 "samplePlane0RectMin"
               OpMemberName %tint_ExternalTextureParams 9 "samplePlane0RectMax"
               OpMemberName %tint_ExternalTextureParams 10 "samplePlane1RectMin"
               OpMemberName %tint_ExternalTextureParams 11 "samplePlane1RectMax"
               OpMemberName %tint_ExternalTextureParams 12 "apparentSize"
               OpMemberName %tint_ExternalTextureParams 13 "plane1CoordFactor"
               OpName %tint_ExternalTextureParams "tint_ExternalTextureParams"
               OpName %res "res"
               OpName %compute_main "compute_main"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpMemberDecorate %prevent_dce_block 0 Offset 0
               OpDecorate %prevent_dce_block Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpDecorate %arg_0_plane0 DescriptorSet 1
               OpDecorate %arg_0_plane0 Binding 0
               OpDecorate %arg_0_plane1 DescriptorSet 1
               OpDecorate %arg_0_plane1 Binding 1
               OpDecorate %_arr_v4uint_uint_17 ArrayStride 16
               OpMemberDecorate %arg_0_params_block_tint_explicit_layout 0 Offset 0
               OpDecorate %arg_0_params_block_tint_explicit_layout Block
               OpDecorate %11 DescriptorSet 1
               OpDecorate %11 Binding 2
               OpDecorate %11 NonWritable
       %uint = OpTypeInt 32 0
     %v2uint = OpTypeVector %uint 2
%prevent_dce_block = OpTypeStruct %v2uint
%_ptr_StorageBuffer_prevent_dce_block = OpTypePointer StorageBuffer %prevent_dce_block
          %1 = OpVariable %_ptr_StorageBuffer_prevent_dce_block StorageBuffer
      %float = OpTypeFloat 32
          %8 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_8 = OpTypePointer UniformConstant %8
%arg_0_plane0 = OpVariable %_ptr_UniformConstant_8 UniformConstant
%arg_0_plane1 = OpVariable %_ptr_UniformConstant_8 UniformConstant
     %v4uint = OpTypeVector %uint 4
    %uint_17 = OpConstant %uint 17
%_arr_v4uint_uint_17 = OpTypeArray %v4uint %uint_17
%arg_0_params_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_17
%_ptr_Uniform_arg_0_params_block_tint_explicit_layout = OpTypePointer Uniform %arg_0_params_block_tint_explicit_layout
         %11 = OpVariable %_ptr_Uniform_arg_0_params_block_tint_explicit_layout Uniform
         %18 = OpTypeFunction %v2uint
    %v4float = OpTypeVector %float 4
%mat3v4float = OpTypeMatrix %v4float 3
%tint_GammaTransferParams = OpTypeStruct %float %float %float %float %float %float %float %uint
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
%tint_ExternalTextureParams = OpTypeStruct %uint %uint %mat3v4float %tint_GammaTransferParams %tint_GammaTransferParams %mat3v3float %mat3v2float %mat3v2float %v2float %v2float %v2float %v2float %v2uint %v2float
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
         %35 = OpConstantComposite %v2uint %uint_1 %uint_1
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
       %void = OpTypeVoid
         %42 = OpTypeFunction %void
%_ptr_StorageBuffer_v2uint = OpTypePointer StorageBuffer %v2uint
         %48 = OpTypeFunction %tint_ExternalTextureParams %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
    %uint_64 = OpConstant %uint 64
    %uint_96 = OpConstant %uint 96
   %uint_128 = OpConstant %uint 128
   %uint_176 = OpConstant %uint 176
   %uint_200 = OpConstant %uint 200
   %uint_224 = OpConstant %uint 224
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
   %uint_232 = OpConstant %uint 232
   %uint_240 = OpConstant %uint 240
   %uint_248 = OpConstant %uint 248
   %uint_256 = OpConstant %uint 256
   %uint_264 = OpConstant %uint 264
        %170 = OpTypeFunction %mat3v4float %uint
    %uint_32 = OpConstant %uint 32
        %189 = OpTypeFunction %tint_GammaTransferParams %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
    %uint_20 = OpConstant %uint 20
    %uint_24 = OpConstant %uint 24
    %uint_28 = OpConstant %uint 28
        %260 = OpTypeFunction %mat3v3float %uint
     %v3uint = OpTypeVector %uint 3
        %282 = OpTypeFunction %mat3v2float %uint
%textureDimensions_cdc6c9 = OpFunction %v2uint None %18
         %19 = OpLabel
        %res = OpVariable %_ptr_Function_v2uint Function
         %20 = OpLoad %8 %arg_0_plane0 None
         %21 = OpLoad %8 %arg_0_plane1 None
         %22 = OpFunctionCall %tint_ExternalTextureParams %31 %uint_0
         %33 = OpCompositeExtract %v2uint %22 12
         %34 = OpIAdd %v2uint %33 %35
               OpStore %res %34
         %39 = OpLoad %v2uint %res None
               OpReturnValue %39
               OpFunctionEnd
%compute_main = OpFunction %void None %42
         %43 = OpLabel
         %44 = OpFunctionCall %v2uint %textureDimensions_cdc6c9
         %45 = OpAccessChain %_ptr_StorageBuffer_v2uint %1 %uint_0
               OpStore %45 %44 None
               OpReturn
               OpFunctionEnd
         %31 = OpFunction %tint_ExternalTextureParams None %48
%start_byte_offset = OpFunctionParameter %uint
         %49 = OpLabel
         %50 = OpUDiv %uint %start_byte_offset %uint_16
         %52 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %50
         %54 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %56 = OpShiftRightLogical %uint %54 %uint_2
         %58 = OpLoad %v4uint %52 None
         %59 = OpVectorExtractDynamic %uint %58 %56
         %60 = OpIAdd %uint %uint_4 %start_byte_offset
         %62 = OpUDiv %uint %60 %uint_16
         %63 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %62
         %64 = OpBitwiseAnd %uint %60 %uint_15
         %65 = OpShiftRightLogical %uint %64 %uint_2
         %66 = OpLoad %v4uint %63 None
         %67 = OpVectorExtractDynamic %uint %66 %65
         %68 = OpIAdd %uint %uint_16 %start_byte_offset
         %69 = OpFunctionCall %mat3v4float %70 %68
         %71 = OpIAdd %uint %uint_64 %start_byte_offset
         %73 = OpFunctionCall %tint_GammaTransferParams %74 %71
         %75 = OpIAdd %uint %uint_96 %start_byte_offset
         %77 = OpFunctionCall %tint_GammaTransferParams %74 %75
         %78 = OpIAdd %uint %uint_128 %start_byte_offset
         %80 = OpFunctionCall %mat3v3float %81 %78
         %82 = OpIAdd %uint %uint_176 %start_byte_offset
         %84 = OpFunctionCall %mat3v2float %85 %82
         %86 = OpIAdd %uint %uint_200 %start_byte_offset
         %88 = OpFunctionCall %mat3v2float %85 %86
         %89 = OpIAdd %uint %uint_224 %start_byte_offset
         %91 = OpUDiv %uint %89 %uint_16
         %92 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %91
         %93 = OpBitwiseAnd %uint %89 %uint_15
         %94 = OpShiftRightLogical %uint %93 %uint_2
         %95 = OpLoad %v4uint %92 None
         %96 = OpVectorShuffle %v2uint %95 %95 2 3
         %97 = OpVectorShuffle %v2uint %95 %95 0 1
         %98 = OpIEqual %bool %94 %uint_2
        %101 = OpCompositeConstruct %v2bool %98 %98
        %102 = OpSelect %v2uint %101 %96 %97
        %103 = OpBitcast %v2float %102
        %104 = OpIAdd %uint %uint_232 %start_byte_offset
        %106 = OpUDiv %uint %104 %uint_16
        %107 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %106
        %108 = OpBitwiseAnd %uint %104 %uint_15
        %109 = OpShiftRightLogical %uint %108 %uint_2
        %110 = OpLoad %v4uint %107 None
        %111 = OpVectorShuffle %v2uint %110 %110 2 3
        %112 = OpVectorShuffle %v2uint %110 %110 0 1
        %113 = OpIEqual %bool %109 %uint_2
        %114 = OpCompositeConstruct %v2bool %113 %113
        %115 = OpSelect %v2uint %114 %111 %112
        %116 = OpBitcast %v2float %115
        %117 = OpIAdd %uint %uint_240 %start_byte_offset
        %119 = OpUDiv %uint %117 %uint_16
        %120 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %119
        %121 = OpBitwiseAnd %uint %117 %uint_15
        %122 = OpShiftRightLogical %uint %121 %uint_2
        %123 = OpLoad %v4uint %120 None
        %124 = OpVectorShuffle %v2uint %123 %123 2 3
        %125 = OpVectorShuffle %v2uint %123 %123 0 1
        %126 = OpIEqual %bool %122 %uint_2
        %127 = OpCompositeConstruct %v2bool %126 %126
        %128 = OpSelect %v2uint %127 %124 %125
        %129 = OpBitcast %v2float %128
        %130 = OpIAdd %uint %uint_248 %start_byte_offset
        %132 = OpUDiv %uint %130 %uint_16
        %133 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %132
        %134 = OpBitwiseAnd %uint %130 %uint_15
        %135 = OpShiftRightLogical %uint %134 %uint_2
        %136 = OpLoad %v4uint %133 None
        %137 = OpVectorShuffle %v2uint %136 %136 2 3
        %138 = OpVectorShuffle %v2uint %136 %136 0 1
        %139 = OpIEqual %bool %135 %uint_2
        %140 = OpCompositeConstruct %v2bool %139 %139
        %141 = OpSelect %v2uint %140 %137 %138
        %142 = OpBitcast %v2float %141
        %143 = OpIAdd %uint %uint_256 %start_byte_offset
        %145 = OpUDiv %uint %143 %uint_16
        %146 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %145
        %147 = OpBitwiseAnd %uint %143 %uint_15
        %148 = OpShiftRightLogical %uint %147 %uint_2
        %149 = OpLoad %v4uint %146 None
        %150 = OpVectorShuffle %v2uint %149 %149 2 3
        %151 = OpVectorShuffle %v2uint %149 %149 0 1
        %152 = OpIEqual %bool %148 %uint_2
        %153 = OpCompositeConstruct %v2bool %152 %152
        %154 = OpSelect %v2uint %153 %150 %151
        %155 = OpIAdd %uint %uint_264 %start_byte_offset
        %157 = OpUDiv %uint %155 %uint_16
        %158 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %157
        %159 = OpBitwiseAnd %uint %155 %uint_15
        %160 = OpShiftRightLogical %uint %159 %uint_2
        %161 = OpLoad %v4uint %158 None
        %162 = OpVectorShuffle %v2uint %161 %161 2 3
        %163 = OpVectorShuffle %v2uint %161 %161 0 1
        %164 = OpIEqual %bool %160 %uint_2
        %165 = OpCompositeConstruct %v2bool %164 %164
        %166 = OpSelect %v2uint %165 %162 %163
        %167 = OpBitcast %v2float %166
        %168 = OpCompositeConstruct %tint_ExternalTextureParams %59 %67 %69 %73 %77 %80 %84 %88 %103 %116 %129 %142 %154 %167
               OpReturnValue %168
               OpFunctionEnd
         %70 = OpFunction %mat3v4float None %170
%start_byte_offset_0 = OpFunctionParameter %uint
        %171 = OpLabel
        %172 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %173 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %172
        %174 = OpLoad %v4uint %173 None
        %175 = OpBitcast %v4float %174
        %176 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %177 = OpUDiv %uint %176 %uint_16
        %178 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %177
        %179 = OpLoad %v4uint %178 None
        %180 = OpBitcast %v4float %179
        %181 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %183 = OpUDiv %uint %181 %uint_16
        %184 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %183
        %185 = OpLoad %v4uint %184 None
        %186 = OpBitcast %v4float %185
        %187 = OpCompositeConstruct %mat3v4float %175 %180 %186
               OpReturnValue %187
               OpFunctionEnd
         %74 = OpFunction %tint_GammaTransferParams None %189
%start_byte_offset_1 = OpFunctionParameter %uint
        %190 = OpLabel
        %191 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %192 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %191
        %193 = OpBitwiseAnd %uint %start_byte_offset_1 %uint_15
        %194 = OpShiftRightLogical %uint %193 %uint_2
        %195 = OpLoad %v4uint %192 None
        %196 = OpVectorExtractDynamic %uint %195 %194
        %197 = OpBitcast %float %196
        %198 = OpIAdd %uint %uint_4 %start_byte_offset_1
        %199 = OpUDiv %uint %198 %uint_16
        %200 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %199
        %201 = OpBitwiseAnd %uint %198 %uint_15
        %202 = OpShiftRightLogical %uint %201 %uint_2
        %203 = OpLoad %v4uint %200 None
        %204 = OpVectorExtractDynamic %uint %203 %202
        %205 = OpBitcast %float %204
        %206 = OpIAdd %uint %uint_8 %start_byte_offset_1
        %208 = OpUDiv %uint %206 %uint_16
        %209 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %208
        %210 = OpBitwiseAnd %uint %206 %uint_15
        %211 = OpShiftRightLogical %uint %210 %uint_2
        %212 = OpLoad %v4uint %209 None
        %213 = OpVectorExtractDynamic %uint %212 %211
        %214 = OpBitcast %float %213
        %215 = OpIAdd %uint %uint_12 %start_byte_offset_1
        %217 = OpUDiv %uint %215 %uint_16
        %218 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %217
        %219 = OpBitwiseAnd %uint %215 %uint_15
        %220 = OpShiftRightLogical %uint %219 %uint_2
        %221 = OpLoad %v4uint %218 None
        %222 = OpVectorExtractDynamic %uint %221 %220
        %223 = OpBitcast %float %222
        %224 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %225 = OpUDiv %uint %224 %uint_16
        %226 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %225
        %227 = OpBitwiseAnd %uint %224 %uint_15
        %228 = OpShiftRightLogical %uint %227 %uint_2
        %229 = OpLoad %v4uint %226 None
        %230 = OpVectorExtractDynamic %uint %229 %228
        %231 = OpBitcast %float %230
        %232 = OpIAdd %uint %uint_20 %start_byte_offset_1
        %234 = OpUDiv %uint %232 %uint_16
        %235 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %234
        %236 = OpBitwiseAnd %uint %232 %uint_15
        %237 = OpShiftRightLogical %uint %236 %uint_2
        %238 = OpLoad %v4uint %235 None
        %239 = OpVectorExtractDynamic %uint %238 %237
        %240 = OpBitcast %float %239
        %241 = OpIAdd %uint %uint_24 %start_byte_offset_1
        %243 = OpUDiv %uint %241 %uint_16
        %244 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %243
        %245 = OpBitwiseAnd %uint %241 %uint_15
        %246 = OpShiftRightLogical %uint %245 %uint_2
        %247 = OpLoad %v4uint %244 None
        %248 = OpVectorExtractDynamic %uint %247 %246
        %249 = OpBitcast %float %248
        %250 = OpIAdd %uint %uint_28 %start_byte_offset_1
        %252 = OpUDiv %uint %250 %uint_16
        %253 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %252
        %254 = OpBitwiseAnd %uint %250 %uint_15
        %255 = OpShiftRightLogical %uint %254 %uint_2
        %256 = OpLoad %v4uint %253 None
        %257 = OpVectorExtractDynamic %uint %256 %255
        %258 = OpCompositeConstruct %tint_GammaTransferParams %197 %205 %214 %223 %231 %240 %249 %257
               OpReturnValue %258
               OpFunctionEnd
         %81 = OpFunction %mat3v3float None %260
%start_byte_offset_2 = OpFunctionParameter %uint
        %261 = OpLabel
        %262 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %263 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %262
        %264 = OpLoad %v4uint %263 None
        %265 = OpVectorShuffle %v3uint %264 %264 0 1 2
        %267 = OpBitcast %v3float %265
        %268 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %269 = OpUDiv %uint %268 %uint_16
        %270 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %269
        %271 = OpLoad %v4uint %270 None
        %272 = OpVectorShuffle %v3uint %271 %271 0 1 2
        %273 = OpBitcast %v3float %272
        %274 = OpIAdd %uint %uint_32 %start_byte_offset_2
        %275 = OpUDiv %uint %274 %uint_16
        %276 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %275
        %277 = OpLoad %v4uint %276 None
        %278 = OpVectorShuffle %v3uint %277 %277 0 1 2
        %279 = OpBitcast %v3float %278
        %280 = OpCompositeConstruct %mat3v3float %267 %273 %279
               OpReturnValue %280
               OpFunctionEnd
         %85 = OpFunction %mat3v2float None %282
%start_byte_offset_3 = OpFunctionParameter %uint
        %283 = OpLabel
        %284 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %285 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %284
        %286 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %287 = OpShiftRightLogical %uint %286 %uint_2
        %288 = OpLoad %v4uint %285 None
        %289 = OpVectorShuffle %v2uint %288 %288 2 3
        %290 = OpVectorShuffle %v2uint %288 %288 0 1
        %291 = OpIEqual %bool %287 %uint_2
        %292 = OpCompositeConstruct %v2bool %291 %291
        %293 = OpSelect %v2uint %292 %289 %290
        %294 = OpBitcast %v2float %293
        %295 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %296 = OpUDiv %uint %295 %uint_16
        %297 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %296
        %298 = OpBitwiseAnd %uint %295 %uint_15
        %299 = OpShiftRightLogical %uint %298 %uint_2
        %300 = OpLoad %v4uint %297 None
        %301 = OpVectorShuffle %v2uint %300 %300 2 3
        %302 = OpVectorShuffle %v2uint %300 %300 0 1
        %303 = OpIEqual %bool %299 %uint_2
        %304 = OpCompositeConstruct %v2bool %303 %303
        %305 = OpSelect %v2uint %304 %301 %302
        %306 = OpBitcast %v2float %305
        %307 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %308 = OpUDiv %uint %307 %uint_16
        %309 = OpAccessChain %_ptr_Uniform_v4uint %11 %uint_0 %308
        %310 = OpBitwiseAnd %uint %307 %uint_15
        %311 = OpShiftRightLogical %uint %310 %uint_2
        %312 = OpLoad %v4uint %309 None
        %313 = OpVectorShuffle %v2uint %312 %312 2 3
        %314 = OpVectorShuffle %v2uint %312 %312 0 1
        %315 = OpIEqual %bool %311 %uint_2
        %316 = OpCompositeConstruct %v2bool %315 %315
        %317 = OpSelect %v2uint %316 %313 %314
        %318 = OpBitcast %v2float %317
        %319 = OpCompositeConstruct %mat3v2float %294 %306 %318
               OpReturnValue %319
               OpFunctionEnd
;
; vertex_main
;
; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 337
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %vertex_main "vertex_main" %vertex_main_position_Output %vertex_main_loc0_Output %vertex_main___point_size_Output
               OpName %arg_0_plane0 "arg_0_plane0"
               OpName %arg_0_plane1 "arg_0_plane1"
               OpMemberName %arg_0_params_block_tint_explicit_layout 0 "inner"
               OpName %arg_0_params_block_tint_explicit_layout "arg_0_params_block_tint_explicit_layout"
               OpName %vertex_main_position_Output "vertex_main_position_Output"
               OpName %vertex_main_loc0_Output "vertex_main_loc0_Output"
               OpName %vertex_main___point_size_Output "vertex_main___point_size_Output"
               OpName %textureDimensions_cdc6c9 "textureDimensions_cdc6c9"
               OpMemberName %tint_ExternalTextureParams 0 "numPlanes"
               OpMemberName %tint_ExternalTextureParams 1 "doYuvToRgbConversionOnly"
               OpMemberName %tint_ExternalTextureParams 2 "yuvToRgbConversionMatrix"
               OpMemberName %tint_GammaTransferParams 0 "G"
               OpMemberName %tint_GammaTransferParams 1 "A"
               OpMemberName %tint_GammaTransferParams 2 "B"
               OpMemberName %tint_GammaTransferParams 3 "C"
               OpMemberName %tint_GammaTransferParams 4 "D"
               OpMemberName %tint_GammaTransferParams 5 "E"
               OpMemberName %tint_GammaTransferParams 6 "F"
               OpMemberName %tint_GammaTransferParams 7 "padding"
               OpName %tint_GammaTransferParams "tint_GammaTransferParams"
               OpMemberName %tint_ExternalTextureParams 3 "gammaDecodeParams"
               OpMemberName %tint_ExternalTextureParams 4 "gammaEncodeParams"
               OpMemberName %tint_ExternalTextureParams 5 "gamutConversionMatrix"
               OpMemberName %tint_ExternalTextureParams 6 "sampleTransform"
               OpMemberName %tint_ExternalTextureParams 7 "loadTransform"
               OpMemberName %tint_ExternalTextureParams 8 "samplePlane0RectMin"
               OpMemberName %tint_ExternalTextureParams 9 "samplePlane0RectMax"
               OpMemberName %tint_ExternalTextureParams 10 "samplePlane1RectMin"
               OpMemberName %tint_ExternalTextureParams 11 "samplePlane1RectMax"
               OpMemberName %tint_ExternalTextureParams 12 "apparentSize"
               OpMemberName %tint_ExternalTextureParams 13 "plane1CoordFactor"
               OpName %tint_ExternalTextureParams "tint_ExternalTextureParams"
               OpName %res "res"
               OpName %vertex_main_inner "vertex_main_inner"
               OpMemberName %VertexOutput 0 "pos"
               OpMemberName %VertexOutput 1 "prevent_dce"
               OpName %VertexOutput "VertexOutput"
               OpName %out "out"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpName %vertex_main "vertex_main"
               OpDecorate %arg_0_plane0 DescriptorSet 1
               OpDecorate %arg_0_plane0 Binding 0
               OpDecorate %arg_0_plane1 DescriptorSet 1
               OpDecorate %arg_0_plane1 Binding 1
               OpDecorate %_arr_v4uint_uint_17 ArrayStride 16
               OpMemberDecorate %arg_0_params_block_tint_explicit_layout 0 Offset 0
               OpDecorate %arg_0_params_block_tint_explicit_layout Block
               OpDecorate %6 DescriptorSet 1
               OpDecorate %6 Binding 2
               OpDecorate %6 NonWritable
               OpDecorate %vertex_main_position_Output BuiltIn Position
               OpDecorate %vertex_main_loc0_Output Location 0
               OpDecorate %vertex_main_loc0_Output Flat
               OpDecorate %vertex_main___point_size_Output BuiltIn PointSize
      %float = OpTypeFloat 32
          %3 = OpTypeImage %float 2D 0 0 0 1 Unknown
%_ptr_UniformConstant_3 = OpTypePointer UniformConstant %3
%arg_0_plane0 = OpVariable %_ptr_UniformConstant_3 UniformConstant
%arg_0_plane1 = OpVariable %_ptr_UniformConstant_3 UniformConstant
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_17 = OpConstant %uint 17
%_arr_v4uint_uint_17 = OpTypeArray %v4uint %uint_17
%arg_0_params_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_17
%_ptr_Uniform_arg_0_params_block_tint_explicit_layout = OpTypePointer Uniform %arg_0_params_block_tint_explicit_layout
          %6 = OpVariable %_ptr_Uniform_arg_0_params_block_tint_explicit_layout Uniform
    %v4float = OpTypeVector %float 4
%_ptr_Output_v4float = OpTypePointer Output %v4float
%vertex_main_position_Output = OpVariable %_ptr_Output_v4float Output
     %v2uint = OpTypeVector %uint 2
%_ptr_Output_v2uint = OpTypePointer Output %v2uint
%vertex_main_loc0_Output = OpVariable %_ptr_Output_v2uint Output
%_ptr_Output_float = OpTypePointer Output %float
%vertex_main___point_size_Output = OpVariable %_ptr_Output_float Output
         %22 = OpTypeFunction %v2uint
%mat3v4float = OpTypeMatrix %v4float 3
%tint_GammaTransferParams = OpTypeStruct %float %float %float %float %float %float %float %uint
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
%tint_ExternalTextureParams = OpTypeStruct %uint %uint %mat3v4float %tint_GammaTransferParams %tint_GammaTransferParams %mat3v3float %mat3v2float %mat3v2float %v2float %v2float %v2float %v2float %v2uint %v2float
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
         %38 = OpConstantComposite %v2uint %uint_1 %uint_1
%_ptr_Function_v2uint = OpTypePointer Function %v2uint
%VertexOutput = OpTypeStruct %v4float %v2uint
         %45 = OpTypeFunction %VertexOutput
%_ptr_Function_VertexOutput = OpTypePointer Function %VertexOutput
         %49 = OpConstantNull %VertexOutput
%_ptr_Function_v4float = OpTypePointer Function %v4float
         %52 = OpConstantNull %v4float
         %57 = OpTypeFunction %tint_ExternalTextureParams %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
    %uint_64 = OpConstant %uint 64
    %uint_96 = OpConstant %uint 96
   %uint_128 = OpConstant %uint 128
   %uint_176 = OpConstant %uint 176
   %uint_200 = OpConstant %uint 200
   %uint_224 = OpConstant %uint 224
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
   %uint_232 = OpConstant %uint 232
   %uint_240 = OpConstant %uint 240
   %uint_248 = OpConstant %uint 248
   %uint_256 = OpConstant %uint 256
   %uint_264 = OpConstant %uint 264
        %179 = OpTypeFunction %mat3v4float %uint
    %uint_32 = OpConstant %uint 32
        %198 = OpTypeFunction %tint_GammaTransferParams %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
    %uint_20 = OpConstant %uint 20
    %uint_24 = OpConstant %uint 24
    %uint_28 = OpConstant %uint 28
        %269 = OpTypeFunction %mat3v3float %uint
     %v3uint = OpTypeVector %uint 3
        %291 = OpTypeFunction %mat3v2float %uint
       %void = OpTypeVoid
        %331 = OpTypeFunction %void
    %float_1 = OpConstant %float 1
%textureDimensions_cdc6c9 = OpFunction %v2uint None %22
         %23 = OpLabel
        %res = OpVariable %_ptr_Function_v2uint Function
         %24 = OpLoad %3 %arg_0_plane0 None
         %25 = OpLoad %3 %arg_0_plane1 None
         %26 = OpFunctionCall %tint_ExternalTextureParams %34 %uint_0
         %36 = OpCompositeExtract %v2uint %26 12
         %37 = OpIAdd %v2uint %36 %38
               OpStore %res %37
         %42 = OpLoad %v2uint %res None
               OpReturnValue %42
               OpFunctionEnd
%vertex_main_inner = OpFunction %VertexOutput None %45
         %46 = OpLabel
        %out = OpVariable %_ptr_Function_VertexOutput Function %49
         %50 = OpAccessChain %_ptr_Function_v4float %out %uint_0
               OpStore %50 %52 None
         %53 = OpAccessChain %_ptr_Function_v2uint %out %uint_1
         %54 = OpFunctionCall %v2uint %textureDimensions_cdc6c9
               OpStore %53 %54 None
         %55 = OpLoad %VertexOutput %out None
               OpReturnValue %55
               OpFunctionEnd
         %34 = OpFunction %tint_ExternalTextureParams None %57
%start_byte_offset = OpFunctionParameter %uint
         %58 = OpLabel
         %59 = OpUDiv %uint %start_byte_offset %uint_16
         %61 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %59
         %63 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %65 = OpShiftRightLogical %uint %63 %uint_2
         %67 = OpLoad %v4uint %61 None
         %68 = OpVectorExtractDynamic %uint %67 %65
         %69 = OpIAdd %uint %uint_4 %start_byte_offset
         %71 = OpUDiv %uint %69 %uint_16
         %72 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %71
         %73 = OpBitwiseAnd %uint %69 %uint_15
         %74 = OpShiftRightLogical %uint %73 %uint_2
         %75 = OpLoad %v4uint %72 None
         %76 = OpVectorExtractDynamic %uint %75 %74
         %77 = OpIAdd %uint %uint_16 %start_byte_offset
         %78 = OpFunctionCall %mat3v4float %79 %77
         %80 = OpIAdd %uint %uint_64 %start_byte_offset
         %82 = OpFunctionCall %tint_GammaTransferParams %83 %80
         %84 = OpIAdd %uint %uint_96 %start_byte_offset
         %86 = OpFunctionCall %tint_GammaTransferParams %83 %84
         %87 = OpIAdd %uint %uint_128 %start_byte_offset
         %89 = OpFunctionCall %mat3v3float %90 %87
         %91 = OpIAdd %uint %uint_176 %start_byte_offset
         %93 = OpFunctionCall %mat3v2float %94 %91
         %95 = OpIAdd %uint %uint_200 %start_byte_offset
         %97 = OpFunctionCall %mat3v2float %94 %95
         %98 = OpIAdd %uint %uint_224 %start_byte_offset
        %100 = OpUDiv %uint %98 %uint_16
        %101 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %100
        %102 = OpBitwiseAnd %uint %98 %uint_15
        %103 = OpShiftRightLogical %uint %102 %uint_2
        %104 = OpLoad %v4uint %101 None
        %105 = OpVectorShuffle %v2uint %104 %104 2 3
        %106 = OpVectorShuffle %v2uint %104 %104 0 1
        %107 = OpIEqual %bool %103 %uint_2
        %110 = OpCompositeConstruct %v2bool %107 %107
        %111 = OpSelect %v2uint %110 %105 %106
        %112 = OpBitcast %v2float %111
        %113 = OpIAdd %uint %uint_232 %start_byte_offset
        %115 = OpUDiv %uint %113 %uint_16
        %116 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %115
        %117 = OpBitwiseAnd %uint %113 %uint_15
        %118 = OpShiftRightLogical %uint %117 %uint_2
        %119 = OpLoad %v4uint %116 None
        %120 = OpVectorShuffle %v2uint %119 %119 2 3
        %121 = OpVectorShuffle %v2uint %119 %119 0 1
        %122 = OpIEqual %bool %118 %uint_2
        %123 = OpCompositeConstruct %v2bool %122 %122
        %124 = OpSelect %v2uint %123 %120 %121
        %125 = OpBitcast %v2float %124
        %126 = OpIAdd %uint %uint_240 %start_byte_offset
        %128 = OpUDiv %uint %126 %uint_16
        %129 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %128
        %130 = OpBitwiseAnd %uint %126 %uint_15
        %131 = OpShiftRightLogical %uint %130 %uint_2
        %132 = OpLoad %v4uint %129 None
        %133 = OpVectorShuffle %v2uint %132 %132 2 3
        %134 = OpVectorShuffle %v2uint %132 %132 0 1
        %135 = OpIEqual %bool %131 %uint_2
        %136 = OpCompositeConstruct %v2bool %135 %135
        %137 = OpSelect %v2uint %136 %133 %134
        %138 = OpBitcast %v2float %137
        %139 = OpIAdd %uint %uint_248 %start_byte_offset
        %141 = OpUDiv %uint %139 %uint_16
        %142 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %141
        %143 = OpBitwiseAnd %uint %139 %uint_15
        %144 = OpShiftRightLogical %uint %143 %uint_2
        %145 = OpLoad %v4uint %142 None
        %146 = OpVectorShuffle %v2uint %145 %145 2 3
        %147 = OpVectorShuffle %v2uint %145 %145 0 1
        %148 = OpIEqual %bool %144 %uint_2
        %149 = OpCompositeConstruct %v2bool %148 %148
        %150 = OpSelect %v2uint %149 %146 %147
        %151 = OpBitcast %v2float %150
        %152 = OpIAdd %uint %uint_256 %start_byte_offset
        %154 = OpUDiv %uint %152 %uint_16
        %155 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %154
        %156 = OpBitwiseAnd %uint %152 %uint_15
        %157 = OpShiftRightLogical %uint %156 %uint_2
        %158 = OpLoad %v4uint %155 None
        %159 = OpVectorShuffle %v2uint %158 %158 2 3
        %160 = OpVectorShuffle %v2uint %158 %158 0 1
        %161 = OpIEqual %bool %157 %uint_2
        %162 = OpCompositeConstruct %v2bool %161 %161
        %163 = OpSelect %v2uint %162 %159 %160
        %164 = OpIAdd %uint %uint_264 %start_byte_offset
        %166 = OpUDiv %uint %164 %uint_16
        %167 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %166
        %168 = OpBitwiseAnd %uint %164 %uint_15
        %169 = OpShiftRightLogical %uint %168 %uint_2
        %170 = OpLoad %v4uint %167 None
        %171 = OpVectorShuffle %v2uint %170 %170 2 3
        %172 = OpVectorShuffle %v2uint %170 %170 0 1
        %173 = OpIEqual %bool %169 %uint_2
        %174 = OpCompositeConstruct %v2bool %173 %173
        %175 = OpSelect %v2uint %174 %171 %172
        %176 = OpBitcast %v2float %175
        %177 = OpCompositeConstruct %tint_ExternalTextureParams %68 %76 %78 %82 %86 %89 %93 %97 %112 %125 %138 %151 %163 %176
               OpReturnValue %177
               OpFunctionEnd
         %79 = OpFunction %mat3v4float None %179
%start_byte_offset_0 = OpFunctionParameter %uint
        %180 = OpLabel
        %181 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %182 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %181
        %183 = OpLoad %v4uint %182 None
        %184 = OpBitcast %v4float %183
        %185 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %186 = OpUDiv %uint %185 %uint_16
        %187 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %186
        %188 = OpLoad %v4uint %187 None
        %189 = OpBitcast %v4float %188
        %190 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %192 = OpUDiv %uint %190 %uint_16
        %193 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %192
        %194 = OpLoad %v4uint %193 None
        %195 = OpBitcast %v4float %194
        %196 = OpCompositeConstruct %mat3v4float %184 %189 %195
               OpReturnValue %196
               OpFunctionEnd
         %83 = OpFunction %tint_GammaTransferParams None %198
%start_byte_offset_1 = OpFunctionParameter %uint
        %199 = OpLabel
        %200 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %201 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %200
        %202 = OpBitwiseAnd %uint %start_byte_offset_1 %uint_15
        %203 = OpShiftRightLogical %uint %202 %uint_2
        %204 = OpLoad %v4uint %201 None
        %205 = OpVectorExtractDynamic %uint %204 %203
        %206 = OpBitcast %float %205
        %207 = OpIAdd %uint %uint_4 %start_byte_offset_1
        %208 = OpUDiv %uint %207 %uint_16
        %209 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %208
        %210 = OpBitwiseAnd %uint %207 %uint_15
        %211 = OpShiftRightLogical %uint %210 %uint_2
        %212 = OpLoad %v4uint %209 None
        %213 = OpVectorExtractDynamic %uint %212 %211
        %214 = OpBitcast %float %213
        %215 = OpIAdd %uint %uint_8 %start_byte_offset_1
        %217 = OpUDiv %uint %215 %uint_16
        %218 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %217
        %219 = OpBitwiseAnd %uint %215 %uint_15
        %220 = OpShiftRightLogical %uint %219 %uint_2
        %221 = OpLoad %v4uint %218 None
        %222 = OpVectorExtractDynamic %uint %221 %220
        %223 = OpBitcast %float %222
        %224 = OpIAdd %uint %uint_12 %start_byte_offset_1
        %226 = OpUDiv %uint %224 %uint_16
        %227 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %226
        %228 = OpBitwiseAnd %uint %224 %uint_15
        %229 = OpShiftRightLogical %uint %228 %uint_2
        %230 = OpLoad %v4uint %227 None
        %231 = OpVectorExtractDynamic %uint %230 %229
        %232 = OpBitcast %float %231
        %233 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %234 = OpUDiv %uint %233 %uint_16
        %235 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %234
        %236 = OpBitwiseAnd %uint %233 %uint_15
        %237 = OpShiftRightLogical %uint %236 %uint_2
        %238 = OpLoad %v4uint %235 None
        %239 = OpVectorExtractDynamic %uint %238 %237
        %240 = OpBitcast %float %239
        %241 = OpIAdd %uint %uint_20 %start_byte_offset_1
        %243 = OpUDiv %uint %241 %uint_16
        %244 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %243
        %245 = OpBitwiseAnd %uint %241 %uint_15
        %246 = OpShiftRightLogical %uint %245 %uint_2
        %247 = OpLoad %v4uint %244 None
        %248 = OpVectorExtractDynamic %uint %247 %246
        %249 = OpBitcast %float %248
        %250 = OpIAdd %uint %uint_24 %start_byte_offset_1
        %252 = OpUDiv %uint %250 %uint_16
        %253 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %252
        %254 = OpBitwiseAnd %uint %250 %uint_15
        %255 = OpShiftRightLogical %uint %254 %uint_2
        %256 = OpLoad %v4uint %253 None
        %257 = OpVectorExtractDynamic %uint %256 %255
        %258 = OpBitcast %float %257
        %259 = OpIAdd %uint %uint_28 %start_byte_offset_1
        %261 = OpUDiv %uint %259 %uint_16
        %262 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %261
        %263 = OpBitwiseAnd %uint %259 %uint_15
        %264 = OpShiftRightLogical %uint %263 %uint_2
        %265 = OpLoad %v4uint %262 None
        %266 = OpVectorExtractDynamic %uint %265 %264
        %267 = OpCompositeConstruct %tint_GammaTransferParams %206 %214 %223 %232 %240 %249 %258 %266
               OpReturnValue %267
               OpFunctionEnd
         %90 = OpFunction %mat3v3float None %269
%start_byte_offset_2 = OpFunctionParameter %uint
        %270 = OpLabel
        %271 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %272 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %271
        %273 = OpLoad %v4uint %272 None
        %274 = OpVectorShuffle %v3uint %273 %273 0 1 2
        %276 = OpBitcast %v3float %274
        %277 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %278 = OpUDiv %uint %277 %uint_16
        %279 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %278
        %280 = OpLoad %v4uint %279 None
        %281 = OpVectorShuffle %v3uint %280 %280 0 1 2
        %282 = OpBitcast %v3float %281
        %283 = OpIAdd %uint %uint_32 %start_byte_offset_2
        %284 = OpUDiv %uint %283 %uint_16
        %285 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %284
        %286 = OpLoad %v4uint %285 None
        %287 = OpVectorShuffle %v3uint %286 %286 0 1 2
        %288 = OpBitcast %v3float %287
        %289 = OpCompositeConstruct %mat3v3float %276 %282 %288
               OpReturnValue %289
               OpFunctionEnd
         %94 = OpFunction %mat3v2float None %291
%start_byte_offset_3 = OpFunctionParameter %uint
        %292 = OpLabel
        %293 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %294 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %293
        %295 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %296 = OpShiftRightLogical %uint %295 %uint_2
        %297 = OpLoad %v4uint %294 None
        %298 = OpVectorShuffle %v2uint %297 %297 2 3
        %299 = OpVectorShuffle %v2uint %297 %297 0 1
        %300 = OpIEqual %bool %296 %uint_2
        %301 = OpCompositeConstruct %v2bool %300 %300
        %302 = OpSelect %v2uint %301 %298 %299
        %303 = OpBitcast %v2float %302
        %304 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %305 = OpUDiv %uint %304 %uint_16
        %306 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %305
        %307 = OpBitwiseAnd %uint %304 %uint_15
        %308 = OpShiftRightLogical %uint %307 %uint_2
        %309 = OpLoad %v4uint %306 None
        %310 = OpVectorShuffle %v2uint %309 %309 2 3
        %311 = OpVectorShuffle %v2uint %309 %309 0 1
        %312 = OpIEqual %bool %308 %uint_2
        %313 = OpCompositeConstruct %v2bool %312 %312
        %314 = OpSelect %v2uint %313 %310 %311
        %315 = OpBitcast %v2float %314
        %316 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %317 = OpUDiv %uint %316 %uint_16
        %318 = OpAccessChain %_ptr_Uniform_v4uint %6 %uint_0 %317
        %319 = OpBitwiseAnd %uint %316 %uint_15
        %320 = OpShiftRightLogical %uint %319 %uint_2
        %321 = OpLoad %v4uint %318 None
        %322 = OpVectorShuffle %v2uint %321 %321 2 3
        %323 = OpVectorShuffle %v2uint %321 %321 0 1
        %324 = OpIEqual %bool %320 %uint_2
        %325 = OpCompositeConstruct %v2bool %324 %324
        %326 = OpSelect %v2uint %325 %322 %323
        %327 = OpBitcast %v2float %326
        %328 = OpCompositeConstruct %mat3v2float %303 %315 %327
               OpReturnValue %328
               OpFunctionEnd
%vertex_main = OpFunction %void None %331
        %332 = OpLabel
        %333 = OpFunctionCall %VertexOutput %vertex_main_inner
        %334 = OpCompositeExtract %v4float %333 0
               OpStore %vertex_main_position_Output %334 None
        %335 = OpCompositeExtract %v2uint %333 1
               OpStore %vertex_main_loc0_Output %335 None
               OpStore %vertex_main___point_size_Output %float_1 None
               OpReturn
               OpFunctionEnd
