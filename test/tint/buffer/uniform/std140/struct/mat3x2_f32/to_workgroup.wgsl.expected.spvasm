; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 156
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
          %S = OpTypeStruct %int %mat3v2float %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Workgroup__arr_S_uint_4 = OpTypePointer Workgroup %_arr_S_uint_4
          %w = OpVariable %_ptr_Workgroup__arr_S_uint_4 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %22 = OpTypeFunction %void %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_S = OpTypePointer Workgroup %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Workgroup_mat3v2float = OpTypePointer Workgroup %mat3v2float
     %uint_3 = OpConstant %uint 3
%_ptr_Workgroup_v2float = OpTypePointer Workgroup %v2float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
         %62 = OpConstantNull %S
         %64 = OpTypeFunction %mat3v2float %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
        %107 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %129 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
        %133 = OpConstantNull %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
        %152 = OpTypeFunction %void
    %f_inner = OpFunction %void None %22
%tint_local_index = OpFunctionParameter %uint
         %23 = OpLabel
               OpBranch %24
         %24 = OpLabel
               OpBranch %27
         %27 = OpLabel
         %29 = OpPhi %uint %tint_local_index %24 %30 %26
               OpLoopMerge %28 %26 None
               OpBranch %25
         %25 = OpLabel
         %57 = OpUGreaterThanEqual %bool %29 %uint_4
               OpSelectionMerge %59 None
               OpBranchConditional %57 %60 %59
         %60 = OpLabel
               OpBranch %28
         %59 = OpLabel
         %61 = OpAccessChain %_ptr_Workgroup_S %w %29
               OpStore %61 %62 None
               OpBranch %26
         %26 = OpLabel
         %30 = OpIAdd %uint %29 %uint_1
               OpBranch %27
         %28 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %34 = OpFunctionCall %_arr_S_uint_4 %35 %uint_0
               OpStore %w %34 None
         %37 = OpAccessChain %_ptr_Workgroup_S %w %uint_1
         %40 = OpFunctionCall %S %41 %uint_256
               OpStore %37 %40 None
         %43 = OpAccessChain %_ptr_Workgroup_mat3v2float %w %uint_3 %uint_1
         %46 = OpFunctionCall %mat3v2float %47 %uint_264
               OpStore %43 %46 None
         %48 = OpAccessChain %_ptr_Workgroup_v2float %w %uint_1 %uint_1 %uint_0
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %52 = OpLoad %v4uint %50 None
         %53 = OpVectorShuffle %v2uint %52 %52 0 1
         %55 = OpBitcast %v2float %53
         %56 = OpVectorShuffle %v2float %55 %55 1 0
               OpStore %48 %56 None
               OpReturn
               OpFunctionEnd
         %47 = OpFunction %mat3v2float None %64
%start_byte_offset = OpFunctionParameter %uint
         %65 = OpLabel
         %66 = OpUDiv %uint %start_byte_offset %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %69 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %71 = OpShiftRightLogical %uint %69 %uint_2
         %72 = OpLoad %v4uint %68 None
         %73 = OpVectorShuffle %v2uint %72 %72 2 3
         %74 = OpVectorShuffle %v2uint %72 %72 0 1
         %75 = OpIEqual %bool %71 %uint_2
         %77 = OpCompositeConstruct %v2bool %75 %75
         %78 = OpSelect %v2uint %77 %73 %74
         %79 = OpBitcast %v2float %78
         %80 = OpIAdd %uint %uint_8 %start_byte_offset
         %82 = OpUDiv %uint %80 %uint_16
         %83 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %82
         %84 = OpBitwiseAnd %uint %80 %uint_15
         %85 = OpShiftRightLogical %uint %84 %uint_2
         %86 = OpLoad %v4uint %83 None
         %87 = OpVectorShuffle %v2uint %86 %86 2 3
         %88 = OpVectorShuffle %v2uint %86 %86 0 1
         %89 = OpIEqual %bool %85 %uint_2
         %90 = OpCompositeConstruct %v2bool %89 %89
         %91 = OpSelect %v2uint %90 %87 %88
         %92 = OpBitcast %v2float %91
         %93 = OpIAdd %uint %uint_16 %start_byte_offset
         %94 = OpUDiv %uint %93 %uint_16
         %95 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %94
         %96 = OpBitwiseAnd %uint %93 %uint_15
         %97 = OpShiftRightLogical %uint %96 %uint_2
         %98 = OpLoad %v4uint %95 None
         %99 = OpVectorShuffle %v2uint %98 %98 2 3
        %100 = OpVectorShuffle %v2uint %98 %98 0 1
        %101 = OpIEqual %bool %97 %uint_2
        %102 = OpCompositeConstruct %v2bool %101 %101
        %103 = OpSelect %v2uint %102 %99 %100
        %104 = OpBitcast %v2float %103
        %105 = OpCompositeConstruct %mat3v2float %79 %92 %104
               OpReturnValue %105
               OpFunctionEnd
         %41 = OpFunction %S None %107
%start_byte_offset_0 = OpFunctionParameter %uint
        %108 = OpLabel
        %109 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %110 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %109
        %111 = OpBitwiseAnd %uint %start_byte_offset_0 %uint_15
        %112 = OpShiftRightLogical %uint %111 %uint_2
        %113 = OpLoad %v4uint %110 None
        %114 = OpVectorExtractDynamic %uint %113 %112
        %115 = OpBitcast %int %114
        %116 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %117 = OpFunctionCall %mat3v2float %47 %116
        %118 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %120 = OpUDiv %uint %118 %uint_16
        %121 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %120
        %122 = OpBitwiseAnd %uint %118 %uint_15
        %123 = OpShiftRightLogical %uint %122 %uint_2
        %124 = OpLoad %v4uint %121 None
        %125 = OpVectorExtractDynamic %uint %124 %123
        %126 = OpBitcast %int %125
        %127 = OpCompositeConstruct %S %115 %117 %126
               OpReturnValue %127
               OpFunctionEnd
         %35 = OpFunction %_arr_S_uint_4 None %129
%start_byte_offset_1 = OpFunctionParameter %uint
        %130 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %133
               OpBranch %134
        %134 = OpLabel
               OpBranch %137
        %137 = OpLabel
        %139 = OpPhi %uint %uint_0 %134 %140 %136
               OpLoopMerge %138 %136 None
               OpBranch %135
        %135 = OpLabel
        %142 = OpUGreaterThanEqual %bool %139 %uint_4
               OpSelectionMerge %143 None
               OpBranchConditional %142 %144 %143
        %144 = OpLabel
               OpBranch %138
        %143 = OpLabel
        %145 = OpIMul %uint %139 %uint_128
        %147 = OpIAdd %uint %start_byte_offset_1 %145
        %148 = OpAccessChain %_ptr_Function_S %a %139
        %150 = OpFunctionCall %S %41 %147
               OpStore %148 %150 None
               OpBranch %136
        %136 = OpLabel
        %140 = OpIAdd %uint %139 %uint_1
               OpBranch %137
        %138 = OpLabel
        %141 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %141
               OpFunctionEnd
          %f = OpFunction %void None %152
        %153 = OpLabel
        %154 = OpLoad %uint %f_local_invocation_index_Input None
        %155 = OpFunctionCall %void %f_inner %154
               OpReturn
               OpFunctionEnd
