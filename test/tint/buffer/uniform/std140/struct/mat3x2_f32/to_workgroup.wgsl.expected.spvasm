; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 155
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
          %S = OpTypeStruct %int %mat3v2float %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Workgroup__arr_S_uint_4 = OpTypePointer Workgroup %_arr_S_uint_4
          %w = OpVariable %_ptr_Workgroup__arr_S_uint_4 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %22 = OpTypeFunction %void %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_S = OpTypePointer Workgroup %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Workgroup_mat3v2float = OpTypePointer Workgroup %mat3v2float
     %uint_3 = OpConstant %uint 3
%_ptr_Workgroup_v2float = OpTypePointer Workgroup %v2float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
         %62 = OpConstantNull %S
         %64 = OpTypeFunction %mat3v2float %uint
    %uint_16 = OpConstant %uint 16
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
        %106 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %128 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
        %132 = OpConstantNull %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
        %151 = OpTypeFunction %void
    %f_inner = OpFunction %void None %22
%tint_local_index = OpFunctionParameter %uint
         %23 = OpLabel
               OpBranch %24
         %24 = OpLabel
               OpBranch %27
         %27 = OpLabel
         %29 = OpPhi %uint %tint_local_index %24 %30 %26
               OpLoopMerge %28 %26 None
               OpBranch %25
         %25 = OpLabel
         %57 = OpUGreaterThanEqual %bool %29 %uint_4
               OpSelectionMerge %59 None
               OpBranchConditional %57 %60 %59
         %60 = OpLabel
               OpBranch %28
         %59 = OpLabel
         %61 = OpAccessChain %_ptr_Workgroup_S %w %29
               OpStore %61 %62 None
               OpBranch %26
         %26 = OpLabel
         %30 = OpIAdd %uint %29 %uint_1
               OpBranch %27
         %28 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %34 = OpFunctionCall %_arr_S_uint_4 %35 %uint_0
               OpStore %w %34 None
         %37 = OpAccessChain %_ptr_Workgroup_S %w %uint_1
         %40 = OpFunctionCall %S %41 %uint_256
               OpStore %37 %40 None
         %43 = OpAccessChain %_ptr_Workgroup_mat3v2float %w %uint_3 %uint_1
         %46 = OpFunctionCall %mat3v2float %47 %uint_264
               OpStore %43 %46 None
         %48 = OpAccessChain %_ptr_Workgroup_v2float %w %uint_1 %uint_1 %uint_0
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %52 = OpLoad %v4uint %50 None
         %53 = OpVectorShuffle %v2uint %52 %52 0 1
         %55 = OpBitcast %v2float %53
         %56 = OpVectorShuffle %v2float %55 %55 1 0
               OpStore %48 %56 None
               OpReturn
               OpFunctionEnd
         %47 = OpFunction %mat3v2float None %64
%start_byte_offset = OpFunctionParameter %uint
         %65 = OpLabel
         %66 = OpUDiv %uint %start_byte_offset %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %69 = OpUMod %uint %start_byte_offset %uint_16
         %70 = OpUDiv %uint %69 %uint_4
         %71 = OpLoad %v4uint %68 None
         %72 = OpVectorShuffle %v2uint %71 %71 2 3
         %73 = OpVectorShuffle %v2uint %71 %71 0 1
         %74 = OpIEqual %bool %70 %uint_2
         %76 = OpCompositeConstruct %v2bool %74 %74
         %77 = OpSelect %v2uint %76 %72 %73
         %78 = OpBitcast %v2float %77
         %79 = OpIAdd %uint %uint_8 %start_byte_offset
         %81 = OpUDiv %uint %79 %uint_16
         %82 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %81
         %83 = OpUMod %uint %79 %uint_16
         %84 = OpUDiv %uint %83 %uint_4
         %85 = OpLoad %v4uint %82 None
         %86 = OpVectorShuffle %v2uint %85 %85 2 3
         %87 = OpVectorShuffle %v2uint %85 %85 0 1
         %88 = OpIEqual %bool %84 %uint_2
         %89 = OpCompositeConstruct %v2bool %88 %88
         %90 = OpSelect %v2uint %89 %86 %87
         %91 = OpBitcast %v2float %90
         %92 = OpIAdd %uint %uint_16 %start_byte_offset
         %93 = OpUDiv %uint %92 %uint_16
         %94 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %93
         %95 = OpUMod %uint %92 %uint_16
         %96 = OpUDiv %uint %95 %uint_4
         %97 = OpLoad %v4uint %94 None
         %98 = OpVectorShuffle %v2uint %97 %97 2 3
         %99 = OpVectorShuffle %v2uint %97 %97 0 1
        %100 = OpIEqual %bool %96 %uint_2
        %101 = OpCompositeConstruct %v2bool %100 %100
        %102 = OpSelect %v2uint %101 %98 %99
        %103 = OpBitcast %v2float %102
        %104 = OpCompositeConstruct %mat3v2float %78 %91 %103
               OpReturnValue %104
               OpFunctionEnd
         %41 = OpFunction %S None %106
%start_byte_offset_0 = OpFunctionParameter %uint
        %107 = OpLabel
        %108 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %109 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %108
        %110 = OpUMod %uint %start_byte_offset_0 %uint_16
        %111 = OpUDiv %uint %110 %uint_4
        %112 = OpLoad %v4uint %109 None
        %113 = OpVectorExtractDynamic %uint %112 %111
        %114 = OpBitcast %int %113
        %115 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %116 = OpFunctionCall %mat3v2float %47 %115
        %117 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %119 = OpUDiv %uint %117 %uint_16
        %120 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %119
        %121 = OpUMod %uint %117 %uint_16
        %122 = OpUDiv %uint %121 %uint_4
        %123 = OpLoad %v4uint %120 None
        %124 = OpVectorExtractDynamic %uint %123 %122
        %125 = OpBitcast %int %124
        %126 = OpCompositeConstruct %S %114 %116 %125
               OpReturnValue %126
               OpFunctionEnd
         %35 = OpFunction %_arr_S_uint_4 None %128
%start_byte_offset_1 = OpFunctionParameter %uint
        %129 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %132
               OpBranch %133
        %133 = OpLabel
               OpBranch %136
        %136 = OpLabel
        %138 = OpPhi %uint %uint_0 %133 %139 %135
               OpLoopMerge %137 %135 None
               OpBranch %134
        %134 = OpLabel
        %141 = OpUGreaterThanEqual %bool %138 %uint_4
               OpSelectionMerge %142 None
               OpBranchConditional %141 %143 %142
        %143 = OpLabel
               OpBranch %137
        %142 = OpLabel
        %144 = OpIMul %uint %138 %uint_128
        %146 = OpIAdd %uint %start_byte_offset_1 %144
        %147 = OpAccessChain %_ptr_Function_S %a %138
        %149 = OpFunctionCall %S %41 %146
               OpStore %147 %149 None
               OpBranch %135
        %135 = OpLabel
        %139 = OpIAdd %uint %138 %uint_1
               OpBranch %136
        %137 = OpLabel
        %140 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %140
               OpFunctionEnd
          %f = OpFunction %void None %151
        %152 = OpLabel
        %153 = OpLoad %uint %f_local_invocation_index_Input None
        %154 = OpFunctionCall %void %f_inner %153
               OpReturn
               OpFunctionEnd
