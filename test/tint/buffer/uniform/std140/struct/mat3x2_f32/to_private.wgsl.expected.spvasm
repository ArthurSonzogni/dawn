; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 134
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
          %S = OpTypeStruct %int %mat3v2float %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Private__arr_S_uint_4 = OpTypePointer Private %_arr_S_uint_4
         %17 = OpConstantNull %_arr_S_uint_4
          %p = OpVariable %_ptr_Private__arr_S_uint_4 Private %17
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_S = OpTypePointer Private %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Private_mat3v2float = OpTypePointer Private %mat3v2float
     %uint_3 = OpConstant %uint 3
   %uint_264 = OpConstant %uint 264
%_ptr_Private_v2float = OpTypePointer Private %v2float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
         %47 = OpTypeFunction %mat3v2float %uint
    %uint_16 = OpConstant %uint 16
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
         %91 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %113 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
          %f = OpFunction %void None %20
         %21 = OpLabel
         %22 = OpFunctionCall %_arr_S_uint_4 %23 %uint_0
               OpStore %p %22 None
         %25 = OpAccessChain %_ptr_Private_S %p %uint_1
         %28 = OpFunctionCall %S %29 %uint_256
               OpStore %25 %28 None
         %31 = OpAccessChain %_ptr_Private_mat3v2float %p %uint_3 %uint_1
         %34 = OpFunctionCall %mat3v2float %35 %uint_264
               OpStore %31 %34 None
         %37 = OpAccessChain %_ptr_Private_v2float %p %uint_1 %uint_1 %uint_0
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %41 = OpLoad %v4uint %39 None
         %42 = OpVectorShuffle %v2uint %41 %41 0 1
         %44 = OpBitcast %v2float %42
         %45 = OpVectorShuffle %v2float %44 %44 1 0
               OpStore %37 %45 None
               OpReturn
               OpFunctionEnd
         %35 = OpFunction %mat3v2float None %47
%start_byte_offset = OpFunctionParameter %uint
         %48 = OpLabel
         %49 = OpUDiv %uint %start_byte_offset %uint_16
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %49
         %52 = OpUMod %uint %start_byte_offset %uint_16
         %53 = OpUDiv %uint %52 %uint_4
         %54 = OpLoad %v4uint %51 None
         %55 = OpVectorShuffle %v2uint %54 %54 2 3
         %56 = OpVectorShuffle %v2uint %54 %54 0 1
         %57 = OpIEqual %bool %53 %uint_2
         %61 = OpCompositeConstruct %v2bool %57 %57
         %62 = OpSelect %v2uint %61 %55 %56
         %63 = OpBitcast %v2float %62
         %64 = OpIAdd %uint %uint_8 %start_byte_offset
         %66 = OpUDiv %uint %64 %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %68 = OpUMod %uint %64 %uint_16
         %69 = OpUDiv %uint %68 %uint_4
         %70 = OpLoad %v4uint %67 None
         %71 = OpVectorShuffle %v2uint %70 %70 2 3
         %72 = OpVectorShuffle %v2uint %70 %70 0 1
         %73 = OpIEqual %bool %69 %uint_2
         %74 = OpCompositeConstruct %v2bool %73 %73
         %75 = OpSelect %v2uint %74 %71 %72
         %76 = OpBitcast %v2float %75
         %77 = OpIAdd %uint %uint_16 %start_byte_offset
         %78 = OpUDiv %uint %77 %uint_16
         %79 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %78
         %80 = OpUMod %uint %77 %uint_16
         %81 = OpUDiv %uint %80 %uint_4
         %82 = OpLoad %v4uint %79 None
         %83 = OpVectorShuffle %v2uint %82 %82 2 3
         %84 = OpVectorShuffle %v2uint %82 %82 0 1
         %85 = OpIEqual %bool %81 %uint_2
         %86 = OpCompositeConstruct %v2bool %85 %85
         %87 = OpSelect %v2uint %86 %83 %84
         %88 = OpBitcast %v2float %87
         %89 = OpCompositeConstruct %mat3v2float %63 %76 %88
               OpReturnValue %89
               OpFunctionEnd
         %29 = OpFunction %S None %91
%start_byte_offset_0 = OpFunctionParameter %uint
         %92 = OpLabel
         %93 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %94 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %93
         %95 = OpUMod %uint %start_byte_offset_0 %uint_16
         %96 = OpUDiv %uint %95 %uint_4
         %97 = OpLoad %v4uint %94 None
         %98 = OpVectorExtractDynamic %uint %97 %96
         %99 = OpBitcast %int %98
        %100 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %101 = OpFunctionCall %mat3v2float %35 %100
        %102 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %104 = OpUDiv %uint %102 %uint_16
        %105 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %104
        %106 = OpUMod %uint %102 %uint_16
        %107 = OpUDiv %uint %106 %uint_4
        %108 = OpLoad %v4uint %105 None
        %109 = OpVectorExtractDynamic %uint %108 %107
        %110 = OpBitcast %int %109
        %111 = OpCompositeConstruct %S %99 %101 %110
               OpReturnValue %111
               OpFunctionEnd
         %23 = OpFunction %_arr_S_uint_4 None %113
%start_byte_offset_1 = OpFunctionParameter %uint
        %114 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %17
               OpBranch %117
        %117 = OpLabel
               OpBranch %120
        %120 = OpLabel
        %122 = OpPhi %uint %uint_0 %117 %123 %119
               OpLoopMerge %121 %119 None
               OpBranch %118
        %118 = OpLabel
        %125 = OpUGreaterThanEqual %bool %122 %uint_4
               OpSelectionMerge %126 None
               OpBranchConditional %125 %127 %126
        %127 = OpLabel
               OpBranch %121
        %126 = OpLabel
        %128 = OpIMul %uint %122 %uint_128
        %130 = OpIAdd %uint %start_byte_offset_1 %128
        %131 = OpAccessChain %_ptr_Function_S %a %122
        %133 = OpFunctionCall %S %29 %130
               OpStore %131 %133 None
               OpBranch %119
        %119 = OpLabel
        %123 = OpIAdd %uint %122 %uint_1
               OpBranch %120
        %121 = OpLabel
        %124 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %124
               OpFunctionEnd
