; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 157
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %a "a"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %a_0 "a"
               OpName %b "b"
               OpName %s "s"
               OpName %c "c"
               OpName %m "m"
               OpName %d "d"
               OpName %v "v"
               OpName %e "e"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_1 "a"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
        %int = OpTypeInt 32 1
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat3v2float = OpTypeMatrix %v2float 3
          %S = OpTypeStruct %int %mat3v2float %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
         %18 = OpTypeFunction %void %_arr_S_uint_4
         %22 = OpTypeFunction %void %S
         %26 = OpTypeFunction %void %mat3v2float
         %30 = OpTypeFunction %void %v2float
         %34 = OpTypeFunction %void %float
         %37 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
   %uint_256 = OpConstant %uint 256
   %uint_264 = OpConstant %uint 264
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_1 = OpConstant %uint 1
     %v2uint = OpTypeVector %uint 2
         %68 = OpTypeFunction %mat3v2float %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
        %113 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %135 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
        %139 = OpConstantNull %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
          %a = OpFunction %void None %18
        %a_0 = OpFunctionParameter %_arr_S_uint_4
         %19 = OpLabel
               OpReturn
               OpFunctionEnd
          %b = OpFunction %void None %22
          %s = OpFunctionParameter %S
         %23 = OpLabel
               OpReturn
               OpFunctionEnd
          %c = OpFunction %void None %26
          %m = OpFunctionParameter %mat3v2float
         %27 = OpLabel
               OpReturn
               OpFunctionEnd
          %d = OpFunction %void None %30
          %v = OpFunctionParameter %v2float
         %31 = OpLabel
               OpReturn
               OpFunctionEnd
          %e = OpFunction %void None %34
          %f = OpFunctionParameter %float
         %35 = OpLabel
               OpReturn
               OpFunctionEnd
        %f_0 = OpFunction %void None %37
         %38 = OpLabel
         %39 = OpFunctionCall %_arr_S_uint_4 %40 %uint_0
         %42 = OpFunctionCall %void %a %39
         %43 = OpFunctionCall %S %44 %uint_256
         %46 = OpFunctionCall %void %b %43
         %47 = OpFunctionCall %mat3v2float %48 %uint_264
         %50 = OpFunctionCall %void %c %47
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %54 = OpLoad %v4uint %51 None
         %55 = OpVectorShuffle %v2uint %54 %54 0 1
         %57 = OpBitcast %v2float %55
         %58 = OpVectorShuffle %v2float %57 %57 1 0
         %59 = OpFunctionCall %void %d %58
         %60 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %61 = OpLoad %v4uint %60 None
         %62 = OpVectorShuffle %v2uint %61 %61 0 1
         %63 = OpBitcast %v2float %62
         %64 = OpVectorShuffle %v2float %63 %63 1 0
         %65 = OpCompositeExtract %float %64 0
         %66 = OpFunctionCall %void %e %65
               OpReturn
               OpFunctionEnd
         %48 = OpFunction %mat3v2float None %68
%start_byte_offset = OpFunctionParameter %uint
         %69 = OpLabel
         %70 = OpUDiv %uint %start_byte_offset %uint_16
         %72 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %70
         %73 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %75 = OpShiftRightLogical %uint %73 %uint_2
         %77 = OpLoad %v4uint %72 None
         %78 = OpVectorShuffle %v2uint %77 %77 2 3
         %79 = OpVectorShuffle %v2uint %77 %77 0 1
         %80 = OpIEqual %bool %75 %uint_2
         %83 = OpCompositeConstruct %v2bool %80 %80
         %84 = OpSelect %v2uint %83 %78 %79
         %85 = OpBitcast %v2float %84
         %86 = OpIAdd %uint %uint_8 %start_byte_offset
         %88 = OpUDiv %uint %86 %uint_16
         %89 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %88
         %90 = OpBitwiseAnd %uint %86 %uint_15
         %91 = OpShiftRightLogical %uint %90 %uint_2
         %92 = OpLoad %v4uint %89 None
         %93 = OpVectorShuffle %v2uint %92 %92 2 3
         %94 = OpVectorShuffle %v2uint %92 %92 0 1
         %95 = OpIEqual %bool %91 %uint_2
         %96 = OpCompositeConstruct %v2bool %95 %95
         %97 = OpSelect %v2uint %96 %93 %94
         %98 = OpBitcast %v2float %97
         %99 = OpIAdd %uint %uint_16 %start_byte_offset
        %100 = OpUDiv %uint %99 %uint_16
        %101 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %100
        %102 = OpBitwiseAnd %uint %99 %uint_15
        %103 = OpShiftRightLogical %uint %102 %uint_2
        %104 = OpLoad %v4uint %101 None
        %105 = OpVectorShuffle %v2uint %104 %104 2 3
        %106 = OpVectorShuffle %v2uint %104 %104 0 1
        %107 = OpIEqual %bool %103 %uint_2
        %108 = OpCompositeConstruct %v2bool %107 %107
        %109 = OpSelect %v2uint %108 %105 %106
        %110 = OpBitcast %v2float %109
        %111 = OpCompositeConstruct %mat3v2float %85 %98 %110
               OpReturnValue %111
               OpFunctionEnd
         %44 = OpFunction %S None %113
%start_byte_offset_0 = OpFunctionParameter %uint
        %114 = OpLabel
        %115 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %116 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %115
        %117 = OpBitwiseAnd %uint %start_byte_offset_0 %uint_15
        %118 = OpShiftRightLogical %uint %117 %uint_2
        %119 = OpLoad %v4uint %116 None
        %120 = OpVectorExtractDynamic %uint %119 %118
        %121 = OpBitcast %int %120
        %122 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %123 = OpFunctionCall %mat3v2float %48 %122
        %124 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %126 = OpUDiv %uint %124 %uint_16
        %127 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %126
        %128 = OpBitwiseAnd %uint %124 %uint_15
        %129 = OpShiftRightLogical %uint %128 %uint_2
        %130 = OpLoad %v4uint %127 None
        %131 = OpVectorExtractDynamic %uint %130 %129
        %132 = OpBitcast %int %131
        %133 = OpCompositeConstruct %S %121 %123 %132
               OpReturnValue %133
               OpFunctionEnd
         %40 = OpFunction %_arr_S_uint_4 None %135
%start_byte_offset_1 = OpFunctionParameter %uint
        %136 = OpLabel
        %a_1 = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a_1 %139
               OpBranch %140
        %140 = OpLabel
               OpBranch %143
        %143 = OpLabel
        %145 = OpPhi %uint %uint_0 %140 %146 %142
               OpLoopMerge %144 %142 None
               OpBranch %141
        %141 = OpLabel
        %148 = OpUGreaterThanEqual %bool %145 %uint_4
               OpSelectionMerge %149 None
               OpBranchConditional %148 %150 %149
        %150 = OpLabel
               OpBranch %144
        %149 = OpLabel
        %151 = OpIMul %uint %145 %uint_128
        %153 = OpIAdd %uint %start_byte_offset_1 %151
        %154 = OpAccessChain %_ptr_Function_S %a_1 %145
        %156 = OpFunctionCall %S %44 %153
               OpStore %154 %156 None
               OpBranch %142
        %142 = OpLabel
        %146 = OpIAdd %uint %145 %uint_1
               OpBranch %143
        %144 = OpLabel
        %147 = OpLoad %_arr_S_uint_4 %a_1 None
               OpReturnValue %147
               OpFunctionEnd
