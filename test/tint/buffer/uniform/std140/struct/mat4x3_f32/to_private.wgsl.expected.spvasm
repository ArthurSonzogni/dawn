; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 121
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_48 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_48 = OpConstant %uint 48
%_arr_v4uint_uint_48 = OpTypeArray %v4uint %uint_48
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_48
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%mat4v3float = OpTypeMatrix %v3float 4
          %S = OpTypeStruct %int %mat4v3float %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Private__arr_S_uint_4 = OpTypePointer Private %_arr_S_uint_4
         %17 = OpConstantNull %_arr_S_uint_4
          %p = OpVariable %_ptr_Private__arr_S_uint_4 Private %17
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_S = OpTypePointer Private %S
     %uint_1 = OpConstant %uint 1
   %uint_384 = OpConstant %uint 384
%_ptr_Private_mat4v3float = OpTypePointer Private %mat4v3float
     %uint_3 = OpConstant %uint 3
   %uint_400 = OpConstant %uint 400
%_ptr_Private_v3float = OpTypePointer Private %v3float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_2 = OpConstant %uint 2
     %v3uint = OpTypeVector %uint 3
         %48 = OpTypeFunction %mat4v3float %uint
    %uint_16 = OpConstant %uint 16
    %uint_32 = OpConstant %uint 32
         %77 = OpTypeFunction %S %uint
   %uint_128 = OpConstant %uint 128
         %99 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
       %bool = OpTypeBool
   %uint_192 = OpConstant %uint 192
%_ptr_Function_S = OpTypePointer Function %S
          %f = OpFunction %void None %20
         %21 = OpLabel
         %22 = OpFunctionCall %_arr_S_uint_4 %23 %uint_0
               OpStore %p %22 None
         %25 = OpAccessChain %_ptr_Private_S %p %uint_1
         %28 = OpFunctionCall %S %29 %uint_384
               OpStore %25 %28 None
         %31 = OpAccessChain %_ptr_Private_mat4v3float %p %uint_3 %uint_1
         %34 = OpFunctionCall %mat4v3float %35 %uint_400
               OpStore %31 %34 None
         %37 = OpAccessChain %_ptr_Private_v3float %p %uint_1 %uint_1 %uint_0
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %42 = OpLoad %v4uint %39 None
         %43 = OpVectorShuffle %v3uint %42 %42 0 1 2
         %45 = OpBitcast %v3float %43
         %46 = OpVectorShuffle %v3float %45 %45 2 0 1
               OpStore %37 %46 None
               OpReturn
               OpFunctionEnd
         %35 = OpFunction %mat4v3float None %48
%start_byte_offset = OpFunctionParameter %uint
         %49 = OpLabel
         %50 = OpUDiv %uint %start_byte_offset %uint_16
         %52 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %50
         %53 = OpLoad %v4uint %52 None
         %54 = OpVectorShuffle %v3uint %53 %53 0 1 2
         %55 = OpBitcast %v3float %54
         %56 = OpIAdd %uint %uint_16 %start_byte_offset
         %57 = OpUDiv %uint %56 %uint_16
         %58 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %57
         %59 = OpLoad %v4uint %58 None
         %60 = OpVectorShuffle %v3uint %59 %59 0 1 2
         %61 = OpBitcast %v3float %60
         %62 = OpIAdd %uint %uint_32 %start_byte_offset
         %64 = OpUDiv %uint %62 %uint_16
         %65 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %64
         %66 = OpLoad %v4uint %65 None
         %67 = OpVectorShuffle %v3uint %66 %66 0 1 2
         %68 = OpBitcast %v3float %67
         %69 = OpIAdd %uint %uint_48 %start_byte_offset
         %70 = OpUDiv %uint %69 %uint_16
         %71 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %70
         %72 = OpLoad %v4uint %71 None
         %73 = OpVectorShuffle %v3uint %72 %72 0 1 2
         %74 = OpBitcast %v3float %73
         %75 = OpCompositeConstruct %mat4v3float %55 %61 %68 %74
               OpReturnValue %75
               OpFunctionEnd
         %29 = OpFunction %S None %77
%start_byte_offset_0 = OpFunctionParameter %uint
         %78 = OpLabel
         %79 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %80 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %79
         %81 = OpUMod %uint %start_byte_offset_0 %uint_16
         %82 = OpUDiv %uint %81 %uint_4
         %83 = OpLoad %v4uint %80 None
         %84 = OpVectorExtractDynamic %uint %83 %82
         %85 = OpBitcast %int %84
         %86 = OpIAdd %uint %uint_16 %start_byte_offset_0
         %87 = OpFunctionCall %mat4v3float %35 %86
         %88 = OpIAdd %uint %uint_128 %start_byte_offset_0
         %90 = OpUDiv %uint %88 %uint_16
         %91 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %90
         %92 = OpUMod %uint %88 %uint_16
         %93 = OpUDiv %uint %92 %uint_4
         %94 = OpLoad %v4uint %91 None
         %95 = OpVectorExtractDynamic %uint %94 %93
         %96 = OpBitcast %int %95
         %97 = OpCompositeConstruct %S %85 %87 %96
               OpReturnValue %97
               OpFunctionEnd
         %23 = OpFunction %_arr_S_uint_4 None %99
%start_byte_offset_1 = OpFunctionParameter %uint
        %100 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %17
               OpBranch %103
        %103 = OpLabel
               OpBranch %106
        %106 = OpLabel
        %108 = OpPhi %uint %uint_0 %103 %109 %105
               OpLoopMerge %107 %105 None
               OpBranch %104
        %104 = OpLabel
        %111 = OpUGreaterThanEqual %bool %108 %uint_4
               OpSelectionMerge %113 None
               OpBranchConditional %111 %114 %113
        %114 = OpLabel
               OpBranch %107
        %113 = OpLabel
        %115 = OpIMul %uint %108 %uint_192
        %117 = OpIAdd %uint %start_byte_offset_1 %115
        %118 = OpAccessChain %_ptr_Function_S %a %108
        %120 = OpFunctionCall %S %29 %117
               OpStore %118 %120 None
               OpBranch %105
        %105 = OpLabel
        %109 = OpIAdd %uint %108 %uint_1
               OpBranch %106
        %107 = OpLabel
        %110 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %110
               OpFunctionEnd
