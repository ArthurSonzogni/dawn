; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 143
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %a "a"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %a_0 "a"
               OpName %b "b"
               OpName %s "s"
               OpName %c "c"
               OpName %m "m"
               OpName %d "d"
               OpName %v "v"
               OpName %e "e"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_1 "a"
               OpDecorate %_arr_v4uint_uint_48 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_48 = OpConstant %uint 48
%_arr_v4uint_uint_48 = OpTypeArray %v4uint %uint_48
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_48
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
        %int = OpTypeInt 32 1
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%mat4v3float = OpTypeMatrix %v3float 4
          %S = OpTypeStruct %int %mat4v3float %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
         %18 = OpTypeFunction %void %_arr_S_uint_4
         %22 = OpTypeFunction %void %S
         %26 = OpTypeFunction %void %mat4v3float
         %30 = OpTypeFunction %void %v3float
         %34 = OpTypeFunction %void %float
         %37 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
   %uint_384 = OpConstant %uint 384
   %uint_400 = OpConstant %uint 400
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_2 = OpConstant %uint 2
     %v3uint = OpTypeVector %uint 3
         %68 = OpTypeFunction %mat4v3float %uint
    %uint_16 = OpConstant %uint 16
    %uint_32 = OpConstant %uint 32
         %97 = OpTypeFunction %S %uint
   %uint_128 = OpConstant %uint 128
        %119 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
        %123 = OpConstantNull %_arr_S_uint_4
       %bool = OpTypeBool
   %uint_192 = OpConstant %uint 192
%_ptr_Function_S = OpTypePointer Function %S
     %uint_1 = OpConstant %uint 1
          %a = OpFunction %void None %18
        %a_0 = OpFunctionParameter %_arr_S_uint_4
         %19 = OpLabel
               OpReturn
               OpFunctionEnd
          %b = OpFunction %void None %22
          %s = OpFunctionParameter %S
         %23 = OpLabel
               OpReturn
               OpFunctionEnd
          %c = OpFunction %void None %26
          %m = OpFunctionParameter %mat4v3float
         %27 = OpLabel
               OpReturn
               OpFunctionEnd
          %d = OpFunction %void None %30
          %v = OpFunctionParameter %v3float
         %31 = OpLabel
               OpReturn
               OpFunctionEnd
          %e = OpFunction %void None %34
          %f = OpFunctionParameter %float
         %35 = OpLabel
               OpReturn
               OpFunctionEnd
        %f_0 = OpFunction %void None %37
         %38 = OpLabel
         %39 = OpFunctionCall %_arr_S_uint_4 %40 %uint_0
         %42 = OpFunctionCall %void %a %39
         %43 = OpFunctionCall %S %44 %uint_384
         %46 = OpFunctionCall %void %b %43
         %47 = OpFunctionCall %mat4v3float %48 %uint_400
         %50 = OpFunctionCall %void %c %47
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %54 = OpLoad %v4uint %51 None
         %55 = OpVectorShuffle %v3uint %54 %54 0 1 2
         %57 = OpBitcast %v3float %55
         %58 = OpVectorShuffle %v3float %57 %57 2 0 1
         %59 = OpFunctionCall %void %d %58
         %60 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %61 = OpLoad %v4uint %60 None
         %62 = OpVectorShuffle %v3uint %61 %61 0 1 2
         %63 = OpBitcast %v3float %62
         %64 = OpVectorShuffle %v3float %63 %63 2 0 1
         %65 = OpCompositeExtract %float %64 0
         %66 = OpFunctionCall %void %e %65
               OpReturn
               OpFunctionEnd
         %48 = OpFunction %mat4v3float None %68
%start_byte_offset = OpFunctionParameter %uint
         %69 = OpLabel
         %70 = OpUDiv %uint %start_byte_offset %uint_16
         %72 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %70
         %73 = OpLoad %v4uint %72 None
         %74 = OpVectorShuffle %v3uint %73 %73 0 1 2
         %75 = OpBitcast %v3float %74
         %76 = OpIAdd %uint %uint_16 %start_byte_offset
         %77 = OpUDiv %uint %76 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpLoad %v4uint %78 None
         %80 = OpVectorShuffle %v3uint %79 %79 0 1 2
         %81 = OpBitcast %v3float %80
         %82 = OpIAdd %uint %uint_32 %start_byte_offset
         %84 = OpUDiv %uint %82 %uint_16
         %85 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %84
         %86 = OpLoad %v4uint %85 None
         %87 = OpVectorShuffle %v3uint %86 %86 0 1 2
         %88 = OpBitcast %v3float %87
         %89 = OpIAdd %uint %uint_48 %start_byte_offset
         %90 = OpUDiv %uint %89 %uint_16
         %91 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %90
         %92 = OpLoad %v4uint %91 None
         %93 = OpVectorShuffle %v3uint %92 %92 0 1 2
         %94 = OpBitcast %v3float %93
         %95 = OpCompositeConstruct %mat4v3float %75 %81 %88 %94
               OpReturnValue %95
               OpFunctionEnd
         %44 = OpFunction %S None %97
%start_byte_offset_0 = OpFunctionParameter %uint
         %98 = OpLabel
         %99 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %100 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %99
        %101 = OpUMod %uint %start_byte_offset_0 %uint_16
        %102 = OpUDiv %uint %101 %uint_4
        %103 = OpLoad %v4uint %100 None
        %104 = OpVectorExtractDynamic %uint %103 %102
        %105 = OpBitcast %int %104
        %106 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %107 = OpFunctionCall %mat4v3float %48 %106
        %108 = OpIAdd %uint %uint_128 %start_byte_offset_0
        %110 = OpUDiv %uint %108 %uint_16
        %111 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %110
        %112 = OpUMod %uint %108 %uint_16
        %113 = OpUDiv %uint %112 %uint_4
        %114 = OpLoad %v4uint %111 None
        %115 = OpVectorExtractDynamic %uint %114 %113
        %116 = OpBitcast %int %115
        %117 = OpCompositeConstruct %S %105 %107 %116
               OpReturnValue %117
               OpFunctionEnd
         %40 = OpFunction %_arr_S_uint_4 None %119
%start_byte_offset_1 = OpFunctionParameter %uint
        %120 = OpLabel
        %a_1 = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a_1 %123
               OpBranch %124
        %124 = OpLabel
               OpBranch %127
        %127 = OpLabel
        %129 = OpPhi %uint %uint_0 %124 %130 %126
               OpLoopMerge %128 %126 None
               OpBranch %125
        %125 = OpLabel
        %132 = OpUGreaterThanEqual %bool %129 %uint_4
               OpSelectionMerge %134 None
               OpBranchConditional %132 %135 %134
        %135 = OpLabel
               OpBranch %128
        %134 = OpLabel
        %136 = OpIMul %uint %129 %uint_192
        %138 = OpIAdd %uint %start_byte_offset_1 %136
        %139 = OpAccessChain %_ptr_Function_S %a_1 %129
        %141 = OpFunctionCall %S %44 %138
               OpStore %139 %141 None
               OpBranch %126
        %126 = OpLabel
        %130 = OpIAdd %uint %129 %uint_1
               OpBranch %127
        %128 = OpLabel
        %131 = OpLoad %_arr_S_uint_4 %a_1 None
               OpReturnValue %131
               OpFunctionEnd
