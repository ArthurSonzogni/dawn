; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 204
; Schema: 0
               OpCapability Shader
         %29 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpMemberName %Inner 0 "m"
               OpName %Inner "Inner"
               OpMemberName %Outer 0 "a"
               OpName %Outer "Outer"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_a "l_a_i_a"
               OpName %l_a_i_a_i "l_a_i_a_i"
               OpName %l_a_i_a_i_m "l_a_i_a_i_m"
               OpName %l_a_i_a_i_m_i "l_a_i_a_i_m_i"
               OpName %l_a_i_a_i_m_i_i "l_a_i_a_i_m_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_0 "a"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_64 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_64 = OpConstant %uint 64
%_arr_v4uint_uint_64 = OpTypeArray %v4uint %uint_64
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_64
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %13 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %24 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
   %uint_256 = OpConstant %uint 256
     %uint_8 = OpConstant %uint 8
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat4v2float = OpTypeMatrix %v2float 4
      %Inner = OpTypeStruct %mat4v2float
     %uint_4 = OpConstant %uint 4
%_arr_Inner_uint_4 = OpTypeArray %Inner %uint_4
      %Outer = OpTypeStruct %_arr_Inner_uint_4
%_arr_Outer_uint_4 = OpTypeArray %Outer %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_1 = OpConstant %uint 1
         %99 = OpTypeFunction %_arr_Outer_uint_4 %uint
%_ptr_Function__arr_Outer_uint_4 = OpTypePointer Function %_arr_Outer_uint_4
        %103 = OpConstantNull %_arr_Outer_uint_4
%_ptr_Function_Outer = OpTypePointer Function %Outer
        %121 = OpTypeFunction %Outer %uint
        %126 = OpTypeFunction %_arr_Inner_uint_4 %uint
%_ptr_Function__arr_Inner_uint_4 = OpTypePointer Function %_arr_Inner_uint_4
        %130 = OpConstantNull %_arr_Inner_uint_4
%_ptr_Function_Inner = OpTypePointer Function %Inner
        %148 = OpTypeFunction %Inner %uint
        %153 = OpTypeFunction %mat4v2float %uint
    %uint_24 = OpConstant %uint 24
          %i = OpFunction %int None %13
         %14 = OpLabel
         %15 = OpLoad %int %counter None
         %16 = OpBitcast %uint %15
         %17 = OpBitcast %uint %int_1
         %19 = OpIAdd %uint %16 %17
         %20 = OpBitcast %int %19
               OpStore %counter %20 None
         %21 = OpLoad %int %counter None
               OpReturnValue %21
               OpFunctionEnd
          %f = OpFunction %void None %24
         %25 = OpLabel
         %26 = OpFunctionCall %int %i
         %27 = OpBitcast %uint %26
         %28 = OpExtInst %uint %29 UMin %27 %uint_3
         %31 = OpIMul %uint %uint_256 %28
         %33 = OpFunctionCall %int %i
         %34 = OpBitcast %uint %33
         %35 = OpExtInst %uint %29 UMin %34 %uint_3
         %36 = OpIMul %uint %uint_64 %35
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %29 UMin %38 %uint_3
         %40 = OpIMul %uint %uint_8 %39
        %l_a = OpFunctionCall %_arr_Outer_uint_4 %51 %uint_0
      %l_a_i = OpFunctionCall %Outer %54 %31
    %l_a_i_a = OpFunctionCall %_arr_Inner_uint_4 %56 %31
         %57 = OpIAdd %uint %31 %36
  %l_a_i_a_i = OpFunctionCall %Inner %59 %57
         %60 = OpIAdd %uint %31 %36
%l_a_i_a_i_m = OpFunctionCall %mat4v2float %62 %60
         %63 = OpIAdd %uint %31 %36
         %64 = OpIAdd %uint %63 %40
         %65 = OpUDiv %uint %64 %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %65
         %69 = OpBitwiseAnd %uint %64 %uint_15
         %71 = OpShiftRightLogical %uint %69 %uint_2
         %73 = OpLoad %v4uint %67 None
         %74 = OpVectorShuffle %v2uint %73 %73 2 3
         %76 = OpVectorShuffle %v2uint %73 %73 0 1
         %77 = OpIEqual %bool %71 %uint_2
         %80 = OpCompositeConstruct %v2bool %77 %77
         %81 = OpSelect %v2uint %80 %74 %76
%l_a_i_a_i_m_i = OpBitcast %v2float %81
         %83 = OpFunctionCall %int %i
         %84 = OpBitcast %uint %83
         %85 = OpExtInst %uint %29 UMin %84 %uint_1
         %87 = OpIMul %uint %85 %uint_4
         %88 = OpIAdd %uint %31 %36
         %89 = OpIAdd %uint %88 %40
         %90 = OpIAdd %uint %89 %87
         %91 = OpUDiv %uint %90 %uint_16
         %92 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %91
         %93 = OpBitwiseAnd %uint %90 %uint_15
         %94 = OpShiftRightLogical %uint %93 %uint_2
         %95 = OpLoad %v4uint %92 None
         %96 = OpVectorExtractDynamic %uint %95 %94
%l_a_i_a_i_m_i_i = OpBitcast %float %96
               OpReturn
               OpFunctionEnd
         %51 = OpFunction %_arr_Outer_uint_4 None %99
%start_byte_offset = OpFunctionParameter %uint
        %100 = OpLabel
          %a = OpVariable %_ptr_Function__arr_Outer_uint_4 Function
               OpStore %a %103
               OpBranch %104
        %104 = OpLabel
               OpBranch %107
        %107 = OpLabel
        %109 = OpPhi %uint %uint_0 %104 %110 %106
               OpLoopMerge %108 %106 None
               OpBranch %105
        %105 = OpLabel
        %112 = OpUGreaterThanEqual %bool %109 %uint_4
               OpSelectionMerge %113 None
               OpBranchConditional %112 %114 %113
        %114 = OpLabel
               OpBranch %108
        %113 = OpLabel
        %115 = OpIMul %uint %109 %uint_256
        %116 = OpIAdd %uint %start_byte_offset %115
        %117 = OpAccessChain %_ptr_Function_Outer %a %109
        %119 = OpFunctionCall %Outer %54 %116
               OpStore %117 %119 None
               OpBranch %106
        %106 = OpLabel
        %110 = OpIAdd %uint %109 %uint_1
               OpBranch %107
        %108 = OpLabel
        %111 = OpLoad %_arr_Outer_uint_4 %a None
               OpReturnValue %111
               OpFunctionEnd
         %54 = OpFunction %Outer None %121
%start_byte_offset_0 = OpFunctionParameter %uint
        %122 = OpLabel
        %123 = OpFunctionCall %_arr_Inner_uint_4 %56 %start_byte_offset_0
        %124 = OpCompositeConstruct %Outer %123
               OpReturnValue %124
               OpFunctionEnd
         %56 = OpFunction %_arr_Inner_uint_4 None %126
%start_byte_offset_1 = OpFunctionParameter %uint
        %127 = OpLabel
        %a_0 = OpVariable %_ptr_Function__arr_Inner_uint_4 Function
               OpStore %a_0 %130
               OpBranch %131
        %131 = OpLabel
               OpBranch %134
        %134 = OpLabel
        %136 = OpPhi %uint %uint_0 %131 %137 %133
               OpLoopMerge %135 %133 None
               OpBranch %132
        %132 = OpLabel
        %139 = OpUGreaterThanEqual %bool %136 %uint_4
               OpSelectionMerge %140 None
               OpBranchConditional %139 %141 %140
        %141 = OpLabel
               OpBranch %135
        %140 = OpLabel
        %142 = OpIMul %uint %136 %uint_64
        %143 = OpIAdd %uint %start_byte_offset_1 %142
        %144 = OpAccessChain %_ptr_Function_Inner %a_0 %136
        %146 = OpFunctionCall %Inner %59 %143
               OpStore %144 %146 None
               OpBranch %133
        %133 = OpLabel
        %137 = OpIAdd %uint %136 %uint_1
               OpBranch %134
        %135 = OpLabel
        %138 = OpLoad %_arr_Inner_uint_4 %a_0 None
               OpReturnValue %138
               OpFunctionEnd
         %59 = OpFunction %Inner None %148
%start_byte_offset_2 = OpFunctionParameter %uint
        %149 = OpLabel
        %150 = OpFunctionCall %mat4v2float %62 %start_byte_offset_2
        %151 = OpCompositeConstruct %Inner %150
               OpReturnValue %151
               OpFunctionEnd
         %62 = OpFunction %mat4v2float None %153
%start_byte_offset_3 = OpFunctionParameter %uint
        %154 = OpLabel
        %155 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %156 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %155
        %157 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %158 = OpShiftRightLogical %uint %157 %uint_2
        %159 = OpLoad %v4uint %156 None
        %160 = OpVectorShuffle %v2uint %159 %159 2 3
        %161 = OpVectorShuffle %v2uint %159 %159 0 1
        %162 = OpIEqual %bool %158 %uint_2
        %163 = OpCompositeConstruct %v2bool %162 %162
        %164 = OpSelect %v2uint %163 %160 %161
        %165 = OpBitcast %v2float %164
        %166 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %167 = OpUDiv %uint %166 %uint_16
        %168 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %167
        %169 = OpBitwiseAnd %uint %166 %uint_15
        %170 = OpShiftRightLogical %uint %169 %uint_2
        %171 = OpLoad %v4uint %168 None
        %172 = OpVectorShuffle %v2uint %171 %171 2 3
        %173 = OpVectorShuffle %v2uint %171 %171 0 1
        %174 = OpIEqual %bool %170 %uint_2
        %175 = OpCompositeConstruct %v2bool %174 %174
        %176 = OpSelect %v2uint %175 %172 %173
        %177 = OpBitcast %v2float %176
        %178 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %179 = OpUDiv %uint %178 %uint_16
        %180 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %179
        %181 = OpBitwiseAnd %uint %178 %uint_15
        %182 = OpShiftRightLogical %uint %181 %uint_2
        %183 = OpLoad %v4uint %180 None
        %184 = OpVectorShuffle %v2uint %183 %183 2 3
        %185 = OpVectorShuffle %v2uint %183 %183 0 1
        %186 = OpIEqual %bool %182 %uint_2
        %187 = OpCompositeConstruct %v2bool %186 %186
        %188 = OpSelect %v2uint %187 %184 %185
        %189 = OpBitcast %v2float %188
        %190 = OpIAdd %uint %uint_24 %start_byte_offset_3
        %192 = OpUDiv %uint %190 %uint_16
        %193 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %192
        %194 = OpBitwiseAnd %uint %190 %uint_15
        %195 = OpShiftRightLogical %uint %194 %uint_2
        %196 = OpLoad %v4uint %193 None
        %197 = OpVectorShuffle %v2uint %196 %196 2 3
        %198 = OpVectorShuffle %v2uint %196 %196 0 1
        %199 = OpIEqual %bool %195 %uint_2
        %200 = OpCompositeConstruct %v2bool %199 %199
        %201 = OpSelect %v2uint %200 %197 %198
        %202 = OpBitcast %v2float %201
        %203 = OpCompositeConstruct %mat4v2float %165 %177 %189 %202
               OpReturnValue %203
               OpFunctionEnd
