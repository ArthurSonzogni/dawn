; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 157
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpName %f "f"
               OpMemberName %Inner 0 "m"
               OpName %Inner "Inner"
               OpMemberName %Outer 0 "a"
               OpName %Outer "Outer"
               OpName %l_a "l_a"
               OpName %l_a_3 "l_a_3"
               OpName %l_a_3_a "l_a_3_a"
               OpName %l_a_3_a_2 "l_a_3_a_2"
               OpName %l_a_3_a_2_m "l_a_3_a_2_m"
               OpName %l_a_3_a_2_m_1 "l_a_3_a_2_m_1"
               OpName %l_a_3_a_2_m_1_0 "l_a_3_a_2_m_1_0"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_0 "a"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_64 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_64 = OpConstant %uint 64
%_arr_v4uint_uint_64 = OpTypeArray %v4uint %uint_64
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_64
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
         %10 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat4v2float = OpTypeMatrix %v2float 4
      %Inner = OpTypeStruct %mat4v2float
     %uint_4 = OpConstant %uint 4
%_arr_Inner_uint_4 = OpTypeArray %Inner %uint_4
      %Outer = OpTypeStruct %_arr_Inner_uint_4
%_arr_Outer_uint_4 = OpTypeArray %Outer %uint_4
     %uint_0 = OpConstant %uint 0
   %uint_768 = OpConstant %uint 768
   %uint_896 = OpConstant %uint 896
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_56 = OpConstant %uint 56
     %v2uint = OpTypeVector %uint 2
         %45 = OpTypeFunction %_arr_Outer_uint_4 %uint
%_ptr_Function__arr_Outer_uint_4 = OpTypePointer Function %_arr_Outer_uint_4
         %49 = OpConstantNull %_arr_Outer_uint_4
       %bool = OpTypeBool
   %uint_256 = OpConstant %uint 256
%_ptr_Function_Outer = OpTypePointer Function %Outer
     %uint_1 = OpConstant %uint 1
         %70 = OpTypeFunction %Outer %uint
         %75 = OpTypeFunction %_arr_Inner_uint_4 %uint
%_ptr_Function__arr_Inner_uint_4 = OpTypePointer Function %_arr_Inner_uint_4
         %79 = OpConstantNull %_arr_Inner_uint_4
%_ptr_Function_Inner = OpTypePointer Function %Inner
         %97 = OpTypeFunction %Inner %uint
        %102 = OpTypeFunction %mat4v2float %uint
    %uint_16 = OpConstant %uint 16
     %uint_2 = OpConstant %uint 2
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
    %uint_24 = OpConstant %uint 24
          %f = OpFunction %void None %10
         %11 = OpLabel
        %l_a = OpFunctionCall %_arr_Outer_uint_4 %21 %uint_0
      %l_a_3 = OpFunctionCall %Outer %24 %uint_768
    %l_a_3_a = OpFunctionCall %_arr_Inner_uint_4 %27 %uint_768
  %l_a_3_a_2 = OpFunctionCall %Inner %29 %uint_896
%l_a_3_a_2_m = OpFunctionCall %mat4v2float %32 %uint_896
         %33 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_56
         %36 = OpLoad %v4uint %33 None
         %37 = OpVectorShuffle %v2uint %36 %36 2 3
%l_a_3_a_2_m_1 = OpBitcast %v2float %37
         %40 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_56
         %41 = OpLoad %v4uint %40 None
         %42 = OpCompositeExtract %uint %41 2
%l_a_3_a_2_m_1_0 = OpBitcast %float %42
               OpReturn
               OpFunctionEnd
         %21 = OpFunction %_arr_Outer_uint_4 None %45
%start_byte_offset = OpFunctionParameter %uint
         %46 = OpLabel
          %a = OpVariable %_ptr_Function__arr_Outer_uint_4 Function
               OpStore %a %49
               OpBranch %50
         %50 = OpLabel
               OpBranch %53
         %53 = OpLabel
         %55 = OpPhi %uint %uint_0 %50 %56 %52
               OpLoopMerge %54 %52 None
               OpBranch %51
         %51 = OpLabel
         %58 = OpUGreaterThanEqual %bool %55 %uint_4
               OpSelectionMerge %60 None
               OpBranchConditional %58 %61 %60
         %61 = OpLabel
               OpBranch %54
         %60 = OpLabel
         %62 = OpIMul %uint %55 %uint_256
         %64 = OpIAdd %uint %start_byte_offset %62
         %65 = OpAccessChain %_ptr_Function_Outer %a %55
         %67 = OpFunctionCall %Outer %24 %64
               OpStore %65 %67 None
               OpBranch %52
         %52 = OpLabel
         %56 = OpIAdd %uint %55 %uint_1
               OpBranch %53
         %54 = OpLabel
         %57 = OpLoad %_arr_Outer_uint_4 %a None
               OpReturnValue %57
               OpFunctionEnd
         %24 = OpFunction %Outer None %70
%start_byte_offset_0 = OpFunctionParameter %uint
         %71 = OpLabel
         %72 = OpFunctionCall %_arr_Inner_uint_4 %27 %start_byte_offset_0
         %73 = OpCompositeConstruct %Outer %72
               OpReturnValue %73
               OpFunctionEnd
         %27 = OpFunction %_arr_Inner_uint_4 None %75
%start_byte_offset_1 = OpFunctionParameter %uint
         %76 = OpLabel
        %a_0 = OpVariable %_ptr_Function__arr_Inner_uint_4 Function
               OpStore %a_0 %79
               OpBranch %80
         %80 = OpLabel
               OpBranch %83
         %83 = OpLabel
         %85 = OpPhi %uint %uint_0 %80 %86 %82
               OpLoopMerge %84 %82 None
               OpBranch %81
         %81 = OpLabel
         %88 = OpUGreaterThanEqual %bool %85 %uint_4
               OpSelectionMerge %89 None
               OpBranchConditional %88 %90 %89
         %90 = OpLabel
               OpBranch %84
         %89 = OpLabel
         %91 = OpIMul %uint %85 %uint_64
         %92 = OpIAdd %uint %start_byte_offset_1 %91
         %93 = OpAccessChain %_ptr_Function_Inner %a_0 %85
         %95 = OpFunctionCall %Inner %29 %92
               OpStore %93 %95 None
               OpBranch %82
         %82 = OpLabel
         %86 = OpIAdd %uint %85 %uint_1
               OpBranch %83
         %84 = OpLabel
         %87 = OpLoad %_arr_Inner_uint_4 %a_0 None
               OpReturnValue %87
               OpFunctionEnd
         %29 = OpFunction %Inner None %97
%start_byte_offset_2 = OpFunctionParameter %uint
         %98 = OpLabel
         %99 = OpFunctionCall %mat4v2float %32 %start_byte_offset_2
        %100 = OpCompositeConstruct %Inner %99
               OpReturnValue %100
               OpFunctionEnd
         %32 = OpFunction %mat4v2float None %102
%start_byte_offset_3 = OpFunctionParameter %uint
        %103 = OpLabel
        %104 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %106 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %104
        %107 = OpUMod %uint %start_byte_offset_3 %uint_16
        %108 = OpUDiv %uint %107 %uint_4
        %109 = OpLoad %v4uint %106 None
        %110 = OpVectorShuffle %v2uint %109 %109 2 3
        %111 = OpVectorShuffle %v2uint %109 %109 0 1
        %112 = OpIEqual %bool %108 %uint_2
        %115 = OpCompositeConstruct %v2bool %112 %112
        %116 = OpSelect %v2uint %115 %110 %111
        %117 = OpBitcast %v2float %116
        %118 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %120 = OpUDiv %uint %118 %uint_16
        %121 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %120
        %122 = OpUMod %uint %118 %uint_16
        %123 = OpUDiv %uint %122 %uint_4
        %124 = OpLoad %v4uint %121 None
        %125 = OpVectorShuffle %v2uint %124 %124 2 3
        %126 = OpVectorShuffle %v2uint %124 %124 0 1
        %127 = OpIEqual %bool %123 %uint_2
        %128 = OpCompositeConstruct %v2bool %127 %127
        %129 = OpSelect %v2uint %128 %125 %126
        %130 = OpBitcast %v2float %129
        %131 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %132 = OpUDiv %uint %131 %uint_16
        %133 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %132
        %134 = OpUMod %uint %131 %uint_16
        %135 = OpUDiv %uint %134 %uint_4
        %136 = OpLoad %v4uint %133 None
        %137 = OpVectorShuffle %v2uint %136 %136 2 3
        %138 = OpVectorShuffle %v2uint %136 %136 0 1
        %139 = OpIEqual %bool %135 %uint_2
        %140 = OpCompositeConstruct %v2bool %139 %139
        %141 = OpSelect %v2uint %140 %137 %138
        %142 = OpBitcast %v2float %141
        %143 = OpIAdd %uint %uint_24 %start_byte_offset_3
        %145 = OpUDiv %uint %143 %uint_16
        %146 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %145
        %147 = OpUMod %uint %143 %uint_16
        %148 = OpUDiv %uint %147 %uint_4
        %149 = OpLoad %v4uint %146 None
        %150 = OpVectorShuffle %v2uint %149 %149 2 3
        %151 = OpVectorShuffle %v2uint %149 %149 0 1
        %152 = OpIEqual %bool %148 %uint_2
        %153 = OpCompositeConstruct %v2bool %152 %152
        %154 = OpSelect %v2uint %153 %150 %151
        %155 = OpBitcast %v2float %154
        %156 = OpCompositeConstruct %mat4v2float %117 %130 %142 %155
               OpReturnValue %156
               OpFunctionEnd
