; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 72
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %31 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %f "f"
               OpName %t "t"
               OpName %l "l"
               OpName %a "a"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
         %10 = OpTypeFunction %void
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat2v4half = OpTypeMatrix %v4half 2
   %uint_264 = OpConstant %uint 264
     %v2half = OpTypeVector %half 2
 %mat4v2half = OpTypeMatrix %v2half 4
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %v2uint = OpTypeVector %uint 2
         %40 = OpTypeFunction %mat2v4half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %f = OpFunction %void None %10
         %11 = OpLabel
         %12 = OpFunctionCall %mat2v4half %16 %uint_264
          %t = OpTranspose %mat4v2half %12
         %21 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %25 = OpLoad %v4uint %21 None
         %26 = OpVectorShuffle %v2uint %25 %25 0 1
         %28 = OpBitcast %v4half %26
         %29 = OpVectorShuffle %v4half %28 %28 1 3 0 2
          %l = OpExtInst %half %31 Length %29
         %32 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %33 = OpLoad %v4uint %32 None
         %34 = OpVectorShuffle %v2uint %33 %33 0 1
         %35 = OpBitcast %v4half %34
         %36 = OpVectorShuffle %v4half %35 %35 1 3 0 2
         %37 = OpCompositeExtract %half %36 0
          %a = OpExtInst %half %31 FAbs %37
               OpReturn
               OpFunctionEnd
         %16 = OpFunction %mat2v4half None %40
%start_byte_offset = OpFunctionParameter %uint
         %41 = OpLabel
         %42 = OpUDiv %uint %start_byte_offset %uint_16
         %44 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %42
         %45 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %47 = OpShiftRightLogical %uint %45 %uint_2
         %49 = OpLoad %v4uint %44 None
         %50 = OpVectorShuffle %v2uint %49 %49 2 3
         %51 = OpVectorShuffle %v2uint %49 %49 0 1
         %52 = OpIEqual %bool %47 %uint_2
         %55 = OpCompositeConstruct %v2bool %52 %52
         %56 = OpSelect %v2uint %55 %50 %51
         %57 = OpBitcast %v4half %56
         %58 = OpIAdd %uint %uint_8 %start_byte_offset
         %60 = OpUDiv %uint %58 %uint_16
         %61 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %60
         %62 = OpBitwiseAnd %uint %58 %uint_15
         %63 = OpShiftRightLogical %uint %62 %uint_2
         %64 = OpLoad %v4uint %61 None
         %65 = OpVectorShuffle %v2uint %64 %64 2 3
         %66 = OpVectorShuffle %v2uint %64 %64 0 1
         %67 = OpIEqual %bool %63 %uint_2
         %68 = OpCompositeConstruct %v2bool %67 %67
         %69 = OpSelect %v2uint %68 %65 %66
         %70 = OpBitcast %v4half %69
         %71 = OpCompositeConstruct %mat2v4half %57 %70
               OpReturnValue %71
               OpFunctionEnd
