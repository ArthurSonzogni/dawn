; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 159
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpName %f "f"
               OpMemberName %Inner 0 "m"
               OpName %Inner "Inner"
               OpMemberName %Outer 0 "a"
               OpName %Outer "Outer"
               OpName %l_a "l_a"
               OpName %l_a_3 "l_a_3"
               OpName %l_a_3_a "l_a_3_a"
               OpName %l_a_3_a_2 "l_a_3_a_2"
               OpName %l_a_3_a_2_m "l_a_3_a_2_m"
               OpName %l_a_3_a_2_m_1 "l_a_3_a_2_m_1"
               OpName %l_a_3_a_2_m_1_0 "l_a_3_a_2_m_1_0"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_0 "a"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_64 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_64 = OpConstant %uint 64
%_arr_v4uint_uint_64 = OpTypeArray %v4uint %uint_64
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_64
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
         %10 = OpTypeFunction %void
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat4v4half = OpTypeMatrix %v4half 4
      %Inner = OpTypeStruct %mat4v4half
     %uint_4 = OpConstant %uint 4
%_arr_Inner_uint_4 = OpTypeArray %Inner %uint_4
      %Outer = OpTypeStruct %_arr_Inner_uint_4
%_arr_Outer_uint_4 = OpTypeArray %Outer %uint_4
     %uint_0 = OpConstant %uint 0
   %uint_768 = OpConstant %uint 768
   %uint_896 = OpConstant %uint 896
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_56 = OpConstant %uint 56
     %v2uint = OpTypeVector %uint 2
     %v2half = OpTypeVector %half 2
         %47 = OpTypeFunction %_arr_Outer_uint_4 %uint
%_ptr_Function__arr_Outer_uint_4 = OpTypePointer Function %_arr_Outer_uint_4
         %51 = OpConstantNull %_arr_Outer_uint_4
       %bool = OpTypeBool
   %uint_256 = OpConstant %uint 256
%_ptr_Function_Outer = OpTypePointer Function %Outer
     %uint_1 = OpConstant %uint 1
         %72 = OpTypeFunction %Outer %uint
         %77 = OpTypeFunction %_arr_Inner_uint_4 %uint
%_ptr_Function__arr_Inner_uint_4 = OpTypePointer Function %_arr_Inner_uint_4
         %81 = OpConstantNull %_arr_Inner_uint_4
%_ptr_Function_Inner = OpTypePointer Function %Inner
         %99 = OpTypeFunction %Inner %uint
        %104 = OpTypeFunction %mat4v4half %uint
    %uint_16 = OpConstant %uint 16
     %uint_2 = OpConstant %uint 2
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
    %uint_24 = OpConstant %uint 24
          %f = OpFunction %void None %10
         %11 = OpLabel
        %l_a = OpFunctionCall %_arr_Outer_uint_4 %21 %uint_0
      %l_a_3 = OpFunctionCall %Outer %24 %uint_768
    %l_a_3_a = OpFunctionCall %_arr_Inner_uint_4 %27 %uint_768
  %l_a_3_a_2 = OpFunctionCall %Inner %29 %uint_896
%l_a_3_a_2_m = OpFunctionCall %mat4v4half %32 %uint_896
         %33 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_56
         %36 = OpLoad %v4uint %33 None
         %37 = OpVectorShuffle %v2uint %36 %36 2 3
%l_a_3_a_2_m_1 = OpBitcast %v4half %37
         %40 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_56
         %41 = OpLoad %v4uint %40 None
         %42 = OpCompositeExtract %uint %41 2
         %44 = OpBitcast %v2half %42
%l_a_3_a_2_m_1_0 = OpCompositeExtract %half %44 0
               OpReturn
               OpFunctionEnd
         %21 = OpFunction %_arr_Outer_uint_4 None %47
%start_byte_offset = OpFunctionParameter %uint
         %48 = OpLabel
          %a = OpVariable %_ptr_Function__arr_Outer_uint_4 Function
               OpStore %a %51
               OpBranch %52
         %52 = OpLabel
               OpBranch %55
         %55 = OpLabel
         %57 = OpPhi %uint %uint_0 %52 %58 %54
               OpLoopMerge %56 %54 None
               OpBranch %53
         %53 = OpLabel
         %60 = OpUGreaterThanEqual %bool %57 %uint_4
               OpSelectionMerge %62 None
               OpBranchConditional %60 %63 %62
         %63 = OpLabel
               OpBranch %56
         %62 = OpLabel
         %64 = OpIMul %uint %57 %uint_256
         %66 = OpIAdd %uint %start_byte_offset %64
         %67 = OpAccessChain %_ptr_Function_Outer %a %57
         %69 = OpFunctionCall %Outer %24 %66
               OpStore %67 %69 None
               OpBranch %54
         %54 = OpLabel
         %58 = OpIAdd %uint %57 %uint_1
               OpBranch %55
         %56 = OpLabel
         %59 = OpLoad %_arr_Outer_uint_4 %a None
               OpReturnValue %59
               OpFunctionEnd
         %24 = OpFunction %Outer None %72
%start_byte_offset_0 = OpFunctionParameter %uint
         %73 = OpLabel
         %74 = OpFunctionCall %_arr_Inner_uint_4 %27 %start_byte_offset_0
         %75 = OpCompositeConstruct %Outer %74
               OpReturnValue %75
               OpFunctionEnd
         %27 = OpFunction %_arr_Inner_uint_4 None %77
%start_byte_offset_1 = OpFunctionParameter %uint
         %78 = OpLabel
        %a_0 = OpVariable %_ptr_Function__arr_Inner_uint_4 Function
               OpStore %a_0 %81
               OpBranch %82
         %82 = OpLabel
               OpBranch %85
         %85 = OpLabel
         %87 = OpPhi %uint %uint_0 %82 %88 %84
               OpLoopMerge %86 %84 None
               OpBranch %83
         %83 = OpLabel
         %90 = OpUGreaterThanEqual %bool %87 %uint_4
               OpSelectionMerge %91 None
               OpBranchConditional %90 %92 %91
         %92 = OpLabel
               OpBranch %86
         %91 = OpLabel
         %93 = OpIMul %uint %87 %uint_64
         %94 = OpIAdd %uint %start_byte_offset_1 %93
         %95 = OpAccessChain %_ptr_Function_Inner %a_0 %87
         %97 = OpFunctionCall %Inner %29 %94
               OpStore %95 %97 None
               OpBranch %84
         %84 = OpLabel
         %88 = OpIAdd %uint %87 %uint_1
               OpBranch %85
         %86 = OpLabel
         %89 = OpLoad %_arr_Inner_uint_4 %a_0 None
               OpReturnValue %89
               OpFunctionEnd
         %29 = OpFunction %Inner None %99
%start_byte_offset_2 = OpFunctionParameter %uint
        %100 = OpLabel
        %101 = OpFunctionCall %mat4v4half %32 %start_byte_offset_2
        %102 = OpCompositeConstruct %Inner %101
               OpReturnValue %102
               OpFunctionEnd
         %32 = OpFunction %mat4v4half None %104
%start_byte_offset_3 = OpFunctionParameter %uint
        %105 = OpLabel
        %106 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %108 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %106
        %109 = OpUMod %uint %start_byte_offset_3 %uint_16
        %110 = OpUDiv %uint %109 %uint_4
        %111 = OpLoad %v4uint %108 None
        %112 = OpVectorShuffle %v2uint %111 %111 2 3
        %113 = OpVectorShuffle %v2uint %111 %111 0 1
        %114 = OpIEqual %bool %110 %uint_2
        %117 = OpCompositeConstruct %v2bool %114 %114
        %118 = OpSelect %v2uint %117 %112 %113
        %119 = OpBitcast %v4half %118
        %120 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %122 = OpUDiv %uint %120 %uint_16
        %123 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %122
        %124 = OpUMod %uint %120 %uint_16
        %125 = OpUDiv %uint %124 %uint_4
        %126 = OpLoad %v4uint %123 None
        %127 = OpVectorShuffle %v2uint %126 %126 2 3
        %128 = OpVectorShuffle %v2uint %126 %126 0 1
        %129 = OpIEqual %bool %125 %uint_2
        %130 = OpCompositeConstruct %v2bool %129 %129
        %131 = OpSelect %v2uint %130 %127 %128
        %132 = OpBitcast %v4half %131
        %133 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %134 = OpUDiv %uint %133 %uint_16
        %135 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %134
        %136 = OpUMod %uint %133 %uint_16
        %137 = OpUDiv %uint %136 %uint_4
        %138 = OpLoad %v4uint %135 None
        %139 = OpVectorShuffle %v2uint %138 %138 2 3
        %140 = OpVectorShuffle %v2uint %138 %138 0 1
        %141 = OpIEqual %bool %137 %uint_2
        %142 = OpCompositeConstruct %v2bool %141 %141
        %143 = OpSelect %v2uint %142 %139 %140
        %144 = OpBitcast %v4half %143
        %145 = OpIAdd %uint %uint_24 %start_byte_offset_3
        %147 = OpUDiv %uint %145 %uint_16
        %148 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %147
        %149 = OpUMod %uint %145 %uint_16
        %150 = OpUDiv %uint %149 %uint_4
        %151 = OpLoad %v4uint %148 None
        %152 = OpVectorShuffle %v2uint %151 %151 2 3
        %153 = OpVectorShuffle %v2uint %151 %151 0 1
        %154 = OpIEqual %bool %150 %uint_2
        %155 = OpCompositeConstruct %v2bool %154 %154
        %156 = OpSelect %v2uint %155 %152 %153
        %157 = OpBitcast %v4half %156
        %158 = OpCompositeConstruct %mat4v4half %119 %132 %144 %157
               OpReturnValue %158
               OpFunctionEnd
