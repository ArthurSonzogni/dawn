; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 209
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %29 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpMemberName %Inner 0 "m"
               OpName %Inner "Inner"
               OpMemberName %Outer 0 "a"
               OpName %Outer "Outer"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_a "l_a_i_a"
               OpName %l_a_i_a_i "l_a_i_a_i"
               OpName %l_a_i_a_i_m "l_a_i_a_i_m"
               OpName %l_a_i_a_i_m_i "l_a_i_a_i_m_i"
               OpName %l_a_i_a_i_m_i_i "l_a_i_a_i_m_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_0 "a"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_64 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_64 = OpConstant %uint 64
%_arr_v4uint_uint_64 = OpTypeArray %v4uint %uint_64
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_64
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %13 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %24 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
   %uint_256 = OpConstant %uint 256
     %uint_8 = OpConstant %uint 8
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat4v4half = OpTypeMatrix %v4half 4
      %Inner = OpTypeStruct %mat4v4half
     %uint_4 = OpConstant %uint 4
%_arr_Inner_uint_4 = OpTypeArray %Inner %uint_4
      %Outer = OpTypeStruct %_arr_Inner_uint_4
%_arr_Outer_uint_4 = OpTypeArray %Outer %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_1 = OpConstant %uint 1
     %v2half = OpTypeVector %half 2
        %104 = OpTypeFunction %_arr_Outer_uint_4 %uint
%_ptr_Function__arr_Outer_uint_4 = OpTypePointer Function %_arr_Outer_uint_4
        %108 = OpConstantNull %_arr_Outer_uint_4
%_ptr_Function_Outer = OpTypePointer Function %Outer
        %126 = OpTypeFunction %Outer %uint
        %131 = OpTypeFunction %_arr_Inner_uint_4 %uint
%_ptr_Function__arr_Inner_uint_4 = OpTypePointer Function %_arr_Inner_uint_4
        %135 = OpConstantNull %_arr_Inner_uint_4
%_ptr_Function_Inner = OpTypePointer Function %Inner
        %153 = OpTypeFunction %Inner %uint
        %158 = OpTypeFunction %mat4v4half %uint
    %uint_24 = OpConstant %uint 24
          %i = OpFunction %int None %13
         %14 = OpLabel
         %15 = OpLoad %int %counter None
         %16 = OpBitcast %uint %15
         %17 = OpBitcast %uint %int_1
         %19 = OpIAdd %uint %16 %17
         %20 = OpBitcast %int %19
               OpStore %counter %20 None
         %21 = OpLoad %int %counter None
               OpReturnValue %21
               OpFunctionEnd
          %f = OpFunction %void None %24
         %25 = OpLabel
         %26 = OpFunctionCall %int %i
         %27 = OpBitcast %uint %26
         %28 = OpExtInst %uint %29 UMin %27 %uint_3
         %31 = OpIMul %uint %uint_256 %28
         %33 = OpFunctionCall %int %i
         %34 = OpBitcast %uint %33
         %35 = OpExtInst %uint %29 UMin %34 %uint_3
         %36 = OpIMul %uint %uint_64 %35
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %29 UMin %38 %uint_3
         %40 = OpIMul %uint %uint_8 %39
        %l_a = OpFunctionCall %_arr_Outer_uint_4 %51 %uint_0
      %l_a_i = OpFunctionCall %Outer %54 %31
    %l_a_i_a = OpFunctionCall %_arr_Inner_uint_4 %56 %31
         %57 = OpIAdd %uint %31 %36
  %l_a_i_a_i = OpFunctionCall %Inner %59 %57
         %60 = OpIAdd %uint %31 %36
%l_a_i_a_i_m = OpFunctionCall %mat4v4half %62 %60
         %63 = OpIAdd %uint %31 %36
         %64 = OpIAdd %uint %63 %40
         %65 = OpUDiv %uint %64 %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %65
         %69 = OpBitwiseAnd %uint %64 %uint_15
         %71 = OpShiftRightLogical %uint %69 %uint_2
         %73 = OpLoad %v4uint %67 None
         %74 = OpVectorShuffle %v2uint %73 %73 2 3
         %76 = OpVectorShuffle %v2uint %73 %73 0 1
         %77 = OpIEqual %bool %71 %uint_2
         %80 = OpCompositeConstruct %v2bool %77 %77
         %81 = OpSelect %v2uint %80 %74 %76
%l_a_i_a_i_m_i = OpBitcast %v4half %81
         %83 = OpFunctionCall %int %i
         %84 = OpBitcast %uint %83
         %85 = OpExtInst %uint %29 UMin %84 %uint_3
         %86 = OpIMul %uint %85 %uint_2
         %87 = OpIAdd %uint %31 %36
         %88 = OpIAdd %uint %87 %40
         %89 = OpIAdd %uint %88 %86
         %90 = OpUDiv %uint %89 %uint_16
         %91 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %90
         %92 = OpBitwiseAnd %uint %89 %uint_15
         %93 = OpShiftRightLogical %uint %92 %uint_2
         %94 = OpLoad %v4uint %91 None
         %95 = OpVectorExtractDynamic %uint %94 %93
         %96 = OpUMod %uint %89 %uint_4
         %97 = OpIEqual %bool %96 %uint_0
         %98 = OpSelect %uint %97 %uint_0 %uint_1
        %101 = OpBitcast %v2half %95
%l_a_i_a_i_m_i_i = OpVectorExtractDynamic %half %101 %98
               OpReturn
               OpFunctionEnd
         %51 = OpFunction %_arr_Outer_uint_4 None %104
%start_byte_offset = OpFunctionParameter %uint
        %105 = OpLabel
          %a = OpVariable %_ptr_Function__arr_Outer_uint_4 Function
               OpStore %a %108
               OpBranch %109
        %109 = OpLabel
               OpBranch %112
        %112 = OpLabel
        %114 = OpPhi %uint %uint_0 %109 %115 %111
               OpLoopMerge %113 %111 None
               OpBranch %110
        %110 = OpLabel
        %117 = OpUGreaterThanEqual %bool %114 %uint_4
               OpSelectionMerge %118 None
               OpBranchConditional %117 %119 %118
        %119 = OpLabel
               OpBranch %113
        %118 = OpLabel
        %120 = OpIMul %uint %114 %uint_256
        %121 = OpIAdd %uint %start_byte_offset %120
        %122 = OpAccessChain %_ptr_Function_Outer %a %114
        %124 = OpFunctionCall %Outer %54 %121
               OpStore %122 %124 None
               OpBranch %111
        %111 = OpLabel
        %115 = OpIAdd %uint %114 %uint_1
               OpBranch %112
        %113 = OpLabel
        %116 = OpLoad %_arr_Outer_uint_4 %a None
               OpReturnValue %116
               OpFunctionEnd
         %54 = OpFunction %Outer None %126
%start_byte_offset_0 = OpFunctionParameter %uint
        %127 = OpLabel
        %128 = OpFunctionCall %_arr_Inner_uint_4 %56 %start_byte_offset_0
        %129 = OpCompositeConstruct %Outer %128
               OpReturnValue %129
               OpFunctionEnd
         %56 = OpFunction %_arr_Inner_uint_4 None %131
%start_byte_offset_1 = OpFunctionParameter %uint
        %132 = OpLabel
        %a_0 = OpVariable %_ptr_Function__arr_Inner_uint_4 Function
               OpStore %a_0 %135
               OpBranch %136
        %136 = OpLabel
               OpBranch %139
        %139 = OpLabel
        %141 = OpPhi %uint %uint_0 %136 %142 %138
               OpLoopMerge %140 %138 None
               OpBranch %137
        %137 = OpLabel
        %144 = OpUGreaterThanEqual %bool %141 %uint_4
               OpSelectionMerge %145 None
               OpBranchConditional %144 %146 %145
        %146 = OpLabel
               OpBranch %140
        %145 = OpLabel
        %147 = OpIMul %uint %141 %uint_64
        %148 = OpIAdd %uint %start_byte_offset_1 %147
        %149 = OpAccessChain %_ptr_Function_Inner %a_0 %141
        %151 = OpFunctionCall %Inner %59 %148
               OpStore %149 %151 None
               OpBranch %138
        %138 = OpLabel
        %142 = OpIAdd %uint %141 %uint_1
               OpBranch %139
        %140 = OpLabel
        %143 = OpLoad %_arr_Inner_uint_4 %a_0 None
               OpReturnValue %143
               OpFunctionEnd
         %59 = OpFunction %Inner None %153
%start_byte_offset_2 = OpFunctionParameter %uint
        %154 = OpLabel
        %155 = OpFunctionCall %mat4v4half %62 %start_byte_offset_2
        %156 = OpCompositeConstruct %Inner %155
               OpReturnValue %156
               OpFunctionEnd
         %62 = OpFunction %mat4v4half None %158
%start_byte_offset_3 = OpFunctionParameter %uint
        %159 = OpLabel
        %160 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %161 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %160
        %162 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %163 = OpShiftRightLogical %uint %162 %uint_2
        %164 = OpLoad %v4uint %161 None
        %165 = OpVectorShuffle %v2uint %164 %164 2 3
        %166 = OpVectorShuffle %v2uint %164 %164 0 1
        %167 = OpIEqual %bool %163 %uint_2
        %168 = OpCompositeConstruct %v2bool %167 %167
        %169 = OpSelect %v2uint %168 %165 %166
        %170 = OpBitcast %v4half %169
        %171 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %172 = OpUDiv %uint %171 %uint_16
        %173 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %172
        %174 = OpBitwiseAnd %uint %171 %uint_15
        %175 = OpShiftRightLogical %uint %174 %uint_2
        %176 = OpLoad %v4uint %173 None
        %177 = OpVectorShuffle %v2uint %176 %176 2 3
        %178 = OpVectorShuffle %v2uint %176 %176 0 1
        %179 = OpIEqual %bool %175 %uint_2
        %180 = OpCompositeConstruct %v2bool %179 %179
        %181 = OpSelect %v2uint %180 %177 %178
        %182 = OpBitcast %v4half %181
        %183 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %184 = OpUDiv %uint %183 %uint_16
        %185 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %184
        %186 = OpBitwiseAnd %uint %183 %uint_15
        %187 = OpShiftRightLogical %uint %186 %uint_2
        %188 = OpLoad %v4uint %185 None
        %189 = OpVectorShuffle %v2uint %188 %188 2 3
        %190 = OpVectorShuffle %v2uint %188 %188 0 1
        %191 = OpIEqual %bool %187 %uint_2
        %192 = OpCompositeConstruct %v2bool %191 %191
        %193 = OpSelect %v2uint %192 %189 %190
        %194 = OpBitcast %v4half %193
        %195 = OpIAdd %uint %uint_24 %start_byte_offset_3
        %197 = OpUDiv %uint %195 %uint_16
        %198 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %197
        %199 = OpBitwiseAnd %uint %195 %uint_15
        %200 = OpShiftRightLogical %uint %199 %uint_2
        %201 = OpLoad %v4uint %198 None
        %202 = OpVectorShuffle %v2uint %201 %201 2 3
        %203 = OpVectorShuffle %v2uint %201 %201 0 1
        %204 = OpIEqual %bool %200 %uint_2
        %205 = OpCompositeConstruct %v2bool %204 %204
        %206 = OpSelect %v2uint %205 %202 %203
        %207 = OpBitcast %v4half %206
        %208 = OpCompositeConstruct %mat4v4half %170 %182 %194 %207
               OpReturnValue %208
               OpFunctionEnd
