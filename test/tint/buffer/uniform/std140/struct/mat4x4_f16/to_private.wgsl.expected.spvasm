; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 147
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat4v4half = OpTypeMatrix %v4half 4
          %S = OpTypeStruct %int %mat4v4half %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Private__arr_S_uint_4 = OpTypePointer Private %_arr_S_uint_4
         %17 = OpConstantNull %_arr_S_uint_4
          %p = OpVariable %_ptr_Private__arr_S_uint_4 Private %17
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_S = OpTypePointer Private %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Private_mat4v4half = OpTypePointer Private %mat4v4half
     %uint_3 = OpConstant %uint 3
   %uint_264 = OpConstant %uint 264
%_ptr_Private_v4half = OpTypePointer Private %v4half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
         %47 = OpTypeFunction %mat4v4half %uint
    %uint_16 = OpConstant %uint 16
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
    %uint_24 = OpConstant %uint 24
        %104 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %126 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
          %f = OpFunction %void None %20
         %21 = OpLabel
         %22 = OpFunctionCall %_arr_S_uint_4 %23 %uint_0
               OpStore %p %22 None
         %25 = OpAccessChain %_ptr_Private_S %p %uint_1
         %28 = OpFunctionCall %S %29 %uint_256
               OpStore %25 %28 None
         %31 = OpAccessChain %_ptr_Private_mat4v4half %p %uint_3 %uint_1
         %34 = OpFunctionCall %mat4v4half %35 %uint_264
               OpStore %31 %34 None
         %37 = OpAccessChain %_ptr_Private_v4half %p %uint_1 %uint_1 %uint_0
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %41 = OpLoad %v4uint %39 None
         %42 = OpVectorShuffle %v2uint %41 %41 0 1
         %44 = OpBitcast %v4half %42
         %45 = OpVectorShuffle %v4half %44 %44 1 3 0 2
               OpStore %37 %45 None
               OpReturn
               OpFunctionEnd
         %35 = OpFunction %mat4v4half None %47
%start_byte_offset = OpFunctionParameter %uint
         %48 = OpLabel
         %49 = OpUDiv %uint %start_byte_offset %uint_16
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %49
         %52 = OpUMod %uint %start_byte_offset %uint_16
         %53 = OpUDiv %uint %52 %uint_4
         %54 = OpLoad %v4uint %51 None
         %55 = OpVectorShuffle %v2uint %54 %54 2 3
         %56 = OpVectorShuffle %v2uint %54 %54 0 1
         %57 = OpIEqual %bool %53 %uint_2
         %61 = OpCompositeConstruct %v2bool %57 %57
         %62 = OpSelect %v2uint %61 %55 %56
         %63 = OpBitcast %v4half %62
         %64 = OpIAdd %uint %uint_8 %start_byte_offset
         %66 = OpUDiv %uint %64 %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %68 = OpUMod %uint %64 %uint_16
         %69 = OpUDiv %uint %68 %uint_4
         %70 = OpLoad %v4uint %67 None
         %71 = OpVectorShuffle %v2uint %70 %70 2 3
         %72 = OpVectorShuffle %v2uint %70 %70 0 1
         %73 = OpIEqual %bool %69 %uint_2
         %74 = OpCompositeConstruct %v2bool %73 %73
         %75 = OpSelect %v2uint %74 %71 %72
         %76 = OpBitcast %v4half %75
         %77 = OpIAdd %uint %uint_16 %start_byte_offset
         %78 = OpUDiv %uint %77 %uint_16
         %79 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %78
         %80 = OpUMod %uint %77 %uint_16
         %81 = OpUDiv %uint %80 %uint_4
         %82 = OpLoad %v4uint %79 None
         %83 = OpVectorShuffle %v2uint %82 %82 2 3
         %84 = OpVectorShuffle %v2uint %82 %82 0 1
         %85 = OpIEqual %bool %81 %uint_2
         %86 = OpCompositeConstruct %v2bool %85 %85
         %87 = OpSelect %v2uint %86 %83 %84
         %88 = OpBitcast %v4half %87
         %89 = OpIAdd %uint %uint_24 %start_byte_offset
         %91 = OpUDiv %uint %89 %uint_16
         %92 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %91
         %93 = OpUMod %uint %89 %uint_16
         %94 = OpUDiv %uint %93 %uint_4
         %95 = OpLoad %v4uint %92 None
         %96 = OpVectorShuffle %v2uint %95 %95 2 3
         %97 = OpVectorShuffle %v2uint %95 %95 0 1
         %98 = OpIEqual %bool %94 %uint_2
         %99 = OpCompositeConstruct %v2bool %98 %98
        %100 = OpSelect %v2uint %99 %96 %97
        %101 = OpBitcast %v4half %100
        %102 = OpCompositeConstruct %mat4v4half %63 %76 %88 %101
               OpReturnValue %102
               OpFunctionEnd
         %29 = OpFunction %S None %104
%start_byte_offset_0 = OpFunctionParameter %uint
        %105 = OpLabel
        %106 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %107 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %106
        %108 = OpUMod %uint %start_byte_offset_0 %uint_16
        %109 = OpUDiv %uint %108 %uint_4
        %110 = OpLoad %v4uint %107 None
        %111 = OpVectorExtractDynamic %uint %110 %109
        %112 = OpBitcast %int %111
        %113 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %114 = OpFunctionCall %mat4v4half %35 %113
        %115 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %117 = OpUDiv %uint %115 %uint_16
        %118 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %117
        %119 = OpUMod %uint %115 %uint_16
        %120 = OpUDiv %uint %119 %uint_4
        %121 = OpLoad %v4uint %118 None
        %122 = OpVectorExtractDynamic %uint %121 %120
        %123 = OpBitcast %int %122
        %124 = OpCompositeConstruct %S %112 %114 %123
               OpReturnValue %124
               OpFunctionEnd
         %23 = OpFunction %_arr_S_uint_4 None %126
%start_byte_offset_1 = OpFunctionParameter %uint
        %127 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %17
               OpBranch %130
        %130 = OpLabel
               OpBranch %133
        %133 = OpLabel
        %135 = OpPhi %uint %uint_0 %130 %136 %132
               OpLoopMerge %134 %132 None
               OpBranch %131
        %131 = OpLabel
        %138 = OpUGreaterThanEqual %bool %135 %uint_4
               OpSelectionMerge %139 None
               OpBranchConditional %138 %140 %139
        %140 = OpLabel
               OpBranch %134
        %139 = OpLabel
        %141 = OpIMul %uint %135 %uint_128
        %143 = OpIAdd %uint %start_byte_offset_1 %141
        %144 = OpAccessChain %_ptr_Function_S %a %135
        %146 = OpFunctionCall %S %29 %143
               OpStore %144 %146 None
               OpBranch %132
        %132 = OpLabel
        %136 = OpIAdd %uint %135 %uint_1
               OpBranch %133
        %134 = OpLabel
        %137 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %137
               OpFunctionEnd
