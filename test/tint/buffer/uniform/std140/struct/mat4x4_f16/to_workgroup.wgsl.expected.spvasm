; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 168
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat4v4half = OpTypeMatrix %v4half 4
          %S = OpTypeStruct %int %mat4v4half %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Workgroup__arr_S_uint_4 = OpTypePointer Workgroup %_arr_S_uint_4
          %w = OpVariable %_ptr_Workgroup__arr_S_uint_4 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %22 = OpTypeFunction %void %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_S = OpTypePointer Workgroup %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Workgroup_mat4v4half = OpTypePointer Workgroup %mat4v4half
     %uint_3 = OpConstant %uint 3
%_ptr_Workgroup_v4half = OpTypePointer Workgroup %v4half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
         %62 = OpConstantNull %S
         %64 = OpTypeFunction %mat4v4half %uint
    %uint_16 = OpConstant %uint 16
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
    %uint_24 = OpConstant %uint 24
        %119 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %141 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
        %145 = OpConstantNull %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
        %164 = OpTypeFunction %void
    %f_inner = OpFunction %void None %22
%tint_local_index = OpFunctionParameter %uint
         %23 = OpLabel
               OpBranch %24
         %24 = OpLabel
               OpBranch %27
         %27 = OpLabel
         %29 = OpPhi %uint %tint_local_index %24 %30 %26
               OpLoopMerge %28 %26 None
               OpBranch %25
         %25 = OpLabel
         %57 = OpUGreaterThanEqual %bool %29 %uint_4
               OpSelectionMerge %59 None
               OpBranchConditional %57 %60 %59
         %60 = OpLabel
               OpBranch %28
         %59 = OpLabel
         %61 = OpAccessChain %_ptr_Workgroup_S %w %29
               OpStore %61 %62 None
               OpBranch %26
         %26 = OpLabel
         %30 = OpIAdd %uint %29 %uint_1
               OpBranch %27
         %28 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %34 = OpFunctionCall %_arr_S_uint_4 %35 %uint_0
               OpStore %w %34 None
         %37 = OpAccessChain %_ptr_Workgroup_S %w %uint_1
         %40 = OpFunctionCall %S %41 %uint_256
               OpStore %37 %40 None
         %43 = OpAccessChain %_ptr_Workgroup_mat4v4half %w %uint_3 %uint_1
         %46 = OpFunctionCall %mat4v4half %47 %uint_264
               OpStore %43 %46 None
         %48 = OpAccessChain %_ptr_Workgroup_v4half %w %uint_1 %uint_1 %uint_0
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %52 = OpLoad %v4uint %50 None
         %53 = OpVectorShuffle %v2uint %52 %52 0 1
         %55 = OpBitcast %v4half %53
         %56 = OpVectorShuffle %v4half %55 %55 1 3 0 2
               OpStore %48 %56 None
               OpReturn
               OpFunctionEnd
         %47 = OpFunction %mat4v4half None %64
%start_byte_offset = OpFunctionParameter %uint
         %65 = OpLabel
         %66 = OpUDiv %uint %start_byte_offset %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %69 = OpUMod %uint %start_byte_offset %uint_16
         %70 = OpUDiv %uint %69 %uint_4
         %71 = OpLoad %v4uint %68 None
         %72 = OpVectorShuffle %v2uint %71 %71 2 3
         %73 = OpVectorShuffle %v2uint %71 %71 0 1
         %74 = OpIEqual %bool %70 %uint_2
         %76 = OpCompositeConstruct %v2bool %74 %74
         %77 = OpSelect %v2uint %76 %72 %73
         %78 = OpBitcast %v4half %77
         %79 = OpIAdd %uint %uint_8 %start_byte_offset
         %81 = OpUDiv %uint %79 %uint_16
         %82 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %81
         %83 = OpUMod %uint %79 %uint_16
         %84 = OpUDiv %uint %83 %uint_4
         %85 = OpLoad %v4uint %82 None
         %86 = OpVectorShuffle %v2uint %85 %85 2 3
         %87 = OpVectorShuffle %v2uint %85 %85 0 1
         %88 = OpIEqual %bool %84 %uint_2
         %89 = OpCompositeConstruct %v2bool %88 %88
         %90 = OpSelect %v2uint %89 %86 %87
         %91 = OpBitcast %v4half %90
         %92 = OpIAdd %uint %uint_16 %start_byte_offset
         %93 = OpUDiv %uint %92 %uint_16
         %94 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %93
         %95 = OpUMod %uint %92 %uint_16
         %96 = OpUDiv %uint %95 %uint_4
         %97 = OpLoad %v4uint %94 None
         %98 = OpVectorShuffle %v2uint %97 %97 2 3
         %99 = OpVectorShuffle %v2uint %97 %97 0 1
        %100 = OpIEqual %bool %96 %uint_2
        %101 = OpCompositeConstruct %v2bool %100 %100
        %102 = OpSelect %v2uint %101 %98 %99
        %103 = OpBitcast %v4half %102
        %104 = OpIAdd %uint %uint_24 %start_byte_offset
        %106 = OpUDiv %uint %104 %uint_16
        %107 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %106
        %108 = OpUMod %uint %104 %uint_16
        %109 = OpUDiv %uint %108 %uint_4
        %110 = OpLoad %v4uint %107 None
        %111 = OpVectorShuffle %v2uint %110 %110 2 3
        %112 = OpVectorShuffle %v2uint %110 %110 0 1
        %113 = OpIEqual %bool %109 %uint_2
        %114 = OpCompositeConstruct %v2bool %113 %113
        %115 = OpSelect %v2uint %114 %111 %112
        %116 = OpBitcast %v4half %115
        %117 = OpCompositeConstruct %mat4v4half %78 %91 %103 %116
               OpReturnValue %117
               OpFunctionEnd
         %41 = OpFunction %S None %119
%start_byte_offset_0 = OpFunctionParameter %uint
        %120 = OpLabel
        %121 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %122 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %121
        %123 = OpUMod %uint %start_byte_offset_0 %uint_16
        %124 = OpUDiv %uint %123 %uint_4
        %125 = OpLoad %v4uint %122 None
        %126 = OpVectorExtractDynamic %uint %125 %124
        %127 = OpBitcast %int %126
        %128 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %129 = OpFunctionCall %mat4v4half %47 %128
        %130 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %132 = OpUDiv %uint %130 %uint_16
        %133 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %132
        %134 = OpUMod %uint %130 %uint_16
        %135 = OpUDiv %uint %134 %uint_4
        %136 = OpLoad %v4uint %133 None
        %137 = OpVectorExtractDynamic %uint %136 %135
        %138 = OpBitcast %int %137
        %139 = OpCompositeConstruct %S %127 %129 %138
               OpReturnValue %139
               OpFunctionEnd
         %35 = OpFunction %_arr_S_uint_4 None %141
%start_byte_offset_1 = OpFunctionParameter %uint
        %142 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %145
               OpBranch %146
        %146 = OpLabel
               OpBranch %149
        %149 = OpLabel
        %151 = OpPhi %uint %uint_0 %146 %152 %148
               OpLoopMerge %150 %148 None
               OpBranch %147
        %147 = OpLabel
        %154 = OpUGreaterThanEqual %bool %151 %uint_4
               OpSelectionMerge %155 None
               OpBranchConditional %154 %156 %155
        %156 = OpLabel
               OpBranch %150
        %155 = OpLabel
        %157 = OpIMul %uint %151 %uint_128
        %159 = OpIAdd %uint %start_byte_offset_1 %157
        %160 = OpAccessChain %_ptr_Function_S %a %151
        %162 = OpFunctionCall %S %41 %159
               OpStore %160 %162 None
               OpBranch %148
        %148 = OpLabel
        %152 = OpIAdd %uint %151 %uint_1
               OpBranch %149
        %150 = OpLabel
        %153 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %153
               OpFunctionEnd
          %f = OpFunction %void None %164
        %165 = OpLabel
        %166 = OpLoad %uint %f_local_invocation_index_Input None
        %167 = OpFunctionCall %void %f_inner %166
               OpReturn
               OpFunctionEnd
