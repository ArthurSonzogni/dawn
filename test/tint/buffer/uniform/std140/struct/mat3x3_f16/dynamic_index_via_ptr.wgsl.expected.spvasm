; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 200
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %29 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpMemberName %Inner 0 "m"
               OpName %Inner "Inner"
               OpMemberName %Outer 0 "a"
               OpName %Outer "Outer"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_a "l_a_i_a"
               OpName %l_a_i_a_i "l_a_i_a_i"
               OpName %l_a_i_a_i_m "l_a_i_a_i_m"
               OpName %l_a_i_a_i_m_i "l_a_i_a_i_m_i"
               OpName %l_a_i_a_i_m_i_i "l_a_i_a_i_m_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_0 "a"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_64 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_64 = OpConstant %uint 64
%_arr_v4uint_uint_64 = OpTypeArray %v4uint %uint_64
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_64
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %13 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %24 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
   %uint_256 = OpConstant %uint 256
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat3v3half = OpTypeMatrix %v3half 3
      %Inner = OpTypeStruct %mat3v3half
     %uint_4 = OpConstant %uint 4
%_arr_Inner_uint_4 = OpTypeArray %Inner %uint_4
      %Outer = OpTypeStruct %_arr_Inner_uint_4
%_arr_Outer_uint_4 = OpTypeArray %Outer %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %v4half = OpTypeVector %half 4
     %uint_1 = OpConstant %uint 1
     %v2half = OpTypeVector %half 2
        %105 = OpTypeFunction %_arr_Outer_uint_4 %uint
%_ptr_Function__arr_Outer_uint_4 = OpTypePointer Function %_arr_Outer_uint_4
        %109 = OpConstantNull %_arr_Outer_uint_4
%_ptr_Function_Outer = OpTypePointer Function %Outer
        %127 = OpTypeFunction %Outer %uint
        %132 = OpTypeFunction %_arr_Inner_uint_4 %uint
%_ptr_Function__arr_Inner_uint_4 = OpTypePointer Function %_arr_Inner_uint_4
        %136 = OpConstantNull %_arr_Inner_uint_4
%_ptr_Function_Inner = OpTypePointer Function %Inner
        %154 = OpTypeFunction %Inner %uint
        %159 = OpTypeFunction %mat3v3half %uint
          %i = OpFunction %int None %13
         %14 = OpLabel
         %15 = OpLoad %int %counter None
         %16 = OpBitcast %uint %15
         %17 = OpBitcast %uint %int_1
         %19 = OpIAdd %uint %16 %17
         %20 = OpBitcast %int %19
               OpStore %counter %20 None
         %21 = OpLoad %int %counter None
               OpReturnValue %21
               OpFunctionEnd
          %f = OpFunction %void None %24
         %25 = OpLabel
         %26 = OpFunctionCall %int %i
         %27 = OpBitcast %uint %26
         %28 = OpExtInst %uint %29 UMin %27 %uint_3
         %31 = OpIMul %uint %uint_256 %28
         %33 = OpFunctionCall %int %i
         %34 = OpBitcast %uint %33
         %35 = OpExtInst %uint %29 UMin %34 %uint_3
         %36 = OpIMul %uint %uint_64 %35
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %29 UMin %38 %uint_2
         %41 = OpIMul %uint %uint_8 %39
        %l_a = OpFunctionCall %_arr_Outer_uint_4 %52 %uint_0
      %l_a_i = OpFunctionCall %Outer %55 %31
    %l_a_i_a = OpFunctionCall %_arr_Inner_uint_4 %57 %31
         %58 = OpIAdd %uint %31 %36
  %l_a_i_a_i = OpFunctionCall %Inner %60 %58
         %61 = OpIAdd %uint %31 %36
%l_a_i_a_i_m = OpFunctionCall %mat3v3half %63 %61
         %64 = OpIAdd %uint %31 %36
         %65 = OpIAdd %uint %64 %41
         %66 = OpUDiv %uint %65 %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %70 = OpUMod %uint %65 %uint_16
         %71 = OpUDiv %uint %70 %uint_4
         %72 = OpLoad %v4uint %68 None
         %73 = OpVectorShuffle %v2uint %72 %72 2 3
         %75 = OpVectorShuffle %v2uint %72 %72 0 1
         %76 = OpIEqual %bool %71 %uint_2
         %79 = OpCompositeConstruct %v2bool %76 %76
         %80 = OpSelect %v2uint %79 %73 %75
         %82 = OpBitcast %v4half %80
%l_a_i_a_i_m_i = OpVectorShuffle %v3half %82 %82 0 1 2
         %84 = OpFunctionCall %int %i
         %85 = OpBitcast %uint %84
         %86 = OpExtInst %uint %29 UMin %85 %uint_2
         %87 = OpIMul %uint %86 %uint_2
         %88 = OpIAdd %uint %31 %36
         %89 = OpIAdd %uint %88 %41
         %90 = OpIAdd %uint %89 %87
         %91 = OpUDiv %uint %90 %uint_16
         %92 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %91
         %93 = OpUMod %uint %90 %uint_16
         %94 = OpUDiv %uint %93 %uint_4
         %95 = OpLoad %v4uint %92 None
         %96 = OpVectorExtractDynamic %uint %95 %94
         %97 = OpUMod %uint %90 %uint_4
         %98 = OpIEqual %bool %97 %uint_0
         %99 = OpSelect %uint %98 %uint_0 %uint_1
        %102 = OpBitcast %v2half %96
%l_a_i_a_i_m_i_i = OpVectorExtractDynamic %half %102 %99
               OpReturn
               OpFunctionEnd
         %52 = OpFunction %_arr_Outer_uint_4 None %105
%start_byte_offset = OpFunctionParameter %uint
        %106 = OpLabel
          %a = OpVariable %_ptr_Function__arr_Outer_uint_4 Function
               OpStore %a %109
               OpBranch %110
        %110 = OpLabel
               OpBranch %113
        %113 = OpLabel
        %115 = OpPhi %uint %uint_0 %110 %116 %112
               OpLoopMerge %114 %112 None
               OpBranch %111
        %111 = OpLabel
        %118 = OpUGreaterThanEqual %bool %115 %uint_4
               OpSelectionMerge %119 None
               OpBranchConditional %118 %120 %119
        %120 = OpLabel
               OpBranch %114
        %119 = OpLabel
        %121 = OpIMul %uint %115 %uint_256
        %122 = OpIAdd %uint %start_byte_offset %121
        %123 = OpAccessChain %_ptr_Function_Outer %a %115
        %125 = OpFunctionCall %Outer %55 %122
               OpStore %123 %125 None
               OpBranch %112
        %112 = OpLabel
        %116 = OpIAdd %uint %115 %uint_1
               OpBranch %113
        %114 = OpLabel
        %117 = OpLoad %_arr_Outer_uint_4 %a None
               OpReturnValue %117
               OpFunctionEnd
         %55 = OpFunction %Outer None %127
%start_byte_offset_0 = OpFunctionParameter %uint
        %128 = OpLabel
        %129 = OpFunctionCall %_arr_Inner_uint_4 %57 %start_byte_offset_0
        %130 = OpCompositeConstruct %Outer %129
               OpReturnValue %130
               OpFunctionEnd
         %57 = OpFunction %_arr_Inner_uint_4 None %132
%start_byte_offset_1 = OpFunctionParameter %uint
        %133 = OpLabel
        %a_0 = OpVariable %_ptr_Function__arr_Inner_uint_4 Function
               OpStore %a_0 %136
               OpBranch %137
        %137 = OpLabel
               OpBranch %140
        %140 = OpLabel
        %142 = OpPhi %uint %uint_0 %137 %143 %139
               OpLoopMerge %141 %139 None
               OpBranch %138
        %138 = OpLabel
        %145 = OpUGreaterThanEqual %bool %142 %uint_4
               OpSelectionMerge %146 None
               OpBranchConditional %145 %147 %146
        %147 = OpLabel
               OpBranch %141
        %146 = OpLabel
        %148 = OpIMul %uint %142 %uint_64
        %149 = OpIAdd %uint %start_byte_offset_1 %148
        %150 = OpAccessChain %_ptr_Function_Inner %a_0 %142
        %152 = OpFunctionCall %Inner %60 %149
               OpStore %150 %152 None
               OpBranch %139
        %139 = OpLabel
        %143 = OpIAdd %uint %142 %uint_1
               OpBranch %140
        %141 = OpLabel
        %144 = OpLoad %_arr_Inner_uint_4 %a_0 None
               OpReturnValue %144
               OpFunctionEnd
         %60 = OpFunction %Inner None %154
%start_byte_offset_2 = OpFunctionParameter %uint
        %155 = OpLabel
        %156 = OpFunctionCall %mat3v3half %63 %start_byte_offset_2
        %157 = OpCompositeConstruct %Inner %156
               OpReturnValue %157
               OpFunctionEnd
         %63 = OpFunction %mat3v3half None %159
%start_byte_offset_3 = OpFunctionParameter %uint
        %160 = OpLabel
        %161 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %162 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %161
        %163 = OpUMod %uint %start_byte_offset_3 %uint_16
        %164 = OpUDiv %uint %163 %uint_4
        %165 = OpLoad %v4uint %162 None
        %166 = OpVectorShuffle %v2uint %165 %165 2 3
        %167 = OpVectorShuffle %v2uint %165 %165 0 1
        %168 = OpIEqual %bool %164 %uint_2
        %169 = OpCompositeConstruct %v2bool %168 %168
        %170 = OpSelect %v2uint %169 %166 %167
        %171 = OpBitcast %v4half %170
        %172 = OpVectorShuffle %v3half %171 %171 0 1 2
        %173 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %174 = OpUDiv %uint %173 %uint_16
        %175 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %174
        %176 = OpUMod %uint %173 %uint_16
        %177 = OpUDiv %uint %176 %uint_4
        %178 = OpLoad %v4uint %175 None
        %179 = OpVectorShuffle %v2uint %178 %178 2 3
        %180 = OpVectorShuffle %v2uint %178 %178 0 1
        %181 = OpIEqual %bool %177 %uint_2
        %182 = OpCompositeConstruct %v2bool %181 %181
        %183 = OpSelect %v2uint %182 %179 %180
        %184 = OpBitcast %v4half %183
        %185 = OpVectorShuffle %v3half %184 %184 0 1 2
        %186 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %187 = OpUDiv %uint %186 %uint_16
        %188 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %187
        %189 = OpUMod %uint %186 %uint_16
        %190 = OpUDiv %uint %189 %uint_4
        %191 = OpLoad %v4uint %188 None
        %192 = OpVectorShuffle %v2uint %191 %191 2 3
        %193 = OpVectorShuffle %v2uint %191 %191 0 1
        %194 = OpIEqual %bool %190 %uint_2
        %195 = OpCompositeConstruct %v2bool %194 %194
        %196 = OpSelect %v2uint %195 %192 %193
        %197 = OpBitcast %v4half %196
        %198 = OpVectorShuffle %v3half %197 %197 0 1 2
        %199 = OpCompositeConstruct %mat3v3half %172 %185 %198
               OpReturnValue %199
               OpFunctionEnd
