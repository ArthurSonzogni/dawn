; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 140
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat3v3half = OpTypeMatrix %v3half 3
          %S = OpTypeStruct %int %mat3v3half %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Private__arr_S_uint_4 = OpTypePointer Private %_arr_S_uint_4
         %17 = OpConstantNull %_arr_S_uint_4
          %p = OpVariable %_ptr_Private__arr_S_uint_4 Private %17
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_S = OpTypePointer Private %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Private_mat3v3half = OpTypePointer Private %mat3v3half
     %uint_3 = OpConstant %uint 3
   %uint_264 = OpConstant %uint 264
%_ptr_Private_v3half = OpTypePointer Private %v3half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
         %49 = OpTypeFunction %mat3v3half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
         %97 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %119 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
          %f = OpFunction %void None %20
         %21 = OpLabel
         %22 = OpFunctionCall %_arr_S_uint_4 %23 %uint_0
               OpStore %p %22 None
         %25 = OpAccessChain %_ptr_Private_S %p %uint_1
         %28 = OpFunctionCall %S %29 %uint_256
               OpStore %25 %28 None
         %31 = OpAccessChain %_ptr_Private_mat3v3half %p %uint_3 %uint_1
         %34 = OpFunctionCall %mat3v3half %35 %uint_264
               OpStore %31 %34 None
         %37 = OpAccessChain %_ptr_Private_v3half %p %uint_1 %uint_1 %uint_0
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %41 = OpLoad %v4uint %39 None
         %42 = OpVectorShuffle %v2uint %41 %41 0 1
         %45 = OpBitcast %v4half %42
         %46 = OpVectorShuffle %v3half %45 %45 0 1 2
         %47 = OpVectorShuffle %v3half %46 %46 2 0 1
               OpStore %37 %47 None
               OpReturn
               OpFunctionEnd
         %35 = OpFunction %mat3v3half None %49
%start_byte_offset = OpFunctionParameter %uint
         %50 = OpLabel
         %51 = OpUDiv %uint %start_byte_offset %uint_16
         %53 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %51
         %54 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %56 = OpShiftRightLogical %uint %54 %uint_2
         %58 = OpLoad %v4uint %53 None
         %59 = OpVectorShuffle %v2uint %58 %58 2 3
         %60 = OpVectorShuffle %v2uint %58 %58 0 1
         %61 = OpIEqual %bool %56 %uint_2
         %64 = OpCompositeConstruct %v2bool %61 %61
         %65 = OpSelect %v2uint %64 %59 %60
         %66 = OpBitcast %v4half %65
         %67 = OpVectorShuffle %v3half %66 %66 0 1 2
         %68 = OpIAdd %uint %uint_8 %start_byte_offset
         %70 = OpUDiv %uint %68 %uint_16
         %71 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %70
         %72 = OpBitwiseAnd %uint %68 %uint_15
         %73 = OpShiftRightLogical %uint %72 %uint_2
         %74 = OpLoad %v4uint %71 None
         %75 = OpVectorShuffle %v2uint %74 %74 2 3
         %76 = OpVectorShuffle %v2uint %74 %74 0 1
         %77 = OpIEqual %bool %73 %uint_2
         %78 = OpCompositeConstruct %v2bool %77 %77
         %79 = OpSelect %v2uint %78 %75 %76
         %80 = OpBitcast %v4half %79
         %81 = OpVectorShuffle %v3half %80 %80 0 1 2
         %82 = OpIAdd %uint %uint_16 %start_byte_offset
         %83 = OpUDiv %uint %82 %uint_16
         %84 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %83
         %85 = OpBitwiseAnd %uint %82 %uint_15
         %86 = OpShiftRightLogical %uint %85 %uint_2
         %87 = OpLoad %v4uint %84 None
         %88 = OpVectorShuffle %v2uint %87 %87 2 3
         %89 = OpVectorShuffle %v2uint %87 %87 0 1
         %90 = OpIEqual %bool %86 %uint_2
         %91 = OpCompositeConstruct %v2bool %90 %90
         %92 = OpSelect %v2uint %91 %88 %89
         %93 = OpBitcast %v4half %92
         %94 = OpVectorShuffle %v3half %93 %93 0 1 2
         %95 = OpCompositeConstruct %mat3v3half %67 %81 %94
               OpReturnValue %95
               OpFunctionEnd
         %29 = OpFunction %S None %97
%start_byte_offset_0 = OpFunctionParameter %uint
         %98 = OpLabel
         %99 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %100 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %99
        %101 = OpBitwiseAnd %uint %start_byte_offset_0 %uint_15
        %102 = OpShiftRightLogical %uint %101 %uint_2
        %103 = OpLoad %v4uint %100 None
        %104 = OpVectorExtractDynamic %uint %103 %102
        %105 = OpBitcast %int %104
        %106 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %107 = OpFunctionCall %mat3v3half %35 %106
        %108 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %110 = OpUDiv %uint %108 %uint_16
        %111 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %110
        %112 = OpBitwiseAnd %uint %108 %uint_15
        %113 = OpShiftRightLogical %uint %112 %uint_2
        %114 = OpLoad %v4uint %111 None
        %115 = OpVectorExtractDynamic %uint %114 %113
        %116 = OpBitcast %int %115
        %117 = OpCompositeConstruct %S %105 %107 %116
               OpReturnValue %117
               OpFunctionEnd
         %23 = OpFunction %_arr_S_uint_4 None %119
%start_byte_offset_1 = OpFunctionParameter %uint
        %120 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %17
               OpBranch %123
        %123 = OpLabel
               OpBranch %126
        %126 = OpLabel
        %128 = OpPhi %uint %uint_0 %123 %129 %125
               OpLoopMerge %127 %125 None
               OpBranch %124
        %124 = OpLabel
        %131 = OpUGreaterThanEqual %bool %128 %uint_4
               OpSelectionMerge %132 None
               OpBranchConditional %131 %133 %132
        %133 = OpLabel
               OpBranch %127
        %132 = OpLabel
        %134 = OpIMul %uint %128 %uint_128
        %136 = OpIAdd %uint %start_byte_offset_1 %134
        %137 = OpAccessChain %_ptr_Function_S %a %128
        %139 = OpFunctionCall %S %29 %136
               OpStore %137 %139 None
               OpBranch %125
        %125 = OpLabel
        %129 = OpIAdd %uint %128 %uint_1
               OpBranch %126
        %127 = OpLabel
        %130 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %130
               OpFunctionEnd
