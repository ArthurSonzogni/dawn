; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 88
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %31 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %f "f"
               OpName %t "t"
               OpName %l "l"
               OpName %a "a"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
         %10 = OpTypeFunction %void
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat3v3half = OpTypeMatrix %v3half 3
   %uint_264 = OpConstant %uint 264
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
         %41 = OpTypeFunction %mat3v3half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %f = OpFunction %void None %10
         %11 = OpLabel
         %12 = OpFunctionCall %mat3v3half %16 %uint_264
          %t = OpTranspose %mat3v3half %12
         %19 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %23 = OpLoad %v4uint %19 None
         %24 = OpVectorShuffle %v2uint %23 %23 0 1
         %27 = OpBitcast %v4half %24
         %28 = OpVectorShuffle %v3half %27 %27 0 1 2
         %29 = OpVectorShuffle %v3half %28 %28 2 0 1
          %l = OpExtInst %half %31 Length %29
         %32 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %33 = OpLoad %v4uint %32 None
         %34 = OpVectorShuffle %v2uint %33 %33 0 1
         %35 = OpBitcast %v4half %34
         %36 = OpVectorShuffle %v3half %35 %35 0 1 2
         %37 = OpVectorShuffle %v3half %36 %36 2 0 1
         %38 = OpCompositeExtract %half %37 0
          %a = OpExtInst %half %31 FAbs %38
               OpReturn
               OpFunctionEnd
         %16 = OpFunction %mat3v3half None %41
%start_byte_offset = OpFunctionParameter %uint
         %42 = OpLabel
         %43 = OpUDiv %uint %start_byte_offset %uint_16
         %45 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %43
         %46 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %48 = OpShiftRightLogical %uint %46 %uint_2
         %50 = OpLoad %v4uint %45 None
         %51 = OpVectorShuffle %v2uint %50 %50 2 3
         %52 = OpVectorShuffle %v2uint %50 %50 0 1
         %53 = OpIEqual %bool %48 %uint_2
         %56 = OpCompositeConstruct %v2bool %53 %53
         %57 = OpSelect %v2uint %56 %51 %52
         %58 = OpBitcast %v4half %57
         %59 = OpVectorShuffle %v3half %58 %58 0 1 2
         %60 = OpIAdd %uint %uint_8 %start_byte_offset
         %62 = OpUDiv %uint %60 %uint_16
         %63 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %62
         %64 = OpBitwiseAnd %uint %60 %uint_15
         %65 = OpShiftRightLogical %uint %64 %uint_2
         %66 = OpLoad %v4uint %63 None
         %67 = OpVectorShuffle %v2uint %66 %66 2 3
         %68 = OpVectorShuffle %v2uint %66 %66 0 1
         %69 = OpIEqual %bool %65 %uint_2
         %70 = OpCompositeConstruct %v2bool %69 %69
         %71 = OpSelect %v2uint %70 %67 %68
         %72 = OpBitcast %v4half %71
         %73 = OpVectorShuffle %v3half %72 %72 0 1 2
         %74 = OpIAdd %uint %uint_16 %start_byte_offset
         %75 = OpUDiv %uint %74 %uint_16
         %76 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %75
         %77 = OpBitwiseAnd %uint %74 %uint_15
         %78 = OpShiftRightLogical %uint %77 %uint_2
         %79 = OpLoad %v4uint %76 None
         %80 = OpVectorShuffle %v2uint %79 %79 2 3
         %81 = OpVectorShuffle %v2uint %79 %79 0 1
         %82 = OpIEqual %bool %78 %uint_2
         %83 = OpCompositeConstruct %v2bool %82 %82
         %84 = OpSelect %v2uint %83 %80 %81
         %85 = OpBitcast %v4half %84
         %86 = OpVectorShuffle %v3half %85 %85 0 1 2
         %87 = OpCompositeConstruct %mat3v3half %59 %73 %86
               OpReturnValue %87
               OpFunctionEnd
