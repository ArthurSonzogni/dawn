; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 215
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %29 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpMemberName %Inner 0 "m"
               OpName %Inner "Inner"
               OpMemberName %Outer 0 "a"
               OpName %Outer "Outer"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_a "l_a_i_a"
               OpName %l_a_i_a_i "l_a_i_a_i"
               OpName %l_a_i_a_i_m "l_a_i_a_i_m"
               OpName %l_a_i_a_i_m_i "l_a_i_a_i_m_i"
               OpName %l_a_i_a_i_m_i_i "l_a_i_a_i_m_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_0 "a"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_64 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_64 = OpConstant %uint 64
%_arr_v4uint_uint_64 = OpTypeArray %v4uint %uint_64
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_64
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %13 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %24 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
   %uint_256 = OpConstant %uint 256
     %uint_8 = OpConstant %uint 8
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat4v3half = OpTypeMatrix %v3half 4
      %Inner = OpTypeStruct %mat4v3half
     %uint_4 = OpConstant %uint 4
%_arr_Inner_uint_4 = OpTypeArray %Inner %uint_4
      %Outer = OpTypeStruct %_arr_Inner_uint_4
%_arr_Outer_uint_4 = OpTypeArray %Outer %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %v4half = OpTypeVector %half 4
     %uint_1 = OpConstant %uint 1
     %v2half = OpTypeVector %half 2
        %106 = OpTypeFunction %_arr_Outer_uint_4 %uint
%_ptr_Function__arr_Outer_uint_4 = OpTypePointer Function %_arr_Outer_uint_4
        %110 = OpConstantNull %_arr_Outer_uint_4
%_ptr_Function_Outer = OpTypePointer Function %Outer
        %128 = OpTypeFunction %Outer %uint
        %133 = OpTypeFunction %_arr_Inner_uint_4 %uint
%_ptr_Function__arr_Inner_uint_4 = OpTypePointer Function %_arr_Inner_uint_4
        %137 = OpConstantNull %_arr_Inner_uint_4
%_ptr_Function_Inner = OpTypePointer Function %Inner
        %155 = OpTypeFunction %Inner %uint
        %160 = OpTypeFunction %mat4v3half %uint
    %uint_24 = OpConstant %uint 24
          %i = OpFunction %int None %13
         %14 = OpLabel
         %15 = OpLoad %int %counter None
         %16 = OpBitcast %uint %15
         %17 = OpBitcast %uint %int_1
         %19 = OpIAdd %uint %16 %17
         %20 = OpBitcast %int %19
               OpStore %counter %20 None
         %21 = OpLoad %int %counter None
               OpReturnValue %21
               OpFunctionEnd
          %f = OpFunction %void None %24
         %25 = OpLabel
         %26 = OpFunctionCall %int %i
         %27 = OpBitcast %uint %26
         %28 = OpExtInst %uint %29 UMin %27 %uint_3
         %31 = OpIMul %uint %uint_256 %28
         %33 = OpFunctionCall %int %i
         %34 = OpBitcast %uint %33
         %35 = OpExtInst %uint %29 UMin %34 %uint_3
         %36 = OpIMul %uint %uint_64 %35
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %29 UMin %38 %uint_3
         %40 = OpIMul %uint %uint_8 %39
        %l_a = OpFunctionCall %_arr_Outer_uint_4 %51 %uint_0
      %l_a_i = OpFunctionCall %Outer %54 %31
    %l_a_i_a = OpFunctionCall %_arr_Inner_uint_4 %56 %31
         %57 = OpIAdd %uint %31 %36
  %l_a_i_a_i = OpFunctionCall %Inner %59 %57
         %60 = OpIAdd %uint %31 %36
%l_a_i_a_i_m = OpFunctionCall %mat4v3half %62 %60
         %63 = OpIAdd %uint %31 %36
         %64 = OpIAdd %uint %63 %40
         %65 = OpUDiv %uint %64 %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %65
         %69 = OpBitwiseAnd %uint %64 %uint_15
         %71 = OpShiftRightLogical %uint %69 %uint_2
         %73 = OpLoad %v4uint %67 None
         %74 = OpVectorShuffle %v2uint %73 %73 2 3
         %76 = OpVectorShuffle %v2uint %73 %73 0 1
         %77 = OpIEqual %bool %71 %uint_2
         %80 = OpCompositeConstruct %v2bool %77 %77
         %81 = OpSelect %v2uint %80 %74 %76
         %83 = OpBitcast %v4half %81
%l_a_i_a_i_m_i = OpVectorShuffle %v3half %83 %83 0 1 2
         %85 = OpFunctionCall %int %i
         %86 = OpBitcast %uint %85
         %87 = OpExtInst %uint %29 UMin %86 %uint_2
         %88 = OpIMul %uint %87 %uint_2
         %89 = OpIAdd %uint %31 %36
         %90 = OpIAdd %uint %89 %40
         %91 = OpIAdd %uint %90 %88
         %92 = OpUDiv %uint %91 %uint_16
         %93 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %92
         %94 = OpBitwiseAnd %uint %91 %uint_15
         %95 = OpShiftRightLogical %uint %94 %uint_2
         %96 = OpLoad %v4uint %93 None
         %97 = OpVectorExtractDynamic %uint %96 %95
         %98 = OpUMod %uint %91 %uint_4
         %99 = OpIEqual %bool %98 %uint_0
        %100 = OpSelect %uint %99 %uint_0 %uint_1
        %103 = OpBitcast %v2half %97
%l_a_i_a_i_m_i_i = OpVectorExtractDynamic %half %103 %100
               OpReturn
               OpFunctionEnd
         %51 = OpFunction %_arr_Outer_uint_4 None %106
%start_byte_offset = OpFunctionParameter %uint
        %107 = OpLabel
          %a = OpVariable %_ptr_Function__arr_Outer_uint_4 Function
               OpStore %a %110
               OpBranch %111
        %111 = OpLabel
               OpBranch %114
        %114 = OpLabel
        %116 = OpPhi %uint %uint_0 %111 %117 %113
               OpLoopMerge %115 %113 None
               OpBranch %112
        %112 = OpLabel
        %119 = OpUGreaterThanEqual %bool %116 %uint_4
               OpSelectionMerge %120 None
               OpBranchConditional %119 %121 %120
        %121 = OpLabel
               OpBranch %115
        %120 = OpLabel
        %122 = OpIMul %uint %116 %uint_256
        %123 = OpIAdd %uint %start_byte_offset %122
        %124 = OpAccessChain %_ptr_Function_Outer %a %116
        %126 = OpFunctionCall %Outer %54 %123
               OpStore %124 %126 None
               OpBranch %113
        %113 = OpLabel
        %117 = OpIAdd %uint %116 %uint_1
               OpBranch %114
        %115 = OpLabel
        %118 = OpLoad %_arr_Outer_uint_4 %a None
               OpReturnValue %118
               OpFunctionEnd
         %54 = OpFunction %Outer None %128
%start_byte_offset_0 = OpFunctionParameter %uint
        %129 = OpLabel
        %130 = OpFunctionCall %_arr_Inner_uint_4 %56 %start_byte_offset_0
        %131 = OpCompositeConstruct %Outer %130
               OpReturnValue %131
               OpFunctionEnd
         %56 = OpFunction %_arr_Inner_uint_4 None %133
%start_byte_offset_1 = OpFunctionParameter %uint
        %134 = OpLabel
        %a_0 = OpVariable %_ptr_Function__arr_Inner_uint_4 Function
               OpStore %a_0 %137
               OpBranch %138
        %138 = OpLabel
               OpBranch %141
        %141 = OpLabel
        %143 = OpPhi %uint %uint_0 %138 %144 %140
               OpLoopMerge %142 %140 None
               OpBranch %139
        %139 = OpLabel
        %146 = OpUGreaterThanEqual %bool %143 %uint_4
               OpSelectionMerge %147 None
               OpBranchConditional %146 %148 %147
        %148 = OpLabel
               OpBranch %142
        %147 = OpLabel
        %149 = OpIMul %uint %143 %uint_64
        %150 = OpIAdd %uint %start_byte_offset_1 %149
        %151 = OpAccessChain %_ptr_Function_Inner %a_0 %143
        %153 = OpFunctionCall %Inner %59 %150
               OpStore %151 %153 None
               OpBranch %140
        %140 = OpLabel
        %144 = OpIAdd %uint %143 %uint_1
               OpBranch %141
        %142 = OpLabel
        %145 = OpLoad %_arr_Inner_uint_4 %a_0 None
               OpReturnValue %145
               OpFunctionEnd
         %59 = OpFunction %Inner None %155
%start_byte_offset_2 = OpFunctionParameter %uint
        %156 = OpLabel
        %157 = OpFunctionCall %mat4v3half %62 %start_byte_offset_2
        %158 = OpCompositeConstruct %Inner %157
               OpReturnValue %158
               OpFunctionEnd
         %62 = OpFunction %mat4v3half None %160
%start_byte_offset_3 = OpFunctionParameter %uint
        %161 = OpLabel
        %162 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %163 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %162
        %164 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %165 = OpShiftRightLogical %uint %164 %uint_2
        %166 = OpLoad %v4uint %163 None
        %167 = OpVectorShuffle %v2uint %166 %166 2 3
        %168 = OpVectorShuffle %v2uint %166 %166 0 1
        %169 = OpIEqual %bool %165 %uint_2
        %170 = OpCompositeConstruct %v2bool %169 %169
        %171 = OpSelect %v2uint %170 %167 %168
        %172 = OpBitcast %v4half %171
        %173 = OpVectorShuffle %v3half %172 %172 0 1 2
        %174 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %175 = OpUDiv %uint %174 %uint_16
        %176 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %175
        %177 = OpBitwiseAnd %uint %174 %uint_15
        %178 = OpShiftRightLogical %uint %177 %uint_2
        %179 = OpLoad %v4uint %176 None
        %180 = OpVectorShuffle %v2uint %179 %179 2 3
        %181 = OpVectorShuffle %v2uint %179 %179 0 1
        %182 = OpIEqual %bool %178 %uint_2
        %183 = OpCompositeConstruct %v2bool %182 %182
        %184 = OpSelect %v2uint %183 %180 %181
        %185 = OpBitcast %v4half %184
        %186 = OpVectorShuffle %v3half %185 %185 0 1 2
        %187 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %188 = OpUDiv %uint %187 %uint_16
        %189 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %188
        %190 = OpBitwiseAnd %uint %187 %uint_15
        %191 = OpShiftRightLogical %uint %190 %uint_2
        %192 = OpLoad %v4uint %189 None
        %193 = OpVectorShuffle %v2uint %192 %192 2 3
        %194 = OpVectorShuffle %v2uint %192 %192 0 1
        %195 = OpIEqual %bool %191 %uint_2
        %196 = OpCompositeConstruct %v2bool %195 %195
        %197 = OpSelect %v2uint %196 %193 %194
        %198 = OpBitcast %v4half %197
        %199 = OpVectorShuffle %v3half %198 %198 0 1 2
        %200 = OpIAdd %uint %uint_24 %start_byte_offset_3
        %202 = OpUDiv %uint %200 %uint_16
        %203 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %202
        %204 = OpBitwiseAnd %uint %200 %uint_15
        %205 = OpShiftRightLogical %uint %204 %uint_2
        %206 = OpLoad %v4uint %203 None
        %207 = OpVectorShuffle %v2uint %206 %206 2 3
        %208 = OpVectorShuffle %v2uint %206 %206 0 1
        %209 = OpIEqual %bool %205 %uint_2
        %210 = OpCompositeConstruct %v2bool %209 %209
        %211 = OpSelect %v2uint %210 %207 %208
        %212 = OpBitcast %v4half %211
        %213 = OpVectorShuffle %v3half %212 %212 0 1 2
        %214 = OpCompositeConstruct %mat4v3half %173 %186 %199 %213
               OpReturnValue %214
               OpFunctionEnd
