; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 123
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat2v2float = OpTypeMatrix %v2float 2
          %S = OpTypeStruct %int %mat2v2float %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Private__arr_S_uint_4 = OpTypePointer Private %_arr_S_uint_4
         %17 = OpConstantNull %_arr_S_uint_4
          %p = OpVariable %_ptr_Private__arr_S_uint_4 Private %17
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_S = OpTypePointer Private %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Private_mat2v2float = OpTypePointer Private %mat2v2float
     %uint_3 = OpConstant %uint 3
   %uint_264 = OpConstant %uint 264
%_ptr_Private_v2float = OpTypePointer Private %v2float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
         %47 = OpTypeFunction %mat2v2float %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
         %80 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %102 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
          %f = OpFunction %void None %20
         %21 = OpLabel
         %22 = OpFunctionCall %_arr_S_uint_4 %23 %uint_0
               OpStore %p %22 None
         %25 = OpAccessChain %_ptr_Private_S %p %uint_1
         %28 = OpFunctionCall %S %29 %uint_256
               OpStore %25 %28 None
         %31 = OpAccessChain %_ptr_Private_mat2v2float %p %uint_3 %uint_1
         %34 = OpFunctionCall %mat2v2float %35 %uint_264
               OpStore %31 %34 None
         %37 = OpAccessChain %_ptr_Private_v2float %p %uint_1 %uint_1 %uint_0
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %41 = OpLoad %v4uint %39 None
         %42 = OpVectorShuffle %v2uint %41 %41 0 1
         %44 = OpBitcast %v2float %42
         %45 = OpVectorShuffle %v2float %44 %44 1 0
               OpStore %37 %45 None
               OpReturn
               OpFunctionEnd
         %35 = OpFunction %mat2v2float None %47
%start_byte_offset = OpFunctionParameter %uint
         %48 = OpLabel
         %49 = OpUDiv %uint %start_byte_offset %uint_16
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %49
         %52 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %54 = OpShiftRightLogical %uint %52 %uint_2
         %56 = OpLoad %v4uint %51 None
         %57 = OpVectorShuffle %v2uint %56 %56 2 3
         %58 = OpVectorShuffle %v2uint %56 %56 0 1
         %59 = OpIEqual %bool %54 %uint_2
         %62 = OpCompositeConstruct %v2bool %59 %59
         %63 = OpSelect %v2uint %62 %57 %58
         %64 = OpBitcast %v2float %63
         %65 = OpIAdd %uint %uint_8 %start_byte_offset
         %67 = OpUDiv %uint %65 %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %67
         %69 = OpBitwiseAnd %uint %65 %uint_15
         %70 = OpShiftRightLogical %uint %69 %uint_2
         %71 = OpLoad %v4uint %68 None
         %72 = OpVectorShuffle %v2uint %71 %71 2 3
         %73 = OpVectorShuffle %v2uint %71 %71 0 1
         %74 = OpIEqual %bool %70 %uint_2
         %75 = OpCompositeConstruct %v2bool %74 %74
         %76 = OpSelect %v2uint %75 %72 %73
         %77 = OpBitcast %v2float %76
         %78 = OpCompositeConstruct %mat2v2float %64 %77
               OpReturnValue %78
               OpFunctionEnd
         %29 = OpFunction %S None %80
%start_byte_offset_0 = OpFunctionParameter %uint
         %81 = OpLabel
         %82 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %83 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %82
         %84 = OpBitwiseAnd %uint %start_byte_offset_0 %uint_15
         %85 = OpShiftRightLogical %uint %84 %uint_2
         %86 = OpLoad %v4uint %83 None
         %87 = OpVectorExtractDynamic %uint %86 %85
         %88 = OpBitcast %int %87
         %89 = OpIAdd %uint %uint_8 %start_byte_offset_0
         %90 = OpFunctionCall %mat2v2float %35 %89
         %91 = OpIAdd %uint %uint_64 %start_byte_offset_0
         %93 = OpUDiv %uint %91 %uint_16
         %94 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %93
         %95 = OpBitwiseAnd %uint %91 %uint_15
         %96 = OpShiftRightLogical %uint %95 %uint_2
         %97 = OpLoad %v4uint %94 None
         %98 = OpVectorExtractDynamic %uint %97 %96
         %99 = OpBitcast %int %98
        %100 = OpCompositeConstruct %S %88 %90 %99
               OpReturnValue %100
               OpFunctionEnd
         %23 = OpFunction %_arr_S_uint_4 None %102
%start_byte_offset_1 = OpFunctionParameter %uint
        %103 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %17
               OpBranch %106
        %106 = OpLabel
               OpBranch %109
        %109 = OpLabel
        %111 = OpPhi %uint %uint_0 %106 %112 %108
               OpLoopMerge %110 %108 None
               OpBranch %107
        %107 = OpLabel
        %114 = OpUGreaterThanEqual %bool %111 %uint_4
               OpSelectionMerge %115 None
               OpBranchConditional %114 %116 %115
        %116 = OpLabel
               OpBranch %110
        %115 = OpLabel
        %117 = OpIMul %uint %111 %uint_128
        %119 = OpIAdd %uint %start_byte_offset_1 %117
        %120 = OpAccessChain %_ptr_Function_S %a %111
        %122 = OpFunctionCall %S %29 %119
               OpStore %120 %122 None
               OpBranch %108
        %108 = OpLabel
        %112 = OpIAdd %uint %111 %uint_1
               OpBranch %109
        %110 = OpLabel
        %113 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %113
               OpFunctionEnd
