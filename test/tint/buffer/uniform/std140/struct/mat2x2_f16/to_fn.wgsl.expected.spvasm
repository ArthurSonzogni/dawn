; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 132
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %a "a"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %a_0 "a"
               OpName %b "b"
               OpName %s "s"
               OpName %c "c"
               OpName %m "m"
               OpName %d "d"
               OpName %v "v"
               OpName %e "e"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_1 "a"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
        %int = OpTypeInt 32 1
       %half = OpTypeFloat 16
     %v2half = OpTypeVector %half 2
 %mat2v2half = OpTypeMatrix %v2half 2
          %S = OpTypeStruct %int %mat2v2half %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
         %18 = OpTypeFunction %void %_arr_S_uint_4
         %22 = OpTypeFunction %void %S
         %26 = OpTypeFunction %void %mat2v2half
         %30 = OpTypeFunction %void %v2half
         %34 = OpTypeFunction %void %half
         %37 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
   %uint_256 = OpConstant %uint 256
   %uint_260 = OpConstant %uint 260
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
         %66 = OpTypeFunction %mat2v2half %uint
    %uint_16 = OpConstant %uint 16
         %86 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %108 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
        %112 = OpConstantNull %_arr_S_uint_4
       %bool = OpTypeBool
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
     %uint_1 = OpConstant %uint 1
          %a = OpFunction %void None %18
        %a_0 = OpFunctionParameter %_arr_S_uint_4
         %19 = OpLabel
               OpReturn
               OpFunctionEnd
          %b = OpFunction %void None %22
          %s = OpFunctionParameter %S
         %23 = OpLabel
               OpReturn
               OpFunctionEnd
          %c = OpFunction %void None %26
          %m = OpFunctionParameter %mat2v2half
         %27 = OpLabel
               OpReturn
               OpFunctionEnd
          %d = OpFunction %void None %30
          %v = OpFunctionParameter %v2half
         %31 = OpLabel
               OpReturn
               OpFunctionEnd
          %e = OpFunction %void None %34
          %f = OpFunctionParameter %half
         %35 = OpLabel
               OpReturn
               OpFunctionEnd
        %f_0 = OpFunction %void None %37
         %38 = OpLabel
         %39 = OpFunctionCall %_arr_S_uint_4 %40 %uint_0
         %42 = OpFunctionCall %void %a %39
         %43 = OpFunctionCall %S %44 %uint_256
         %46 = OpFunctionCall %void %b %43
         %47 = OpFunctionCall %mat2v2half %48 %uint_260
         %50 = OpFunctionCall %void %c %47
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %53 = OpLoad %v4uint %51 None
         %54 = OpCompositeExtract %uint %53 2
         %55 = OpBitcast %v2half %54
         %56 = OpVectorShuffle %v2half %55 %55 1 0
         %57 = OpFunctionCall %void %d %56
         %58 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %59 = OpLoad %v4uint %58 None
         %60 = OpCompositeExtract %uint %59 2
         %61 = OpBitcast %v2half %60
         %62 = OpVectorShuffle %v2half %61 %61 1 0
         %63 = OpCompositeExtract %half %62 0
         %64 = OpFunctionCall %void %e %63
               OpReturn
               OpFunctionEnd
         %48 = OpFunction %mat2v2half None %66
%start_byte_offset = OpFunctionParameter %uint
         %67 = OpLabel
         %68 = OpUDiv %uint %start_byte_offset %uint_16
         %70 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %68
         %71 = OpUMod %uint %start_byte_offset %uint_16
         %72 = OpUDiv %uint %71 %uint_4
         %73 = OpLoad %v4uint %70 None
         %74 = OpVectorExtractDynamic %uint %73 %72
         %75 = OpBitcast %v2half %74
         %76 = OpIAdd %uint %uint_4 %start_byte_offset
         %77 = OpUDiv %uint %76 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpUMod %uint %76 %uint_16
         %80 = OpUDiv %uint %79 %uint_4
         %81 = OpLoad %v4uint %78 None
         %82 = OpVectorExtractDynamic %uint %81 %80
         %83 = OpBitcast %v2half %82
         %84 = OpCompositeConstruct %mat2v2half %75 %83
               OpReturnValue %84
               OpFunctionEnd
         %44 = OpFunction %S None %86
%start_byte_offset_0 = OpFunctionParameter %uint
         %87 = OpLabel
         %88 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %89 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %88
         %90 = OpUMod %uint %start_byte_offset_0 %uint_16
         %91 = OpUDiv %uint %90 %uint_4
         %92 = OpLoad %v4uint %89 None
         %93 = OpVectorExtractDynamic %uint %92 %91
         %94 = OpBitcast %int %93
         %95 = OpIAdd %uint %uint_4 %start_byte_offset_0
         %96 = OpFunctionCall %mat2v2half %48 %95
         %97 = OpIAdd %uint %uint_64 %start_byte_offset_0
         %99 = OpUDiv %uint %97 %uint_16
        %100 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %99
        %101 = OpUMod %uint %97 %uint_16
        %102 = OpUDiv %uint %101 %uint_4
        %103 = OpLoad %v4uint %100 None
        %104 = OpVectorExtractDynamic %uint %103 %102
        %105 = OpBitcast %int %104
        %106 = OpCompositeConstruct %S %94 %96 %105
               OpReturnValue %106
               OpFunctionEnd
         %40 = OpFunction %_arr_S_uint_4 None %108
%start_byte_offset_1 = OpFunctionParameter %uint
        %109 = OpLabel
        %a_1 = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a_1 %112
               OpBranch %113
        %113 = OpLabel
               OpBranch %116
        %116 = OpLabel
        %118 = OpPhi %uint %uint_0 %113 %119 %115
               OpLoopMerge %117 %115 None
               OpBranch %114
        %114 = OpLabel
        %121 = OpUGreaterThanEqual %bool %118 %uint_4
               OpSelectionMerge %123 None
               OpBranchConditional %121 %124 %123
        %124 = OpLabel
               OpBranch %117
        %123 = OpLabel
        %125 = OpIMul %uint %118 %uint_128
        %127 = OpIAdd %uint %start_byte_offset_1 %125
        %128 = OpAccessChain %_ptr_Function_S %a_1 %118
        %130 = OpFunctionCall %S %44 %127
               OpStore %128 %130 None
               OpBranch %115
        %115 = OpLabel
        %119 = OpIAdd %uint %118 %uint_1
               OpBranch %116
        %117 = OpLabel
        %120 = OpLoad %_arr_S_uint_4 %a_1 None
               OpReturnValue %120
               OpFunctionEnd
