; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 130
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
       %half = OpTypeFloat 16
     %v2half = OpTypeVector %half 2
 %mat4v2half = OpTypeMatrix %v2half 4
          %S = OpTypeStruct %int %mat4v2half %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Private__arr_S_uint_4 = OpTypePointer Private %_arr_S_uint_4
         %17 = OpConstantNull %_arr_S_uint_4
          %p = OpVariable %_ptr_Private__arr_S_uint_4 Private %17
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_S = OpTypePointer Private %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Private_mat4v2half = OpTypePointer Private %mat4v2half
     %uint_3 = OpConstant %uint 3
   %uint_260 = OpConstant %uint 260
%_ptr_Private_v2half = OpTypePointer Private %v2half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
         %46 = OpTypeFunction %mat4v2half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
         %86 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %108 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
       %bool = OpTypeBool
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
          %f = OpFunction %void None %20
         %21 = OpLabel
         %22 = OpFunctionCall %_arr_S_uint_4 %23 %uint_0
               OpStore %p %22 None
         %25 = OpAccessChain %_ptr_Private_S %p %uint_1
         %28 = OpFunctionCall %S %29 %uint_256
               OpStore %25 %28 None
         %31 = OpAccessChain %_ptr_Private_mat4v2half %p %uint_3 %uint_1
         %34 = OpFunctionCall %mat4v2half %35 %uint_260
               OpStore %31 %34 None
         %37 = OpAccessChain %_ptr_Private_v2half %p %uint_1 %uint_1 %uint_0
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %41 = OpLoad %v4uint %39 None
         %42 = OpCompositeExtract %uint %41 2
         %43 = OpBitcast %v2half %42
         %44 = OpVectorShuffle %v2half %43 %43 1 0
               OpStore %37 %44 None
               OpReturn
               OpFunctionEnd
         %35 = OpFunction %mat4v2half None %46
%start_byte_offset = OpFunctionParameter %uint
         %47 = OpLabel
         %48 = OpUDiv %uint %start_byte_offset %uint_16
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %48
         %51 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %53 = OpShiftRightLogical %uint %51 %uint_2
         %55 = OpLoad %v4uint %50 None
         %56 = OpVectorExtractDynamic %uint %55 %53
         %57 = OpBitcast %v2half %56
         %58 = OpIAdd %uint %uint_4 %start_byte_offset
         %59 = OpUDiv %uint %58 %uint_16
         %60 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %59
         %61 = OpBitwiseAnd %uint %58 %uint_15
         %62 = OpShiftRightLogical %uint %61 %uint_2
         %63 = OpLoad %v4uint %60 None
         %64 = OpVectorExtractDynamic %uint %63 %62
         %65 = OpBitcast %v2half %64
         %66 = OpIAdd %uint %uint_8 %start_byte_offset
         %68 = OpUDiv %uint %66 %uint_16
         %69 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %68
         %70 = OpBitwiseAnd %uint %66 %uint_15
         %71 = OpShiftRightLogical %uint %70 %uint_2
         %72 = OpLoad %v4uint %69 None
         %73 = OpVectorExtractDynamic %uint %72 %71
         %74 = OpBitcast %v2half %73
         %75 = OpIAdd %uint %uint_12 %start_byte_offset
         %77 = OpUDiv %uint %75 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpBitwiseAnd %uint %75 %uint_15
         %80 = OpShiftRightLogical %uint %79 %uint_2
         %81 = OpLoad %v4uint %78 None
         %82 = OpVectorExtractDynamic %uint %81 %80
         %83 = OpBitcast %v2half %82
         %84 = OpCompositeConstruct %mat4v2half %57 %65 %74 %83
               OpReturnValue %84
               OpFunctionEnd
         %29 = OpFunction %S None %86
%start_byte_offset_0 = OpFunctionParameter %uint
         %87 = OpLabel
         %88 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %89 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %88
         %90 = OpBitwiseAnd %uint %start_byte_offset_0 %uint_15
         %91 = OpShiftRightLogical %uint %90 %uint_2
         %92 = OpLoad %v4uint %89 None
         %93 = OpVectorExtractDynamic %uint %92 %91
         %94 = OpBitcast %int %93
         %95 = OpIAdd %uint %uint_4 %start_byte_offset_0
         %96 = OpFunctionCall %mat4v2half %35 %95
         %97 = OpIAdd %uint %uint_64 %start_byte_offset_0
         %99 = OpUDiv %uint %97 %uint_16
        %100 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %99
        %101 = OpBitwiseAnd %uint %97 %uint_15
        %102 = OpShiftRightLogical %uint %101 %uint_2
        %103 = OpLoad %v4uint %100 None
        %104 = OpVectorExtractDynamic %uint %103 %102
        %105 = OpBitcast %int %104
        %106 = OpCompositeConstruct %S %94 %96 %105
               OpReturnValue %106
               OpFunctionEnd
         %23 = OpFunction %_arr_S_uint_4 None %108
%start_byte_offset_1 = OpFunctionParameter %uint
        %109 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %17
               OpBranch %112
        %112 = OpLabel
               OpBranch %115
        %115 = OpLabel
        %117 = OpPhi %uint %uint_0 %112 %118 %114
               OpLoopMerge %116 %114 None
               OpBranch %113
        %113 = OpLabel
        %120 = OpUGreaterThanEqual %bool %117 %uint_4
               OpSelectionMerge %122 None
               OpBranchConditional %120 %123 %122
        %123 = OpLabel
               OpBranch %116
        %122 = OpLabel
        %124 = OpIMul %uint %117 %uint_128
        %126 = OpIAdd %uint %start_byte_offset_1 %124
        %127 = OpAccessChain %_ptr_Function_S %a %117
        %129 = OpFunctionCall %S %29 %126
               OpStore %127 %129 None
               OpBranch %114
        %114 = OpLabel
        %118 = OpIAdd %uint %117 %uint_1
               OpBranch %115
        %116 = OpLabel
        %119 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %119
               OpFunctionEnd
