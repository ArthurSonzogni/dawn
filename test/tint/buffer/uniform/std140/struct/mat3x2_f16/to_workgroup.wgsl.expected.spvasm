; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 142
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
       %half = OpTypeFloat 16
     %v2half = OpTypeVector %half 2
 %mat3v2half = OpTypeMatrix %v2half 3
          %S = OpTypeStruct %int %mat3v2half %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Workgroup__arr_S_uint_4 = OpTypePointer Workgroup %_arr_S_uint_4
          %w = OpVariable %_ptr_Workgroup__arr_S_uint_4 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %22 = OpTypeFunction %void %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_S = OpTypePointer Workgroup %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Workgroup_mat3v2half = OpTypePointer Workgroup %mat3v2half
     %uint_3 = OpConstant %uint 3
   %uint_260 = OpConstant %uint 260
%_ptr_Workgroup_v2half = OpTypePointer Workgroup %v2half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
       %bool = OpTypeBool
         %62 = OpConstantNull %S
         %64 = OpTypeFunction %mat3v2half %uint
    %uint_16 = OpConstant %uint 16
     %uint_8 = OpConstant %uint 8
         %93 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %115 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
        %119 = OpConstantNull %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
        %138 = OpTypeFunction %void
    %f_inner = OpFunction %void None %22
%tint_local_index = OpFunctionParameter %uint
         %23 = OpLabel
               OpBranch %24
         %24 = OpLabel
               OpBranch %27
         %27 = OpLabel
         %29 = OpPhi %uint %tint_local_index %24 %30 %26
               OpLoopMerge %28 %26 None
               OpBranch %25
         %25 = OpLabel
         %57 = OpUGreaterThanEqual %bool %29 %uint_4
               OpSelectionMerge %59 None
               OpBranchConditional %57 %60 %59
         %60 = OpLabel
               OpBranch %28
         %59 = OpLabel
         %61 = OpAccessChain %_ptr_Workgroup_S %w %29
               OpStore %61 %62 None
               OpBranch %26
         %26 = OpLabel
         %30 = OpIAdd %uint %29 %uint_1
               OpBranch %27
         %28 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %34 = OpFunctionCall %_arr_S_uint_4 %35 %uint_0
               OpStore %w %34 None
         %37 = OpAccessChain %_ptr_Workgroup_S %w %uint_1
         %40 = OpFunctionCall %S %41 %uint_256
               OpStore %37 %40 None
         %43 = OpAccessChain %_ptr_Workgroup_mat3v2half %w %uint_3 %uint_1
         %46 = OpFunctionCall %mat3v2half %47 %uint_260
               OpStore %43 %46 None
         %49 = OpAccessChain %_ptr_Workgroup_v2half %w %uint_1 %uint_1 %uint_0
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %53 = OpLoad %v4uint %51 None
         %54 = OpCompositeExtract %uint %53 2
         %55 = OpBitcast %v2half %54
         %56 = OpVectorShuffle %v2half %55 %55 1 0
               OpStore %49 %56 None
               OpReturn
               OpFunctionEnd
         %47 = OpFunction %mat3v2half None %64
%start_byte_offset = OpFunctionParameter %uint
         %65 = OpLabel
         %66 = OpUDiv %uint %start_byte_offset %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %69 = OpUMod %uint %start_byte_offset %uint_16
         %70 = OpUDiv %uint %69 %uint_4
         %71 = OpLoad %v4uint %68 None
         %72 = OpVectorExtractDynamic %uint %71 %70
         %73 = OpBitcast %v2half %72
         %74 = OpIAdd %uint %uint_4 %start_byte_offset
         %75 = OpUDiv %uint %74 %uint_16
         %76 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %75
         %77 = OpUMod %uint %74 %uint_16
         %78 = OpUDiv %uint %77 %uint_4
         %79 = OpLoad %v4uint %76 None
         %80 = OpVectorExtractDynamic %uint %79 %78
         %81 = OpBitcast %v2half %80
         %82 = OpIAdd %uint %uint_8 %start_byte_offset
         %84 = OpUDiv %uint %82 %uint_16
         %85 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %84
         %86 = OpUMod %uint %82 %uint_16
         %87 = OpUDiv %uint %86 %uint_4
         %88 = OpLoad %v4uint %85 None
         %89 = OpVectorExtractDynamic %uint %88 %87
         %90 = OpBitcast %v2half %89
         %91 = OpCompositeConstruct %mat3v2half %73 %81 %90
               OpReturnValue %91
               OpFunctionEnd
         %41 = OpFunction %S None %93
%start_byte_offset_0 = OpFunctionParameter %uint
         %94 = OpLabel
         %95 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %96 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %95
         %97 = OpUMod %uint %start_byte_offset_0 %uint_16
         %98 = OpUDiv %uint %97 %uint_4
         %99 = OpLoad %v4uint %96 None
        %100 = OpVectorExtractDynamic %uint %99 %98
        %101 = OpBitcast %int %100
        %102 = OpIAdd %uint %uint_4 %start_byte_offset_0
        %103 = OpFunctionCall %mat3v2half %47 %102
        %104 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %106 = OpUDiv %uint %104 %uint_16
        %107 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %106
        %108 = OpUMod %uint %104 %uint_16
        %109 = OpUDiv %uint %108 %uint_4
        %110 = OpLoad %v4uint %107 None
        %111 = OpVectorExtractDynamic %uint %110 %109
        %112 = OpBitcast %int %111
        %113 = OpCompositeConstruct %S %101 %103 %112
               OpReturnValue %113
               OpFunctionEnd
         %35 = OpFunction %_arr_S_uint_4 None %115
%start_byte_offset_1 = OpFunctionParameter %uint
        %116 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %119
               OpBranch %120
        %120 = OpLabel
               OpBranch %123
        %123 = OpLabel
        %125 = OpPhi %uint %uint_0 %120 %126 %122
               OpLoopMerge %124 %122 None
               OpBranch %121
        %121 = OpLabel
        %128 = OpUGreaterThanEqual %bool %125 %uint_4
               OpSelectionMerge %129 None
               OpBranchConditional %128 %130 %129
        %130 = OpLabel
               OpBranch %124
        %129 = OpLabel
        %131 = OpIMul %uint %125 %uint_128
        %133 = OpIAdd %uint %start_byte_offset_1 %131
        %134 = OpAccessChain %_ptr_Function_S %a %125
        %136 = OpFunctionCall %S %41 %133
               OpStore %134 %136 None
               OpBranch %122
        %122 = OpLabel
        %126 = OpIAdd %uint %125 %uint_1
               OpBranch %123
        %124 = OpLabel
        %127 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %127
               OpFunctionEnd
          %f = OpFunction %void None %138
        %139 = OpLabel
        %140 = OpLoad %uint %f_local_invocation_index_Input None
        %141 = OpFunctionCall %void %f_inner %140
               OpReturn
               OpFunctionEnd
