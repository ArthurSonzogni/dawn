; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 147
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat2v3half = OpTypeMatrix %v3half 2
          %S = OpTypeStruct %int %mat2v3half %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Workgroup__arr_S_uint_4 = OpTypePointer Workgroup %_arr_S_uint_4
          %w = OpVariable %_ptr_Workgroup__arr_S_uint_4 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %22 = OpTypeFunction %void %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_S = OpTypePointer Workgroup %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Workgroup_mat2v3half = OpTypePointer Workgroup %mat2v3half
     %uint_3 = OpConstant %uint 3
%_ptr_Workgroup_v3half = OpTypePointer Workgroup %v3half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
       %bool = OpTypeBool
         %64 = OpConstantNull %S
         %66 = OpTypeFunction %mat2v3half %uint
    %uint_16 = OpConstant %uint 16
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
         %98 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %120 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
        %124 = OpConstantNull %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
        %143 = OpTypeFunction %void
    %f_inner = OpFunction %void None %22
%tint_local_index = OpFunctionParameter %uint
         %23 = OpLabel
               OpBranch %24
         %24 = OpLabel
               OpBranch %27
         %27 = OpLabel
         %29 = OpPhi %uint %tint_local_index %24 %30 %26
               OpLoopMerge %28 %26 None
               OpBranch %25
         %25 = OpLabel
         %59 = OpUGreaterThanEqual %bool %29 %uint_4
               OpSelectionMerge %61 None
               OpBranchConditional %59 %62 %61
         %62 = OpLabel
               OpBranch %28
         %61 = OpLabel
         %63 = OpAccessChain %_ptr_Workgroup_S %w %29
               OpStore %63 %64 None
               OpBranch %26
         %26 = OpLabel
         %30 = OpIAdd %uint %29 %uint_1
               OpBranch %27
         %28 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %34 = OpFunctionCall %_arr_S_uint_4 %35 %uint_0
               OpStore %w %34 None
         %37 = OpAccessChain %_ptr_Workgroup_S %w %uint_1
         %40 = OpFunctionCall %S %41 %uint_256
               OpStore %37 %40 None
         %43 = OpAccessChain %_ptr_Workgroup_mat2v3half %w %uint_3 %uint_1
         %46 = OpFunctionCall %mat2v3half %47 %uint_264
               OpStore %43 %46 None
         %48 = OpAccessChain %_ptr_Workgroup_v3half %w %uint_1 %uint_1 %uint_0
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %52 = OpLoad %v4uint %50 None
         %53 = OpVectorShuffle %v2uint %52 %52 0 1
         %56 = OpBitcast %v4half %53
         %57 = OpVectorShuffle %v3half %56 %56 0 1 2
         %58 = OpVectorShuffle %v3half %57 %57 2 0 1
               OpStore %48 %58 None
               OpReturn
               OpFunctionEnd
         %47 = OpFunction %mat2v3half None %66
%start_byte_offset = OpFunctionParameter %uint
         %67 = OpLabel
         %68 = OpUDiv %uint %start_byte_offset %uint_16
         %70 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %68
         %71 = OpUMod %uint %start_byte_offset %uint_16
         %72 = OpUDiv %uint %71 %uint_4
         %73 = OpLoad %v4uint %70 None
         %74 = OpVectorShuffle %v2uint %73 %73 2 3
         %75 = OpVectorShuffle %v2uint %73 %73 0 1
         %76 = OpIEqual %bool %72 %uint_2
         %78 = OpCompositeConstruct %v2bool %76 %76
         %79 = OpSelect %v2uint %78 %74 %75
         %80 = OpBitcast %v4half %79
         %81 = OpVectorShuffle %v3half %80 %80 0 1 2
         %82 = OpIAdd %uint %uint_8 %start_byte_offset
         %84 = OpUDiv %uint %82 %uint_16
         %85 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %84
         %86 = OpUMod %uint %82 %uint_16
         %87 = OpUDiv %uint %86 %uint_4
         %88 = OpLoad %v4uint %85 None
         %89 = OpVectorShuffle %v2uint %88 %88 2 3
         %90 = OpVectorShuffle %v2uint %88 %88 0 1
         %91 = OpIEqual %bool %87 %uint_2
         %92 = OpCompositeConstruct %v2bool %91 %91
         %93 = OpSelect %v2uint %92 %89 %90
         %94 = OpBitcast %v4half %93
         %95 = OpVectorShuffle %v3half %94 %94 0 1 2
         %96 = OpCompositeConstruct %mat2v3half %81 %95
               OpReturnValue %96
               OpFunctionEnd
         %41 = OpFunction %S None %98
%start_byte_offset_0 = OpFunctionParameter %uint
         %99 = OpLabel
        %100 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %101 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %100
        %102 = OpUMod %uint %start_byte_offset_0 %uint_16
        %103 = OpUDiv %uint %102 %uint_4
        %104 = OpLoad %v4uint %101 None
        %105 = OpVectorExtractDynamic %uint %104 %103
        %106 = OpBitcast %int %105
        %107 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %108 = OpFunctionCall %mat2v3half %47 %107
        %109 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %111 = OpUDiv %uint %109 %uint_16
        %112 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %111
        %113 = OpUMod %uint %109 %uint_16
        %114 = OpUDiv %uint %113 %uint_4
        %115 = OpLoad %v4uint %112 None
        %116 = OpVectorExtractDynamic %uint %115 %114
        %117 = OpBitcast %int %116
        %118 = OpCompositeConstruct %S %106 %108 %117
               OpReturnValue %118
               OpFunctionEnd
         %35 = OpFunction %_arr_S_uint_4 None %120
%start_byte_offset_1 = OpFunctionParameter %uint
        %121 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %124
               OpBranch %125
        %125 = OpLabel
               OpBranch %128
        %128 = OpLabel
        %130 = OpPhi %uint %uint_0 %125 %131 %127
               OpLoopMerge %129 %127 None
               OpBranch %126
        %126 = OpLabel
        %133 = OpUGreaterThanEqual %bool %130 %uint_4
               OpSelectionMerge %134 None
               OpBranchConditional %133 %135 %134
        %135 = OpLabel
               OpBranch %129
        %134 = OpLabel
        %136 = OpIMul %uint %130 %uint_128
        %138 = OpIAdd %uint %start_byte_offset_1 %136
        %139 = OpAccessChain %_ptr_Function_S %a %130
        %141 = OpFunctionCall %S %41 %138
               OpStore %139 %141 None
               OpBranch %127
        %127 = OpLabel
        %131 = OpIAdd %uint %130 %uint_1
               OpBranch %128
        %129 = OpLabel
        %132 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %132
               OpFunctionEnd
          %f = OpFunction %void None %143
        %144 = OpLabel
        %145 = OpLoad %uint %f_local_invocation_index_Input None
        %146 = OpFunctionCall %void %f_inner %145
               OpReturn
               OpFunctionEnd
