; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 159
; Schema: 0
               OpCapability Shader
         %29 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpMemberName %Inner 0 "m"
               OpName %Inner "Inner"
               OpMemberName %Outer 0 "a"
               OpName %Outer "Outer"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_a "l_a_i_a"
               OpName %l_a_i_a_i "l_a_i_a_i"
               OpName %l_a_i_a_i_m "l_a_i_a_i_m"
               OpName %l_a_i_a_i_m_i "l_a_i_a_i_m_i"
               OpName %l_a_i_a_i_m_i_i "l_a_i_a_i_m_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_0 "a"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_64 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_64 = OpConstant %uint 64
%_arr_v4uint_uint_64 = OpTypeArray %v4uint %uint_64
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_64
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %13 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %24 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
   %uint_256 = OpConstant %uint 256
     %uint_1 = OpConstant %uint 1
    %uint_16 = OpConstant %uint 16
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%mat2v3float = OpTypeMatrix %v3float 2
      %Inner = OpTypeStruct %mat2v3float
     %uint_4 = OpConstant %uint 4
%_arr_Inner_uint_4 = OpTypeArray %Inner %uint_4
      %Outer = OpTypeStruct %_arr_Inner_uint_4
%_arr_Outer_uint_4 = OpTypeArray %Outer %uint_4
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v3uint = OpTypeVector %uint 3
     %uint_2 = OpConstant %uint 2
    %uint_15 = OpConstant %uint 15
         %90 = OpTypeFunction %_arr_Outer_uint_4 %uint
%_ptr_Function__arr_Outer_uint_4 = OpTypePointer Function %_arr_Outer_uint_4
         %94 = OpConstantNull %_arr_Outer_uint_4
       %bool = OpTypeBool
%_ptr_Function_Outer = OpTypePointer Function %Outer
        %113 = OpTypeFunction %Outer %uint
        %118 = OpTypeFunction %_arr_Inner_uint_4 %uint
%_ptr_Function__arr_Inner_uint_4 = OpTypePointer Function %_arr_Inner_uint_4
        %122 = OpConstantNull %_arr_Inner_uint_4
%_ptr_Function_Inner = OpTypePointer Function %Inner
        %140 = OpTypeFunction %Inner %uint
        %145 = OpTypeFunction %mat2v3float %uint
          %i = OpFunction %int None %13
         %14 = OpLabel
         %15 = OpLoad %int %counter None
         %16 = OpBitcast %uint %15
         %17 = OpBitcast %uint %int_1
         %19 = OpIAdd %uint %16 %17
         %20 = OpBitcast %int %19
               OpStore %counter %20 None
         %21 = OpLoad %int %counter None
               OpReturnValue %21
               OpFunctionEnd
          %f = OpFunction %void None %24
         %25 = OpLabel
         %26 = OpFunctionCall %int %i
         %27 = OpBitcast %uint %26
         %28 = OpExtInst %uint %29 UMin %27 %uint_3
         %31 = OpIMul %uint %uint_256 %28
         %33 = OpFunctionCall %int %i
         %34 = OpBitcast %uint %33
         %35 = OpExtInst %uint %29 UMin %34 %uint_3
         %36 = OpIMul %uint %uint_64 %35
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %29 UMin %38 %uint_1
         %41 = OpIMul %uint %uint_16 %39
        %l_a = OpFunctionCall %_arr_Outer_uint_4 %52 %uint_0
      %l_a_i = OpFunctionCall %Outer %55 %31
    %l_a_i_a = OpFunctionCall %_arr_Inner_uint_4 %57 %31
         %58 = OpIAdd %uint %31 %36
  %l_a_i_a_i = OpFunctionCall %Inner %60 %58
         %61 = OpIAdd %uint %31 %36
%l_a_i_a_i_m = OpFunctionCall %mat2v3float %63 %61
         %64 = OpIAdd %uint %31 %36
         %65 = OpIAdd %uint %64 %41
         %66 = OpUDiv %uint %65 %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %69 = OpLoad %v4uint %67 None
         %70 = OpVectorShuffle %v3uint %69 %69 0 1 2
%l_a_i_a_i_m_i = OpBitcast %v3float %70
         %73 = OpFunctionCall %int %i
         %74 = OpBitcast %uint %73
         %75 = OpExtInst %uint %29 UMin %74 %uint_2
         %77 = OpIMul %uint %75 %uint_4
         %78 = OpIAdd %uint %31 %36
         %79 = OpIAdd %uint %78 %41
         %80 = OpIAdd %uint %79 %77
         %81 = OpUDiv %uint %80 %uint_16
         %82 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %81
         %83 = OpBitwiseAnd %uint %80 %uint_15
         %85 = OpShiftRightLogical %uint %83 %uint_2
         %86 = OpLoad %v4uint %82 None
         %87 = OpVectorExtractDynamic %uint %86 %85
%l_a_i_a_i_m_i_i = OpBitcast %float %87
               OpReturn
               OpFunctionEnd
         %52 = OpFunction %_arr_Outer_uint_4 None %90
%start_byte_offset = OpFunctionParameter %uint
         %91 = OpLabel
          %a = OpVariable %_ptr_Function__arr_Outer_uint_4 Function
               OpStore %a %94
               OpBranch %95
         %95 = OpLabel
               OpBranch %98
         %98 = OpLabel
        %100 = OpPhi %uint %uint_0 %95 %101 %97
               OpLoopMerge %99 %97 None
               OpBranch %96
         %96 = OpLabel
        %103 = OpUGreaterThanEqual %bool %100 %uint_4
               OpSelectionMerge %105 None
               OpBranchConditional %103 %106 %105
        %106 = OpLabel
               OpBranch %99
        %105 = OpLabel
        %107 = OpIMul %uint %100 %uint_256
        %108 = OpIAdd %uint %start_byte_offset %107
        %109 = OpAccessChain %_ptr_Function_Outer %a %100
        %111 = OpFunctionCall %Outer %55 %108
               OpStore %109 %111 None
               OpBranch %97
         %97 = OpLabel
        %101 = OpIAdd %uint %100 %uint_1
               OpBranch %98
         %99 = OpLabel
        %102 = OpLoad %_arr_Outer_uint_4 %a None
               OpReturnValue %102
               OpFunctionEnd
         %55 = OpFunction %Outer None %113
%start_byte_offset_0 = OpFunctionParameter %uint
        %114 = OpLabel
        %115 = OpFunctionCall %_arr_Inner_uint_4 %57 %start_byte_offset_0
        %116 = OpCompositeConstruct %Outer %115
               OpReturnValue %116
               OpFunctionEnd
         %57 = OpFunction %_arr_Inner_uint_4 None %118
%start_byte_offset_1 = OpFunctionParameter %uint
        %119 = OpLabel
        %a_0 = OpVariable %_ptr_Function__arr_Inner_uint_4 Function
               OpStore %a_0 %122
               OpBranch %123
        %123 = OpLabel
               OpBranch %126
        %126 = OpLabel
        %128 = OpPhi %uint %uint_0 %123 %129 %125
               OpLoopMerge %127 %125 None
               OpBranch %124
        %124 = OpLabel
        %131 = OpUGreaterThanEqual %bool %128 %uint_4
               OpSelectionMerge %132 None
               OpBranchConditional %131 %133 %132
        %133 = OpLabel
               OpBranch %127
        %132 = OpLabel
        %134 = OpIMul %uint %128 %uint_64
        %135 = OpIAdd %uint %start_byte_offset_1 %134
        %136 = OpAccessChain %_ptr_Function_Inner %a_0 %128
        %138 = OpFunctionCall %Inner %60 %135
               OpStore %136 %138 None
               OpBranch %125
        %125 = OpLabel
        %129 = OpIAdd %uint %128 %uint_1
               OpBranch %126
        %127 = OpLabel
        %130 = OpLoad %_arr_Inner_uint_4 %a_0 None
               OpReturnValue %130
               OpFunctionEnd
         %60 = OpFunction %Inner None %140
%start_byte_offset_2 = OpFunctionParameter %uint
        %141 = OpLabel
        %142 = OpFunctionCall %mat2v3float %63 %start_byte_offset_2
        %143 = OpCompositeConstruct %Inner %142
               OpReturnValue %143
               OpFunctionEnd
         %63 = OpFunction %mat2v3float None %145
%start_byte_offset_3 = OpFunctionParameter %uint
        %146 = OpLabel
        %147 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %148 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %147
        %149 = OpLoad %v4uint %148 None
        %150 = OpVectorShuffle %v3uint %149 %149 0 1 2
        %151 = OpBitcast %v3float %150
        %152 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %153 = OpUDiv %uint %152 %uint_16
        %154 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %153
        %155 = OpLoad %v4uint %154 None
        %156 = OpVectorShuffle %v3uint %155 %155 0 1 2
        %157 = OpBitcast %v3float %156
        %158 = OpCompositeConstruct %mat2v3float %151 %157
               OpReturnValue %158
               OpFunctionEnd
