; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 104
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%mat2v4float = OpTypeMatrix %v4float 2
          %S = OpTypeStruct %int %mat2v4float %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Private__arr_S_uint_4 = OpTypePointer Private %_arr_S_uint_4
         %17 = OpConstantNull %_arr_S_uint_4
          %p = OpVariable %_ptr_Private__arr_S_uint_4 Private %17
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_S = OpTypePointer Private %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Private_mat2v4float = OpTypePointer Private %mat2v4float
     %uint_3 = OpConstant %uint 3
   %uint_272 = OpConstant %uint 272
%_ptr_Private_v4float = OpTypePointer Private %v4float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_2 = OpConstant %uint 2
         %46 = OpTypeFunction %mat2v4float %uint
    %uint_16 = OpConstant %uint 16
         %60 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
         %82 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
       %bool = OpTypeBool
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
          %f = OpFunction %void None %20
         %21 = OpLabel
         %22 = OpFunctionCall %_arr_S_uint_4 %23 %uint_0
               OpStore %p %22 None
         %25 = OpAccessChain %_ptr_Private_S %p %uint_1
         %28 = OpFunctionCall %S %29 %uint_256
               OpStore %25 %28 None
         %31 = OpAccessChain %_ptr_Private_mat2v4float %p %uint_3 %uint_1
         %34 = OpFunctionCall %mat2v4float %35 %uint_272
               OpStore %31 %34 None
         %37 = OpAccessChain %_ptr_Private_v4float %p %uint_1 %uint_1 %uint_0
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %42 = OpLoad %v4uint %39 None
         %43 = OpBitcast %v4float %42
         %44 = OpVectorShuffle %v4float %43 %43 1 3 0 2
               OpStore %37 %44 None
               OpReturn
               OpFunctionEnd
         %35 = OpFunction %mat2v4float None %46
%start_byte_offset = OpFunctionParameter %uint
         %47 = OpLabel
         %48 = OpUDiv %uint %start_byte_offset %uint_16
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %48
         %51 = OpLoad %v4uint %50 None
         %52 = OpBitcast %v4float %51
         %53 = OpIAdd %uint %uint_16 %start_byte_offset
         %54 = OpUDiv %uint %53 %uint_16
         %55 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %54
         %56 = OpLoad %v4uint %55 None
         %57 = OpBitcast %v4float %56
         %58 = OpCompositeConstruct %mat2v4float %52 %57
               OpReturnValue %58
               OpFunctionEnd
         %29 = OpFunction %S None %60
%start_byte_offset_0 = OpFunctionParameter %uint
         %61 = OpLabel
         %62 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %63 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %62
         %64 = OpUMod %uint %start_byte_offset_0 %uint_16
         %65 = OpUDiv %uint %64 %uint_4
         %66 = OpLoad %v4uint %63 None
         %67 = OpVectorExtractDynamic %uint %66 %65
         %68 = OpBitcast %int %67
         %69 = OpIAdd %uint %uint_16 %start_byte_offset_0
         %70 = OpFunctionCall %mat2v4float %35 %69
         %71 = OpIAdd %uint %uint_64 %start_byte_offset_0
         %73 = OpUDiv %uint %71 %uint_16
         %74 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %73
         %75 = OpUMod %uint %71 %uint_16
         %76 = OpUDiv %uint %75 %uint_4
         %77 = OpLoad %v4uint %74 None
         %78 = OpVectorExtractDynamic %uint %77 %76
         %79 = OpBitcast %int %78
         %80 = OpCompositeConstruct %S %68 %70 %79
               OpReturnValue %80
               OpFunctionEnd
         %23 = OpFunction %_arr_S_uint_4 None %82
%start_byte_offset_1 = OpFunctionParameter %uint
         %83 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %17
               OpBranch %86
         %86 = OpLabel
               OpBranch %89
         %89 = OpLabel
         %91 = OpPhi %uint %uint_0 %86 %92 %88
               OpLoopMerge %90 %88 None
               OpBranch %87
         %87 = OpLabel
         %94 = OpUGreaterThanEqual %bool %91 %uint_4
               OpSelectionMerge %96 None
               OpBranchConditional %94 %97 %96
         %97 = OpLabel
               OpBranch %90
         %96 = OpLabel
         %98 = OpIMul %uint %91 %uint_128
        %100 = OpIAdd %uint %start_byte_offset_1 %98
        %101 = OpAccessChain %_ptr_Function_S %a %91
        %103 = OpFunctionCall %S %29 %100
               OpStore %101 %103 None
               OpBranch %88
         %88 = OpLabel
         %92 = OpIAdd %uint %91 %uint_1
               OpBranch %89
         %90 = OpLabel
         %93 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %93
               OpFunctionEnd
