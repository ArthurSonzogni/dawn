; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 195
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %29 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpMemberName %Inner 0 "m"
               OpName %Inner "Inner"
               OpMemberName %Outer 0 "a"
               OpName %Outer "Outer"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_a "l_a_i_a"
               OpName %l_a_i_a_i "l_a_i_a_i"
               OpName %l_a_i_a_i_m "l_a_i_a_i_m"
               OpName %l_a_i_a_i_m_i "l_a_i_a_i_m_i"
               OpName %l_a_i_a_i_m_i_i "l_a_i_a_i_m_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_0 "a"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_64 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_64 = OpConstant %uint 64
%_arr_v4uint_uint_64 = OpTypeArray %v4uint %uint_64
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_64
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %13 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %24 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
   %uint_256 = OpConstant %uint 256
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat3v4half = OpTypeMatrix %v4half 3
      %Inner = OpTypeStruct %mat3v4half
     %uint_4 = OpConstant %uint 4
%_arr_Inner_uint_4 = OpTypeArray %Inner %uint_4
      %Outer = OpTypeStruct %_arr_Inner_uint_4
%_arr_Outer_uint_4 = OpTypeArray %Outer %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_1 = OpConstant %uint 1
     %v2half = OpTypeVector %half 2
        %103 = OpTypeFunction %_arr_Outer_uint_4 %uint
%_ptr_Function__arr_Outer_uint_4 = OpTypePointer Function %_arr_Outer_uint_4
        %107 = OpConstantNull %_arr_Outer_uint_4
%_ptr_Function_Outer = OpTypePointer Function %Outer
        %125 = OpTypeFunction %Outer %uint
        %130 = OpTypeFunction %_arr_Inner_uint_4 %uint
%_ptr_Function__arr_Inner_uint_4 = OpTypePointer Function %_arr_Inner_uint_4
        %134 = OpConstantNull %_arr_Inner_uint_4
%_ptr_Function_Inner = OpTypePointer Function %Inner
        %152 = OpTypeFunction %Inner %uint
        %157 = OpTypeFunction %mat3v4half %uint
          %i = OpFunction %int None %13
         %14 = OpLabel
         %15 = OpLoad %int %counter None
         %16 = OpBitcast %uint %15
         %17 = OpBitcast %uint %int_1
         %19 = OpIAdd %uint %16 %17
         %20 = OpBitcast %int %19
               OpStore %counter %20 None
         %21 = OpLoad %int %counter None
               OpReturnValue %21
               OpFunctionEnd
          %f = OpFunction %void None %24
         %25 = OpLabel
         %26 = OpFunctionCall %int %i
         %27 = OpBitcast %uint %26
         %28 = OpExtInst %uint %29 UMin %27 %uint_3
         %31 = OpIMul %uint %uint_256 %28
         %33 = OpFunctionCall %int %i
         %34 = OpBitcast %uint %33
         %35 = OpExtInst %uint %29 UMin %34 %uint_3
         %36 = OpIMul %uint %uint_64 %35
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %29 UMin %38 %uint_2
         %41 = OpIMul %uint %uint_8 %39
        %l_a = OpFunctionCall %_arr_Outer_uint_4 %52 %uint_0
      %l_a_i = OpFunctionCall %Outer %55 %31
    %l_a_i_a = OpFunctionCall %_arr_Inner_uint_4 %57 %31
         %58 = OpIAdd %uint %31 %36
  %l_a_i_a_i = OpFunctionCall %Inner %60 %58
         %61 = OpIAdd %uint %31 %36
%l_a_i_a_i_m = OpFunctionCall %mat3v4half %63 %61
         %64 = OpIAdd %uint %31 %36
         %65 = OpIAdd %uint %64 %41
         %66 = OpUDiv %uint %65 %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %70 = OpUMod %uint %65 %uint_16
         %71 = OpUDiv %uint %70 %uint_4
         %72 = OpLoad %v4uint %68 None
         %73 = OpVectorShuffle %v2uint %72 %72 2 3
         %75 = OpVectorShuffle %v2uint %72 %72 0 1
         %76 = OpIEqual %bool %71 %uint_2
         %79 = OpCompositeConstruct %v2bool %76 %76
         %80 = OpSelect %v2uint %79 %73 %75
%l_a_i_a_i_m_i = OpBitcast %v4half %80
         %82 = OpFunctionCall %int %i
         %83 = OpBitcast %uint %82
         %84 = OpExtInst %uint %29 UMin %83 %uint_3
         %85 = OpIMul %uint %84 %uint_2
         %86 = OpIAdd %uint %31 %36
         %87 = OpIAdd %uint %86 %41
         %88 = OpIAdd %uint %87 %85
         %89 = OpUDiv %uint %88 %uint_16
         %90 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %89
         %91 = OpUMod %uint %88 %uint_16
         %92 = OpUDiv %uint %91 %uint_4
         %93 = OpLoad %v4uint %90 None
         %94 = OpVectorExtractDynamic %uint %93 %92
         %95 = OpUMod %uint %88 %uint_4
         %96 = OpIEqual %bool %95 %uint_0
         %97 = OpSelect %uint %96 %uint_0 %uint_1
        %100 = OpBitcast %v2half %94
%l_a_i_a_i_m_i_i = OpVectorExtractDynamic %half %100 %97
               OpReturn
               OpFunctionEnd
         %52 = OpFunction %_arr_Outer_uint_4 None %103
%start_byte_offset = OpFunctionParameter %uint
        %104 = OpLabel
          %a = OpVariable %_ptr_Function__arr_Outer_uint_4 Function
               OpStore %a %107
               OpBranch %108
        %108 = OpLabel
               OpBranch %111
        %111 = OpLabel
        %113 = OpPhi %uint %uint_0 %108 %114 %110
               OpLoopMerge %112 %110 None
               OpBranch %109
        %109 = OpLabel
        %116 = OpUGreaterThanEqual %bool %113 %uint_4
               OpSelectionMerge %117 None
               OpBranchConditional %116 %118 %117
        %118 = OpLabel
               OpBranch %112
        %117 = OpLabel
        %119 = OpIMul %uint %113 %uint_256
        %120 = OpIAdd %uint %start_byte_offset %119
        %121 = OpAccessChain %_ptr_Function_Outer %a %113
        %123 = OpFunctionCall %Outer %55 %120
               OpStore %121 %123 None
               OpBranch %110
        %110 = OpLabel
        %114 = OpIAdd %uint %113 %uint_1
               OpBranch %111
        %112 = OpLabel
        %115 = OpLoad %_arr_Outer_uint_4 %a None
               OpReturnValue %115
               OpFunctionEnd
         %55 = OpFunction %Outer None %125
%start_byte_offset_0 = OpFunctionParameter %uint
        %126 = OpLabel
        %127 = OpFunctionCall %_arr_Inner_uint_4 %57 %start_byte_offset_0
        %128 = OpCompositeConstruct %Outer %127
               OpReturnValue %128
               OpFunctionEnd
         %57 = OpFunction %_arr_Inner_uint_4 None %130
%start_byte_offset_1 = OpFunctionParameter %uint
        %131 = OpLabel
        %a_0 = OpVariable %_ptr_Function__arr_Inner_uint_4 Function
               OpStore %a_0 %134
               OpBranch %135
        %135 = OpLabel
               OpBranch %138
        %138 = OpLabel
        %140 = OpPhi %uint %uint_0 %135 %141 %137
               OpLoopMerge %139 %137 None
               OpBranch %136
        %136 = OpLabel
        %143 = OpUGreaterThanEqual %bool %140 %uint_4
               OpSelectionMerge %144 None
               OpBranchConditional %143 %145 %144
        %145 = OpLabel
               OpBranch %139
        %144 = OpLabel
        %146 = OpIMul %uint %140 %uint_64
        %147 = OpIAdd %uint %start_byte_offset_1 %146
        %148 = OpAccessChain %_ptr_Function_Inner %a_0 %140
        %150 = OpFunctionCall %Inner %60 %147
               OpStore %148 %150 None
               OpBranch %137
        %137 = OpLabel
        %141 = OpIAdd %uint %140 %uint_1
               OpBranch %138
        %139 = OpLabel
        %142 = OpLoad %_arr_Inner_uint_4 %a_0 None
               OpReturnValue %142
               OpFunctionEnd
         %60 = OpFunction %Inner None %152
%start_byte_offset_2 = OpFunctionParameter %uint
        %153 = OpLabel
        %154 = OpFunctionCall %mat3v4half %63 %start_byte_offset_2
        %155 = OpCompositeConstruct %Inner %154
               OpReturnValue %155
               OpFunctionEnd
         %63 = OpFunction %mat3v4half None %157
%start_byte_offset_3 = OpFunctionParameter %uint
        %158 = OpLabel
        %159 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %160 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %159
        %161 = OpUMod %uint %start_byte_offset_3 %uint_16
        %162 = OpUDiv %uint %161 %uint_4
        %163 = OpLoad %v4uint %160 None
        %164 = OpVectorShuffle %v2uint %163 %163 2 3
        %165 = OpVectorShuffle %v2uint %163 %163 0 1
        %166 = OpIEqual %bool %162 %uint_2
        %167 = OpCompositeConstruct %v2bool %166 %166
        %168 = OpSelect %v2uint %167 %164 %165
        %169 = OpBitcast %v4half %168
        %170 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %171 = OpUDiv %uint %170 %uint_16
        %172 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %171
        %173 = OpUMod %uint %170 %uint_16
        %174 = OpUDiv %uint %173 %uint_4
        %175 = OpLoad %v4uint %172 None
        %176 = OpVectorShuffle %v2uint %175 %175 2 3
        %177 = OpVectorShuffle %v2uint %175 %175 0 1
        %178 = OpIEqual %bool %174 %uint_2
        %179 = OpCompositeConstruct %v2bool %178 %178
        %180 = OpSelect %v2uint %179 %176 %177
        %181 = OpBitcast %v4half %180
        %182 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %183 = OpUDiv %uint %182 %uint_16
        %184 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %183
        %185 = OpUMod %uint %182 %uint_16
        %186 = OpUDiv %uint %185 %uint_4
        %187 = OpLoad %v4uint %184 None
        %188 = OpVectorShuffle %v2uint %187 %187 2 3
        %189 = OpVectorShuffle %v2uint %187 %187 0 1
        %190 = OpIEqual %bool %186 %uint_2
        %191 = OpCompositeConstruct %v2bool %190 %190
        %192 = OpSelect %v2uint %191 %188 %189
        %193 = OpBitcast %v4half %192
        %194 = OpCompositeConstruct %mat3v4half %169 %181 %193
               OpReturnValue %194
               OpFunctionEnd
