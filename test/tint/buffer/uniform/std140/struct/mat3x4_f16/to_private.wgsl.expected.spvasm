; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 135
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %S 0 "before"
               OpMemberName %S 1 "m"
               OpMemberName %S 2 "after"
               OpName %S "S"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_32 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_32 = OpConstant %uint 32
%_arr_v4uint_uint_32 = OpTypeArray %v4uint %uint_32
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_32
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat3v4half = OpTypeMatrix %v4half 3
          %S = OpTypeStruct %int %mat3v4half %int
     %uint_4 = OpConstant %uint 4
%_arr_S_uint_4 = OpTypeArray %S %uint_4
%_ptr_Private__arr_S_uint_4 = OpTypePointer Private %_arr_S_uint_4
         %17 = OpConstantNull %_arr_S_uint_4
          %p = OpVariable %_ptr_Private__arr_S_uint_4 Private %17
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_S = OpTypePointer Private %S
     %uint_1 = OpConstant %uint 1
   %uint_256 = OpConstant %uint 256
%_ptr_Private_mat3v4half = OpTypePointer Private %mat3v4half
     %uint_3 = OpConstant %uint 3
   %uint_264 = OpConstant %uint 264
%_ptr_Private_v4half = OpTypePointer Private %v4half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
         %47 = OpTypeFunction %mat3v4half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
         %92 = OpTypeFunction %S %uint
    %uint_64 = OpConstant %uint 64
        %114 = OpTypeFunction %_arr_S_uint_4 %uint
%_ptr_Function__arr_S_uint_4 = OpTypePointer Function %_arr_S_uint_4
   %uint_128 = OpConstant %uint 128
%_ptr_Function_S = OpTypePointer Function %S
          %f = OpFunction %void None %20
         %21 = OpLabel
         %22 = OpFunctionCall %_arr_S_uint_4 %23 %uint_0
               OpStore %p %22 None
         %25 = OpAccessChain %_ptr_Private_S %p %uint_1
         %28 = OpFunctionCall %S %29 %uint_256
               OpStore %25 %28 None
         %31 = OpAccessChain %_ptr_Private_mat3v4half %p %uint_3 %uint_1
         %34 = OpFunctionCall %mat3v4half %35 %uint_264
               OpStore %31 %34 None
         %37 = OpAccessChain %_ptr_Private_v4half %p %uint_1 %uint_1 %uint_0
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %41 = OpLoad %v4uint %39 None
         %42 = OpVectorShuffle %v2uint %41 %41 0 1
         %44 = OpBitcast %v4half %42
         %45 = OpVectorShuffle %v4half %44 %44 1 3 0 2
               OpStore %37 %45 None
               OpReturn
               OpFunctionEnd
         %35 = OpFunction %mat3v4half None %47
%start_byte_offset = OpFunctionParameter %uint
         %48 = OpLabel
         %49 = OpUDiv %uint %start_byte_offset %uint_16
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %49
         %52 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %54 = OpShiftRightLogical %uint %52 %uint_2
         %56 = OpLoad %v4uint %51 None
         %57 = OpVectorShuffle %v2uint %56 %56 2 3
         %58 = OpVectorShuffle %v2uint %56 %56 0 1
         %59 = OpIEqual %bool %54 %uint_2
         %62 = OpCompositeConstruct %v2bool %59 %59
         %63 = OpSelect %v2uint %62 %57 %58
         %64 = OpBitcast %v4half %63
         %65 = OpIAdd %uint %uint_8 %start_byte_offset
         %67 = OpUDiv %uint %65 %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %67
         %69 = OpBitwiseAnd %uint %65 %uint_15
         %70 = OpShiftRightLogical %uint %69 %uint_2
         %71 = OpLoad %v4uint %68 None
         %72 = OpVectorShuffle %v2uint %71 %71 2 3
         %73 = OpVectorShuffle %v2uint %71 %71 0 1
         %74 = OpIEqual %bool %70 %uint_2
         %75 = OpCompositeConstruct %v2bool %74 %74
         %76 = OpSelect %v2uint %75 %72 %73
         %77 = OpBitcast %v4half %76
         %78 = OpIAdd %uint %uint_16 %start_byte_offset
         %79 = OpUDiv %uint %78 %uint_16
         %80 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %79
         %81 = OpBitwiseAnd %uint %78 %uint_15
         %82 = OpShiftRightLogical %uint %81 %uint_2
         %83 = OpLoad %v4uint %80 None
         %84 = OpVectorShuffle %v2uint %83 %83 2 3
         %85 = OpVectorShuffle %v2uint %83 %83 0 1
         %86 = OpIEqual %bool %82 %uint_2
         %87 = OpCompositeConstruct %v2bool %86 %86
         %88 = OpSelect %v2uint %87 %84 %85
         %89 = OpBitcast %v4half %88
         %90 = OpCompositeConstruct %mat3v4half %64 %77 %89
               OpReturnValue %90
               OpFunctionEnd
         %29 = OpFunction %S None %92
%start_byte_offset_0 = OpFunctionParameter %uint
         %93 = OpLabel
         %94 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %95 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %94
         %96 = OpBitwiseAnd %uint %start_byte_offset_0 %uint_15
         %97 = OpShiftRightLogical %uint %96 %uint_2
         %98 = OpLoad %v4uint %95 None
         %99 = OpVectorExtractDynamic %uint %98 %97
        %100 = OpBitcast %int %99
        %101 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %102 = OpFunctionCall %mat3v4half %35 %101
        %103 = OpIAdd %uint %uint_64 %start_byte_offset_0
        %105 = OpUDiv %uint %103 %uint_16
        %106 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %105
        %107 = OpBitwiseAnd %uint %103 %uint_15
        %108 = OpShiftRightLogical %uint %107 %uint_2
        %109 = OpLoad %v4uint %106 None
        %110 = OpVectorExtractDynamic %uint %109 %108
        %111 = OpBitcast %int %110
        %112 = OpCompositeConstruct %S %100 %102 %111
               OpReturnValue %112
               OpFunctionEnd
         %23 = OpFunction %_arr_S_uint_4 None %114
%start_byte_offset_1 = OpFunctionParameter %uint
        %115 = OpLabel
          %a = OpVariable %_ptr_Function__arr_S_uint_4 Function
               OpStore %a %17
               OpBranch %118
        %118 = OpLabel
               OpBranch %121
        %121 = OpLabel
        %123 = OpPhi %uint %uint_0 %118 %124 %120
               OpLoopMerge %122 %120 None
               OpBranch %119
        %119 = OpLabel
        %126 = OpUGreaterThanEqual %bool %123 %uint_4
               OpSelectionMerge %127 None
               OpBranchConditional %126 %128 %127
        %128 = OpLabel
               OpBranch %122
        %127 = OpLabel
        %129 = OpIMul %uint %123 %uint_128
        %131 = OpIAdd %uint %start_byte_offset_1 %129
        %132 = OpAccessChain %_ptr_Function_S %a %123
        %134 = OpFunctionCall %S %29 %131
               OpStore %132 %134 None
               OpBranch %120
        %120 = OpLabel
        %124 = OpIAdd %uint %123 %uint_1
               OpBranch %121
        %122 = OpLabel
        %125 = OpLoad %_arr_S_uint_4 %a None
               OpReturnValue %125
               OpFunctionEnd
