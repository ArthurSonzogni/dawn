; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 88
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v2half = OpTypeVector %half 2
 %mat3v2half = OpTypeMatrix %v2half 3
%_ptr_Workgroup_mat3v2half = OpTypePointer Workgroup %mat3v2half
          %w = OpVariable %_ptr_Workgroup_mat3v2half Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %18 = OpTypeFunction %void %uint
       %bool = OpTypeBool
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_v2half = OpTypePointer Workgroup %v2half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
%_ptr_Workgroup_half = OpTypePointer Workgroup %half
         %51 = OpConstantNull %mat3v2half
         %53 = OpTypeFunction %mat3v2half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_4 = OpConstant %uint 4
     %uint_8 = OpConstant %uint 8
         %84 = OpTypeFunction %void
    %f_inner = OpFunction %void None %18
%tint_local_index = OpFunctionParameter %uint
         %19 = OpLabel
         %20 = OpULessThan %bool %tint_local_index %uint_1
               OpSelectionMerge %22 None
               OpBranchConditional %20 %23 %22
         %23 = OpLabel
               OpStore %w %51 None
               OpBranch %22
         %22 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %27 = OpFunctionCall %mat3v2half %28 %uint_0
               OpStore %w %27 None
         %30 = OpAccessChain %_ptr_Workgroup_v2half %w %uint_1
         %32 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %34 = OpLoad %v4uint %32 None
         %35 = OpCompositeExtract %uint %34 0
         %36 = OpBitcast %v2half %35
               OpStore %30 %36 None
         %37 = OpAccessChain %_ptr_Workgroup_v2half %w %uint_1
         %38 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %39 = OpLoad %v4uint %38 None
         %40 = OpCompositeExtract %uint %39 0
         %41 = OpBitcast %v2half %40
         %42 = OpVectorShuffle %v2half %41 %41 1 0
               OpStore %37 %42 None
         %43 = OpAccessChain %_ptr_Workgroup_v2half %w %uint_0
         %44 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %45 = OpLoad %v4uint %44 None
         %46 = OpCompositeExtract %uint %45 1
         %47 = OpBitcast %v2half %46
         %48 = OpCompositeExtract %half %47 0
         %49 = OpAccessChain %_ptr_Workgroup_half %43 %uint_1
               OpStore %49 %48 None
               OpReturn
               OpFunctionEnd
         %28 = OpFunction %mat3v2half None %53
%start_byte_offset = OpFunctionParameter %uint
         %54 = OpLabel
         %55 = OpUDiv %uint %start_byte_offset %uint_16
         %57 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %55
         %58 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %60 = OpShiftRightLogical %uint %58 %uint_2
         %61 = OpLoad %v4uint %57 None
         %62 = OpVectorExtractDynamic %uint %61 %60
         %63 = OpBitcast %v2half %62
         %64 = OpIAdd %uint %uint_4 %start_byte_offset
         %66 = OpUDiv %uint %64 %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %68 = OpBitwiseAnd %uint %64 %uint_15
         %69 = OpShiftRightLogical %uint %68 %uint_2
         %70 = OpLoad %v4uint %67 None
         %71 = OpVectorExtractDynamic %uint %70 %69
         %72 = OpBitcast %v2half %71
         %73 = OpIAdd %uint %uint_8 %start_byte_offset
         %75 = OpUDiv %uint %73 %uint_16
         %76 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %75
         %77 = OpBitwiseAnd %uint %73 %uint_15
         %78 = OpShiftRightLogical %uint %77 %uint_2
         %79 = OpLoad %v4uint %76 None
         %80 = OpVectorExtractDynamic %uint %79 %78
         %81 = OpBitcast %v2half %80
         %82 = OpCompositeConstruct %mat3v2half %63 %72 %81
               OpReturnValue %82
               OpFunctionEnd
          %f = OpFunction %void None %84
         %85 = OpLabel
         %86 = OpLoad %uint %f_local_invocation_index_Input None
         %87 = OpFunctionCall %void %f_inner %86
               OpReturn
               OpFunctionEnd
