; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 85
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpMemberDecorate %s_block 0 ColMajor
               OpMemberDecorate %s_block 0 MatrixStride 4
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v2half = OpTypeVector %half 2
 %mat4v2half = OpTypeMatrix %v2half 4
    %s_block = OpTypeStruct %mat4v2half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_StorageBuffer_mat4v2half = OpTypePointer StorageBuffer %mat4v2half
%_ptr_StorageBuffer_v2half = OpTypePointer StorageBuffer %v2half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %45 = OpTypeFunction %mat4v2half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
          %f = OpFunction %void None %16
         %17 = OpLabel
         %18 = OpFunctionCall %mat4v2half %19 %uint_0
         %21 = OpAccessChain %_ptr_StorageBuffer_mat4v2half %8 %uint_0
               OpStore %21 %18 None
         %23 = OpAccessChain %_ptr_StorageBuffer_v2half %8 %uint_0 %uint_1
         %25 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %27 = OpLoad %v4uint %25 None
         %28 = OpCompositeExtract %uint %27 0
         %29 = OpBitcast %v2half %28
               OpStore %23 %29 None
         %30 = OpAccessChain %_ptr_StorageBuffer_v2half %8 %uint_0 %uint_1
         %31 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %32 = OpLoad %v4uint %31 None
         %33 = OpCompositeExtract %uint %32 0
         %34 = OpBitcast %v2half %33
         %35 = OpVectorShuffle %v2half %34 %34 1 0
               OpStore %30 %35 None
         %36 = OpAccessChain %_ptr_StorageBuffer_v2half %8 %uint_0 %uint_0
         %37 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %38 = OpLoad %v4uint %37 None
         %39 = OpCompositeExtract %uint %38 1
         %40 = OpBitcast %v2half %39
         %41 = OpCompositeExtract %half %40 0
         %42 = OpAccessChain %_ptr_StorageBuffer_half %36 %uint_1
               OpStore %42 %41 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat4v2half None %45
%start_byte_offset = OpFunctionParameter %uint
         %46 = OpLabel
         %47 = OpUDiv %uint %start_byte_offset %uint_16
         %49 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %47
         %50 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %52 = OpShiftRightLogical %uint %50 %uint_2
         %54 = OpLoad %v4uint %49 None
         %55 = OpVectorExtractDynamic %uint %54 %52
         %56 = OpBitcast %v2half %55
         %57 = OpIAdd %uint %uint_4 %start_byte_offset
         %59 = OpUDiv %uint %57 %uint_16
         %60 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %59
         %61 = OpBitwiseAnd %uint %57 %uint_15
         %62 = OpShiftRightLogical %uint %61 %uint_2
         %63 = OpLoad %v4uint %60 None
         %64 = OpVectorExtractDynamic %uint %63 %62
         %65 = OpBitcast %v2half %64
         %66 = OpIAdd %uint %uint_8 %start_byte_offset
         %68 = OpUDiv %uint %66 %uint_16
         %69 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %68
         %70 = OpBitwiseAnd %uint %66 %uint_15
         %71 = OpShiftRightLogical %uint %70 %uint_2
         %72 = OpLoad %v4uint %69 None
         %73 = OpVectorExtractDynamic %uint %72 %71
         %74 = OpBitcast %v2half %73
         %75 = OpIAdd %uint %uint_12 %start_byte_offset
         %77 = OpUDiv %uint %75 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpBitwiseAnd %uint %75 %uint_15
         %80 = OpShiftRightLogical %uint %79 %uint_2
         %81 = OpLoad %v4uint %78 None
         %82 = OpVectorExtractDynamic %uint %81 %80
         %83 = OpBitcast %v2half %82
         %84 = OpCompositeConstruct %mat4v2half %56 %65 %74 %83
               OpReturnValue %84
               OpFunctionEnd
