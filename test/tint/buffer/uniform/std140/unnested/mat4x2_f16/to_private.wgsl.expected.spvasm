; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 83
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v2half = OpTypeVector %half 2
 %mat4v2half = OpTypeMatrix %v2half 4
%_ptr_Private_mat4v2half = OpTypePointer Private %mat4v2half
         %13 = OpConstantNull %mat4v2half
          %p = OpVariable %_ptr_Private_mat4v2half Private %13
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_v2half = OpTypePointer Private %v2half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
%_ptr_Private_half = OpTypePointer Private %half
         %43 = OpTypeFunction %mat4v2half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_4 = OpConstant %uint 4
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
          %f = OpFunction %void None %16
         %17 = OpLabel
         %18 = OpFunctionCall %mat4v2half %19 %uint_0
               OpStore %p %18 None
         %21 = OpAccessChain %_ptr_Private_v2half %p %uint_1
         %23 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %25 = OpLoad %v4uint %23 None
         %26 = OpCompositeExtract %uint %25 0
         %27 = OpBitcast %v2half %26
               OpStore %21 %27 None
         %28 = OpAccessChain %_ptr_Private_v2half %p %uint_1
         %29 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %30 = OpLoad %v4uint %29 None
         %31 = OpCompositeExtract %uint %30 0
         %32 = OpBitcast %v2half %31
         %33 = OpVectorShuffle %v2half %32 %32 1 0
               OpStore %28 %33 None
         %34 = OpAccessChain %_ptr_Private_v2half %p %uint_0
         %35 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %36 = OpLoad %v4uint %35 None
         %37 = OpCompositeExtract %uint %36 1
         %38 = OpBitcast %v2half %37
         %39 = OpCompositeExtract %half %38 0
         %40 = OpAccessChain %_ptr_Private_half %34 %uint_1
               OpStore %40 %39 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat4v2half None %43
%start_byte_offset = OpFunctionParameter %uint
         %44 = OpLabel
         %45 = OpUDiv %uint %start_byte_offset %uint_16
         %47 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %45
         %48 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %50 = OpShiftRightLogical %uint %48 %uint_2
         %52 = OpLoad %v4uint %47 None
         %53 = OpVectorExtractDynamic %uint %52 %50
         %54 = OpBitcast %v2half %53
         %55 = OpIAdd %uint %uint_4 %start_byte_offset
         %57 = OpUDiv %uint %55 %uint_16
         %58 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %57
         %59 = OpBitwiseAnd %uint %55 %uint_15
         %60 = OpShiftRightLogical %uint %59 %uint_2
         %61 = OpLoad %v4uint %58 None
         %62 = OpVectorExtractDynamic %uint %61 %60
         %63 = OpBitcast %v2half %62
         %64 = OpIAdd %uint %uint_8 %start_byte_offset
         %66 = OpUDiv %uint %64 %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %68 = OpBitwiseAnd %uint %64 %uint_15
         %69 = OpShiftRightLogical %uint %68 %uint_2
         %70 = OpLoad %v4uint %67 None
         %71 = OpVectorExtractDynamic %uint %70 %69
         %72 = OpBitcast %v2half %71
         %73 = OpIAdd %uint %uint_12 %start_byte_offset
         %75 = OpUDiv %uint %73 %uint_16
         %76 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %75
         %77 = OpBitwiseAnd %uint %73 %uint_15
         %78 = OpShiftRightLogical %uint %77 %uint_2
         %79 = OpLoad %v4uint %76 None
         %80 = OpVectorExtractDynamic %uint %79 %78
         %81 = OpBitcast %v2half %80
         %82 = OpCompositeConstruct %mat4v2half %54 %63 %72 %81
               OpReturnValue %82
               OpFunctionEnd
