; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 91
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %26 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %f "f"
               OpName %t "t"
               OpName %l "l"
               OpName %a "a"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_2 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_2 = OpConstant %uint 2
%_arr_v4uint_uint_2 = OpTypeArray %v4uint %uint_2
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_2
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
         %10 = OpTypeFunction %void
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat4v4half = OpTypeMatrix %v4half 4
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
         %35 = OpTypeFunction %mat4v4half %uint
    %uint_16 = OpConstant %uint 16
     %uint_4 = OpConstant %uint 4
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
    %uint_24 = OpConstant %uint 24
          %f = OpFunction %void None %10
         %11 = OpLabel
         %12 = OpFunctionCall %mat4v4half %16 %uint_0
          %t = OpTranspose %mat4v4half %12
         %19 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %21 = OpLoad %v4uint %19 None
         %22 = OpVectorShuffle %v2uint %21 %21 2 3
         %24 = OpBitcast %v4half %22
          %l = OpExtInst %half %26 Length %24
         %27 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %28 = OpLoad %v4uint %27 None
         %29 = OpVectorShuffle %v2uint %28 %28 0 1
         %30 = OpBitcast %v4half %29
         %31 = OpVectorShuffle %v4half %30 %30 1 3 0 2
         %32 = OpCompositeExtract %half %31 0
          %a = OpExtInst %half %26 FAbs %32
               OpReturn
               OpFunctionEnd
         %16 = OpFunction %mat4v4half None %35
%start_byte_offset = OpFunctionParameter %uint
         %36 = OpLabel
         %37 = OpUDiv %uint %start_byte_offset %uint_16
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %37
         %40 = OpUMod %uint %start_byte_offset %uint_16
         %41 = OpUDiv %uint %40 %uint_4
         %43 = OpLoad %v4uint %39 None
         %44 = OpVectorShuffle %v2uint %43 %43 2 3
         %45 = OpVectorShuffle %v2uint %43 %43 0 1
         %46 = OpIEqual %bool %41 %uint_2
         %49 = OpCompositeConstruct %v2bool %46 %46
         %50 = OpSelect %v2uint %49 %44 %45
         %51 = OpBitcast %v4half %50
         %52 = OpIAdd %uint %uint_8 %start_byte_offset
         %54 = OpUDiv %uint %52 %uint_16
         %55 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %54
         %56 = OpUMod %uint %52 %uint_16
         %57 = OpUDiv %uint %56 %uint_4
         %58 = OpLoad %v4uint %55 None
         %59 = OpVectorShuffle %v2uint %58 %58 2 3
         %60 = OpVectorShuffle %v2uint %58 %58 0 1
         %61 = OpIEqual %bool %57 %uint_2
         %62 = OpCompositeConstruct %v2bool %61 %61
         %63 = OpSelect %v2uint %62 %59 %60
         %64 = OpBitcast %v4half %63
         %65 = OpIAdd %uint %uint_16 %start_byte_offset
         %66 = OpUDiv %uint %65 %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %68 = OpUMod %uint %65 %uint_16
         %69 = OpUDiv %uint %68 %uint_4
         %70 = OpLoad %v4uint %67 None
         %71 = OpVectorShuffle %v2uint %70 %70 2 3
         %72 = OpVectorShuffle %v2uint %70 %70 0 1
         %73 = OpIEqual %bool %69 %uint_2
         %74 = OpCompositeConstruct %v2bool %73 %73
         %75 = OpSelect %v2uint %74 %71 %72
         %76 = OpBitcast %v4half %75
         %77 = OpIAdd %uint %uint_24 %start_byte_offset
         %79 = OpUDiv %uint %77 %uint_16
         %80 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %79
         %81 = OpUMod %uint %77 %uint_16
         %82 = OpUDiv %uint %81 %uint_4
         %83 = OpLoad %v4uint %80 None
         %84 = OpVectorShuffle %v2uint %83 %83 2 3
         %85 = OpVectorShuffle %v2uint %83 %83 0 1
         %86 = OpIEqual %bool %82 %uint_2
         %87 = OpCompositeConstruct %v2bool %86 %86
         %88 = OpSelect %v2uint %87 %84 %85
         %89 = OpBitcast %v4half %88
         %90 = OpCompositeConstruct %mat4v4half %51 %64 %76 %89
               OpReturnValue %90
               OpFunctionEnd
