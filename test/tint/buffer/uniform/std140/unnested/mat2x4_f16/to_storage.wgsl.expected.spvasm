; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 79
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpMemberDecorate %s_block 0 ColMajor
               OpMemberDecorate %s_block 0 MatrixStride 8
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat2v4half = OpTypeMatrix %v4half 2
    %s_block = OpTypeStruct %mat2v4half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_StorageBuffer_mat2v4half = OpTypePointer StorageBuffer %mat2v4half
%_ptr_StorageBuffer_v4half = OpTypePointer StorageBuffer %v4half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v2half = OpTypeVector %half 2
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %47 = OpTypeFunction %mat2v4half %uint
    %uint_16 = OpConstant %uint 16
     %uint_4 = OpConstant %uint 4
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %f = OpFunction %void None %16
         %17 = OpLabel
         %18 = OpFunctionCall %mat2v4half %19 %uint_0
         %21 = OpAccessChain %_ptr_StorageBuffer_mat2v4half %8 %uint_0
               OpStore %21 %18 None
         %23 = OpAccessChain %_ptr_StorageBuffer_v4half %8 %uint_0 %uint_1
         %25 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %27 = OpLoad %v4uint %25 None
         %28 = OpVectorShuffle %v2uint %27 %27 0 1
         %30 = OpBitcast %v4half %28
               OpStore %23 %30 None
         %31 = OpAccessChain %_ptr_StorageBuffer_v4half %8 %uint_0 %uint_1
         %32 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %33 = OpLoad %v4uint %32 None
         %34 = OpVectorShuffle %v2uint %33 %33 0 1
         %35 = OpBitcast %v4half %34
         %36 = OpVectorShuffle %v4half %35 %35 1 3 0 2
               OpStore %31 %36 None
         %37 = OpAccessChain %_ptr_StorageBuffer_v4half %8 %uint_0 %uint_0
         %38 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %39 = OpLoad %v4uint %38 None
         %40 = OpCompositeExtract %uint %39 2
         %42 = OpBitcast %v2half %40
         %43 = OpCompositeExtract %half %42 0
         %44 = OpAccessChain %_ptr_StorageBuffer_half %37 %uint_1
               OpStore %44 %43 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat2v4half None %47
%start_byte_offset = OpFunctionParameter %uint
         %48 = OpLabel
         %49 = OpUDiv %uint %start_byte_offset %uint_16
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %49
         %52 = OpUMod %uint %start_byte_offset %uint_16
         %53 = OpUDiv %uint %52 %uint_4
         %55 = OpLoad %v4uint %51 None
         %56 = OpVectorShuffle %v2uint %55 %55 2 3
         %57 = OpVectorShuffle %v2uint %55 %55 0 1
         %58 = OpIEqual %bool %53 %uint_2
         %62 = OpCompositeConstruct %v2bool %58 %58
         %63 = OpSelect %v2uint %62 %56 %57
         %64 = OpBitcast %v4half %63
         %65 = OpIAdd %uint %uint_8 %start_byte_offset
         %67 = OpUDiv %uint %65 %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %67
         %69 = OpUMod %uint %65 %uint_16
         %70 = OpUDiv %uint %69 %uint_4
         %71 = OpLoad %v4uint %68 None
         %72 = OpVectorShuffle %v2uint %71 %71 2 3
         %73 = OpVectorShuffle %v2uint %71 %71 0 1
         %74 = OpIEqual %bool %70 %uint_2
         %75 = OpCompositeConstruct %v2bool %74 %74
         %76 = OpSelect %v2uint %75 %72 %73
         %77 = OpBitcast %v4half %76
         %78 = OpCompositeConstruct %mat2v4half %64 %77
               OpReturnValue %78
               OpFunctionEnd
