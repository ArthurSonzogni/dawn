; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 123
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %tint_store_and_preserve_padding "tint_store_and_preserve_padding"
               OpName %value_param "value_param"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_2 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpMemberDecorate %s_block 0 ColMajor
               OpMemberDecorate %s_block 0 MatrixStride 8
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_2 = OpConstant %uint 2
%_arr_v4uint_uint_2 = OpTypeArray %v4uint %uint_2
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_2
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat4v3half = OpTypeMatrix %v3half 4
    %s_block = OpTypeStruct %mat4v3half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_StorageBuffer_v3half = OpTypePointer StorageBuffer %v3half
     %uint_1 = OpConstant %uint 1
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
     %v2half = OpTypeVector %half 2
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %51 = OpTypeFunction %void %mat4v3half
     %uint_3 = OpConstant %uint 3
         %63 = OpTypeFunction %mat4v3half %uint
    %uint_16 = OpConstant %uint 16
     %uint_4 = OpConstant %uint 4
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
    %uint_24 = OpConstant %uint 24
          %f = OpFunction %void None %16
         %17 = OpLabel
         %18 = OpFunctionCall %mat4v3half %19 %uint_0
         %21 = OpFunctionCall %void %tint_store_and_preserve_padding %18
         %23 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_1
         %26 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %28 = OpLoad %v4uint %26 None
         %29 = OpVectorShuffle %v2uint %28 %28 0 1
         %32 = OpBitcast %v4half %29
         %33 = OpVectorShuffle %v3half %32 %32 0 1 2
               OpStore %23 %33 None
         %34 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_1
         %35 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %36 = OpLoad %v4uint %35 None
         %37 = OpVectorShuffle %v2uint %36 %36 0 1
         %38 = OpBitcast %v4half %37
         %39 = OpVectorShuffle %v3half %38 %38 0 1 2
         %40 = OpVectorShuffle %v3half %39 %39 2 0 1
               OpStore %34 %40 None
         %41 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_0
         %42 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %43 = OpLoad %v4uint %42 None
         %44 = OpCompositeExtract %uint %43 2
         %46 = OpBitcast %v2half %44
         %47 = OpCompositeExtract %half %46 0
         %48 = OpAccessChain %_ptr_StorageBuffer_half %41 %uint_1
               OpStore %48 %47 None
               OpReturn
               OpFunctionEnd
%tint_store_and_preserve_padding = OpFunction %void None %51
%value_param = OpFunctionParameter %mat4v3half
         %52 = OpLabel
         %53 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_0
         %54 = OpCompositeExtract %v3half %value_param 0
               OpStore %53 %54 None
         %55 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_1
         %56 = OpCompositeExtract %v3half %value_param 1
               OpStore %55 %56 None
         %57 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_2
         %58 = OpCompositeExtract %v3half %value_param 2
               OpStore %57 %58 None
         %59 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_3
         %61 = OpCompositeExtract %v3half %value_param 3
               OpStore %59 %61 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat4v3half None %63
%start_byte_offset = OpFunctionParameter %uint
         %64 = OpLabel
         %65 = OpUDiv %uint %start_byte_offset %uint_16
         %67 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %65
         %68 = OpUMod %uint %start_byte_offset %uint_16
         %69 = OpUDiv %uint %68 %uint_4
         %71 = OpLoad %v4uint %67 None
         %72 = OpVectorShuffle %v2uint %71 %71 2 3
         %73 = OpVectorShuffle %v2uint %71 %71 0 1
         %74 = OpIEqual %bool %69 %uint_2
         %77 = OpCompositeConstruct %v2bool %74 %74
         %78 = OpSelect %v2uint %77 %72 %73
         %79 = OpBitcast %v4half %78
         %80 = OpVectorShuffle %v3half %79 %79 0 1 2
         %81 = OpIAdd %uint %uint_8 %start_byte_offset
         %83 = OpUDiv %uint %81 %uint_16
         %84 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %83
         %85 = OpUMod %uint %81 %uint_16
         %86 = OpUDiv %uint %85 %uint_4
         %87 = OpLoad %v4uint %84 None
         %88 = OpVectorShuffle %v2uint %87 %87 2 3
         %89 = OpVectorShuffle %v2uint %87 %87 0 1
         %90 = OpIEqual %bool %86 %uint_2
         %91 = OpCompositeConstruct %v2bool %90 %90
         %92 = OpSelect %v2uint %91 %88 %89
         %93 = OpBitcast %v4half %92
         %94 = OpVectorShuffle %v3half %93 %93 0 1 2
         %95 = OpIAdd %uint %uint_16 %start_byte_offset
         %96 = OpUDiv %uint %95 %uint_16
         %97 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %96
         %98 = OpUMod %uint %95 %uint_16
         %99 = OpUDiv %uint %98 %uint_4
        %100 = OpLoad %v4uint %97 None
        %101 = OpVectorShuffle %v2uint %100 %100 2 3
        %102 = OpVectorShuffle %v2uint %100 %100 0 1
        %103 = OpIEqual %bool %99 %uint_2
        %104 = OpCompositeConstruct %v2bool %103 %103
        %105 = OpSelect %v2uint %104 %101 %102
        %106 = OpBitcast %v4half %105
        %107 = OpVectorShuffle %v3half %106 %106 0 1 2
        %108 = OpIAdd %uint %uint_24 %start_byte_offset
        %110 = OpUDiv %uint %108 %uint_16
        %111 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %110
        %112 = OpUMod %uint %108 %uint_16
        %113 = OpUDiv %uint %112 %uint_4
        %114 = OpLoad %v4uint %111 None
        %115 = OpVectorShuffle %v2uint %114 %114 2 3
        %116 = OpVectorShuffle %v2uint %114 %114 0 1
        %117 = OpIEqual %bool %113 %uint_2
        %118 = OpCompositeConstruct %v2bool %117 %117
        %119 = OpSelect %v2uint %118 %115 %116
        %120 = OpBitcast %v4half %119
        %121 = OpVectorShuffle %v3half %120 %120 0 1 2
        %122 = OpCompositeConstruct %mat4v3half %80 %94 %107 %121
               OpReturnValue %122
               OpFunctionEnd
