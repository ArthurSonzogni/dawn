; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 66
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
%_ptr_Private_mat4v4float = OpTypePointer Private %mat4v4float
         %13 = OpConstantNull %mat4v4float
          %p = OpVariable %_ptr_Private_mat4v4float Private %13
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_v4float = OpTypePointer Private %v4float
     %uint_1 = OpConstant %uint 1
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
%_ptr_Private_float = OpTypePointer Private %float
         %41 = OpTypeFunction %mat4v4float %uint
    %uint_16 = OpConstant %uint 16
    %uint_32 = OpConstant %uint 32
    %uint_48 = OpConstant %uint 48
          %f = OpFunction %void None %16
         %17 = OpLabel
         %18 = OpFunctionCall %mat4v4float %19 %uint_0
               OpStore %p %18 None
         %21 = OpAccessChain %_ptr_Private_v4float %p %uint_1
         %24 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %26 = OpLoad %v4uint %24 None
         %27 = OpBitcast %v4float %26
               OpStore %21 %27 None
         %28 = OpAccessChain %_ptr_Private_v4float %p %uint_1
         %29 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %30 = OpLoad %v4uint %29 None
         %31 = OpBitcast %v4float %30
         %32 = OpVectorShuffle %v4float %31 %31 1 3 0 2
               OpStore %28 %32 None
         %33 = OpAccessChain %_ptr_Private_v4float %p %uint_0
         %34 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %35 = OpLoad %v4uint %34 None
         %36 = OpCompositeExtract %uint %35 0
         %37 = OpBitcast %float %36
         %38 = OpAccessChain %_ptr_Private_float %33 %uint_1
               OpStore %38 %37 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat4v4float None %41
%start_byte_offset = OpFunctionParameter %uint
         %42 = OpLabel
         %43 = OpUDiv %uint %start_byte_offset %uint_16
         %45 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %43
         %46 = OpLoad %v4uint %45 None
         %47 = OpBitcast %v4float %46
         %48 = OpIAdd %uint %uint_16 %start_byte_offset
         %49 = OpUDiv %uint %48 %uint_16
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %49
         %51 = OpLoad %v4uint %50 None
         %52 = OpBitcast %v4float %51
         %53 = OpIAdd %uint %uint_32 %start_byte_offset
         %55 = OpUDiv %uint %53 %uint_16
         %56 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %55
         %57 = OpLoad %v4uint %56 None
         %58 = OpBitcast %v4float %57
         %59 = OpIAdd %uint %uint_48 %start_byte_offset
         %61 = OpUDiv %uint %59 %uint_16
         %62 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %61
         %63 = OpLoad %v4uint %62 None
         %64 = OpBitcast %v4float %63
         %65 = OpCompositeConstruct %mat4v4float %47 %52 %58 %64
               OpReturnValue %65
               OpFunctionEnd
