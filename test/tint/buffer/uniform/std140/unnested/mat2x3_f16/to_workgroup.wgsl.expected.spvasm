; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 95
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat2v3half = OpTypeMatrix %v3half 2
%_ptr_Workgroup_mat2v3half = OpTypePointer Workgroup %mat2v3half
          %w = OpVariable %_ptr_Workgroup_mat2v3half Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %18 = OpTypeFunction %void %uint
       %bool = OpTypeBool
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_v3half = OpTypePointer Workgroup %v3half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
     %v2half = OpTypeVector %half 2
%_ptr_Workgroup_half = OpTypePointer Workgroup %half
         %56 = OpConstantNull %mat2v3half
         %58 = OpTypeFunction %mat2v3half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
         %91 = OpTypeFunction %void
    %f_inner = OpFunction %void None %18
%tint_local_index = OpFunctionParameter %uint
         %19 = OpLabel
         %20 = OpULessThan %bool %tint_local_index %uint_1
               OpSelectionMerge %22 None
               OpBranchConditional %20 %23 %22
         %23 = OpLabel
               OpStore %w %56 None
               OpBranch %22
         %22 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %27 = OpFunctionCall %mat2v3half %28 %uint_0
               OpStore %w %27 None
         %30 = OpAccessChain %_ptr_Workgroup_v3half %w %uint_1
         %32 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %34 = OpLoad %v4uint %32 None
         %35 = OpVectorShuffle %v2uint %34 %34 0 1
         %38 = OpBitcast %v4half %35
         %39 = OpVectorShuffle %v3half %38 %38 0 1 2
               OpStore %30 %39 None
         %40 = OpAccessChain %_ptr_Workgroup_v3half %w %uint_1
         %41 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %42 = OpLoad %v4uint %41 None
         %43 = OpVectorShuffle %v2uint %42 %42 0 1
         %44 = OpBitcast %v4half %43
         %45 = OpVectorShuffle %v3half %44 %44 0 1 2
         %46 = OpVectorShuffle %v3half %45 %45 2 0 1
               OpStore %40 %46 None
         %47 = OpAccessChain %_ptr_Workgroup_v3half %w %uint_0
         %48 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %49 = OpLoad %v4uint %48 None
         %50 = OpCompositeExtract %uint %49 2
         %52 = OpBitcast %v2half %50
         %53 = OpCompositeExtract %half %52 0
         %54 = OpAccessChain %_ptr_Workgroup_half %47 %uint_1
               OpStore %54 %53 None
               OpReturn
               OpFunctionEnd
         %28 = OpFunction %mat2v3half None %58
%start_byte_offset = OpFunctionParameter %uint
         %59 = OpLabel
         %60 = OpUDiv %uint %start_byte_offset %uint_16
         %62 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %60
         %63 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %65 = OpShiftRightLogical %uint %63 %uint_2
         %66 = OpLoad %v4uint %62 None
         %67 = OpVectorShuffle %v2uint %66 %66 2 3
         %68 = OpVectorShuffle %v2uint %66 %66 0 1
         %69 = OpIEqual %bool %65 %uint_2
         %71 = OpCompositeConstruct %v2bool %69 %69
         %72 = OpSelect %v2uint %71 %67 %68
         %73 = OpBitcast %v4half %72
         %74 = OpVectorShuffle %v3half %73 %73 0 1 2
         %75 = OpIAdd %uint %uint_8 %start_byte_offset
         %77 = OpUDiv %uint %75 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpBitwiseAnd %uint %75 %uint_15
         %80 = OpShiftRightLogical %uint %79 %uint_2
         %81 = OpLoad %v4uint %78 None
         %82 = OpVectorShuffle %v2uint %81 %81 2 3
         %83 = OpVectorShuffle %v2uint %81 %81 0 1
         %84 = OpIEqual %bool %80 %uint_2
         %85 = OpCompositeConstruct %v2bool %84 %84
         %86 = OpSelect %v2uint %85 %82 %83
         %87 = OpBitcast %v4half %86
         %88 = OpVectorShuffle %v3half %87 %87 0 1 2
         %89 = OpCompositeConstruct %mat2v3half %74 %88
               OpReturnValue %89
               OpFunctionEnd
          %f = OpFunction %void None %91
         %92 = OpLabel
         %93 = OpLoad %uint %f_local_invocation_index_Input None
         %94 = OpFunctionCall %void %f_inner %93
               OpReturn
               OpFunctionEnd
