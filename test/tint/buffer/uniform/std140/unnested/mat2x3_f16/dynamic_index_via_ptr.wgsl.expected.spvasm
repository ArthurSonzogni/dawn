; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 87
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %29 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %m_block_tint_explicit_layout 0 "inner"
               OpName %m_block_tint_explicit_layout "m_block_tint_explicit_layout"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpName %l_m "l_m"
               OpName %l_m_i "l_m_i"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %m_block_tint_explicit_layout 0 Offset 0
               OpDecorate %m_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%m_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_m_block_tint_explicit_layout = OpTypePointer Uniform %m_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_m_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %13 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %24 = OpTypeFunction %void
     %uint_8 = OpConstant %uint 8
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat2v3half = OpTypeMatrix %v3half 2
     %uint_0 = OpConstant %uint 0
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %v4half = OpTypeVector %half 4
         %59 = OpTypeFunction %mat2v3half %uint
          %i = OpFunction %int None %13
         %14 = OpLabel
         %15 = OpLoad %int %counter None
         %16 = OpBitcast %uint %15
         %17 = OpBitcast %uint %int_1
         %19 = OpIAdd %uint %16 %17
         %20 = OpBitcast %int %19
               OpStore %counter %20 None
         %21 = OpLoad %int %counter None
               OpReturnValue %21
               OpFunctionEnd
          %f = OpFunction %void None %24
         %25 = OpLabel
         %26 = OpFunctionCall %int %i
         %27 = OpBitcast %uint %26
         %28 = OpExtInst %uint %29 UMin %27 %uint_1
         %30 = OpIMul %uint %uint_8 %28
        %l_m = OpFunctionCall %mat2v3half %36 %uint_0
         %38 = OpUDiv %uint %30 %uint_16
         %40 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %38
         %42 = OpBitwiseAnd %uint %30 %uint_15
         %44 = OpShiftRightLogical %uint %42 %uint_2
         %46 = OpLoad %v4uint %40 None
         %47 = OpVectorShuffle %v2uint %46 %46 2 3
         %49 = OpVectorShuffle %v2uint %46 %46 0 1
         %50 = OpIEqual %bool %44 %uint_2
         %53 = OpCompositeConstruct %v2bool %50 %50
         %54 = OpSelect %v2uint %53 %47 %49
         %56 = OpBitcast %v4half %54
      %l_m_i = OpVectorShuffle %v3half %56 %56 0 1 2
               OpReturn
               OpFunctionEnd
         %36 = OpFunction %mat2v3half None %59
%start_byte_offset = OpFunctionParameter %uint
         %60 = OpLabel
         %61 = OpUDiv %uint %start_byte_offset %uint_16
         %62 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %61
         %63 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %64 = OpShiftRightLogical %uint %63 %uint_2
         %65 = OpLoad %v4uint %62 None
         %66 = OpVectorShuffle %v2uint %65 %65 2 3
         %67 = OpVectorShuffle %v2uint %65 %65 0 1
         %68 = OpIEqual %bool %64 %uint_2
         %69 = OpCompositeConstruct %v2bool %68 %68
         %70 = OpSelect %v2uint %69 %66 %67
         %71 = OpBitcast %v4half %70
         %72 = OpVectorShuffle %v3half %71 %71 0 1 2
         %73 = OpIAdd %uint %uint_8 %start_byte_offset
         %74 = OpUDiv %uint %73 %uint_16
         %75 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %74
         %76 = OpBitwiseAnd %uint %73 %uint_15
         %77 = OpShiftRightLogical %uint %76 %uint_2
         %78 = OpLoad %v4uint %75 None
         %79 = OpVectorShuffle %v2uint %78 %78 2 3
         %80 = OpVectorShuffle %v2uint %78 %78 0 1
         %81 = OpIEqual %bool %77 %uint_2
         %82 = OpCompositeConstruct %v2bool %81 %81
         %83 = OpSelect %v2uint %82 %79 %80
         %84 = OpBitcast %v4half %83
         %85 = OpVectorShuffle %v3half %84 %84 0 1 2
         %86 = OpCompositeConstruct %mat2v3half %72 %85
               OpReturnValue %86
               OpFunctionEnd
