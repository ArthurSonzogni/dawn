; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 89
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %a "a"
               OpName %m "m"
               OpName %b "b"
               OpName %v "v"
               OpName %c "c"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %void = OpTypeVoid
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat2v2float = OpTypeMatrix %v2float 2
         %14 = OpTypeFunction %void %mat2v2float
         %18 = OpTypeFunction %void %v2float
         %22 = OpTypeFunction %void %float
         %25 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
         %57 = OpTypeFunction %mat2v2float %uint
    %uint_16 = OpConstant %uint 16
     %uint_4 = OpConstant %uint 4
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %a = OpFunction %void None %14
          %m = OpFunctionParameter %mat2v2float
         %15 = OpLabel
               OpReturn
               OpFunctionEnd
          %b = OpFunction %void None %18
          %v = OpFunctionParameter %v2float
         %19 = OpLabel
               OpReturn
               OpFunctionEnd
          %c = OpFunction %void None %22
          %f = OpFunctionParameter %float
         %23 = OpLabel
               OpReturn
               OpFunctionEnd
        %f_0 = OpFunction %void None %25
         %26 = OpLabel
         %27 = OpFunctionCall %mat2v2float %28 %uint_0
         %30 = OpFunctionCall %void %a %27
         %31 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %33 = OpLoad %v4uint %31 None
         %34 = OpVectorShuffle %v2uint %33 %33 2 3
         %36 = OpBitcast %v2float %34
         %37 = OpFunctionCall %void %b %36
         %38 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %39 = OpLoad %v4uint %38 None
         %40 = OpVectorShuffle %v2uint %39 %39 2 3
         %41 = OpBitcast %v2float %40
         %42 = OpVectorShuffle %v2float %41 %41 1 0
         %43 = OpFunctionCall %void %b %42
         %44 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %45 = OpLoad %v4uint %44 None
         %46 = OpCompositeExtract %uint %45 2
         %47 = OpBitcast %float %46
         %48 = OpFunctionCall %void %c %47
         %49 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %50 = OpLoad %v4uint %49 None
         %51 = OpVectorShuffle %v2uint %50 %50 2 3
         %52 = OpBitcast %v2float %51
         %53 = OpVectorShuffle %v2float %52 %52 1 0
         %54 = OpCompositeExtract %float %53 0
         %55 = OpFunctionCall %void %c %54
               OpReturn
               OpFunctionEnd
         %28 = OpFunction %mat2v2float None %57
%start_byte_offset = OpFunctionParameter %uint
         %58 = OpLabel
         %59 = OpUDiv %uint %start_byte_offset %uint_16
         %61 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %59
         %62 = OpUMod %uint %start_byte_offset %uint_16
         %63 = OpUDiv %uint %62 %uint_4
         %65 = OpLoad %v4uint %61 None
         %66 = OpVectorShuffle %v2uint %65 %65 2 3
         %67 = OpVectorShuffle %v2uint %65 %65 0 1
         %68 = OpIEqual %bool %63 %uint_2
         %72 = OpCompositeConstruct %v2bool %68 %68
         %73 = OpSelect %v2uint %72 %66 %67
         %74 = OpBitcast %v2float %73
         %75 = OpIAdd %uint %uint_8 %start_byte_offset
         %77 = OpUDiv %uint %75 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpUMod %uint %75 %uint_16
         %80 = OpUDiv %uint %79 %uint_4
         %81 = OpLoad %v4uint %78 None
         %82 = OpVectorShuffle %v2uint %81 %81 2 3
         %83 = OpVectorShuffle %v2uint %81 %81 0 1
         %84 = OpIEqual %bool %80 %uint_2
         %85 = OpCompositeConstruct %v2bool %84 %84
         %86 = OpSelect %v2uint %85 %82 %83
         %87 = OpBitcast %v2float %86
         %88 = OpCompositeConstruct %mat2v2float %74 %87
               OpReturnValue %88
               OpFunctionEnd
