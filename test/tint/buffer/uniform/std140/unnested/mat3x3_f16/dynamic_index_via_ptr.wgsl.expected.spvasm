; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 99
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
         %29 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %m_block_tint_explicit_layout 0 "inner"
               OpName %m_block_tint_explicit_layout "m_block_tint_explicit_layout"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpName %l_m "l_m"
               OpName %l_m_i "l_m_i"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_2 ArrayStride 16
               OpMemberDecorate %m_block_tint_explicit_layout 0 Offset 0
               OpDecorate %m_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_2 = OpConstant %uint 2
%_arr_v4uint_uint_2 = OpTypeArray %v4uint %uint_2
%m_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_2
%_ptr_Uniform_m_block_tint_explicit_layout = OpTypePointer Uniform %m_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_m_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %13 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %24 = OpTypeFunction %void
     %uint_8 = OpConstant %uint 8
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat3v3half = OpTypeMatrix %v3half 3
     %uint_0 = OpConstant %uint 0
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_4 = OpConstant %uint 4
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %v4half = OpTypeVector %half 4
         %58 = OpTypeFunction %mat3v3half %uint
          %i = OpFunction %int None %13
         %14 = OpLabel
         %15 = OpLoad %int %counter None
         %16 = OpBitcast %uint %15
         %17 = OpBitcast %uint %int_1
         %19 = OpIAdd %uint %16 %17
         %20 = OpBitcast %int %19
               OpStore %counter %20 None
         %21 = OpLoad %int %counter None
               OpReturnValue %21
               OpFunctionEnd
          %f = OpFunction %void None %24
         %25 = OpLabel
         %26 = OpFunctionCall %int %i
         %27 = OpBitcast %uint %26
         %28 = OpExtInst %uint %29 UMin %27 %uint_2
         %30 = OpIMul %uint %uint_8 %28
        %l_m = OpFunctionCall %mat3v3half %36 %uint_0
         %38 = OpUDiv %uint %30 %uint_16
         %40 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %38
         %42 = OpUMod %uint %30 %uint_16
         %43 = OpUDiv %uint %42 %uint_4
         %45 = OpLoad %v4uint %40 None
         %46 = OpVectorShuffle %v2uint %45 %45 2 3
         %48 = OpVectorShuffle %v2uint %45 %45 0 1
         %49 = OpIEqual %bool %43 %uint_2
         %52 = OpCompositeConstruct %v2bool %49 %49
         %53 = OpSelect %v2uint %52 %46 %48
         %55 = OpBitcast %v4half %53
      %l_m_i = OpVectorShuffle %v3half %55 %55 0 1 2
               OpReturn
               OpFunctionEnd
         %36 = OpFunction %mat3v3half None %58
%start_byte_offset = OpFunctionParameter %uint
         %59 = OpLabel
         %60 = OpUDiv %uint %start_byte_offset %uint_16
         %61 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %60
         %62 = OpUMod %uint %start_byte_offset %uint_16
         %63 = OpUDiv %uint %62 %uint_4
         %64 = OpLoad %v4uint %61 None
         %65 = OpVectorShuffle %v2uint %64 %64 2 3
         %66 = OpVectorShuffle %v2uint %64 %64 0 1
         %67 = OpIEqual %bool %63 %uint_2
         %68 = OpCompositeConstruct %v2bool %67 %67
         %69 = OpSelect %v2uint %68 %65 %66
         %70 = OpBitcast %v4half %69
         %71 = OpVectorShuffle %v3half %70 %70 0 1 2
         %72 = OpIAdd %uint %uint_8 %start_byte_offset
         %73 = OpUDiv %uint %72 %uint_16
         %74 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %73
         %75 = OpUMod %uint %72 %uint_16
         %76 = OpUDiv %uint %75 %uint_4
         %77 = OpLoad %v4uint %74 None
         %78 = OpVectorShuffle %v2uint %77 %77 2 3
         %79 = OpVectorShuffle %v2uint %77 %77 0 1
         %80 = OpIEqual %bool %76 %uint_2
         %81 = OpCompositeConstruct %v2bool %80 %80
         %82 = OpSelect %v2uint %81 %78 %79
         %83 = OpBitcast %v4half %82
         %84 = OpVectorShuffle %v3half %83 %83 0 1 2
         %85 = OpIAdd %uint %uint_16 %start_byte_offset
         %86 = OpUDiv %uint %85 %uint_16
         %87 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %86
         %88 = OpUMod %uint %85 %uint_16
         %89 = OpUDiv %uint %88 %uint_4
         %90 = OpLoad %v4uint %87 None
         %91 = OpVectorShuffle %v2uint %90 %90 2 3
         %92 = OpVectorShuffle %v2uint %90 %90 0 1
         %93 = OpIEqual %bool %89 %uint_2
         %94 = OpCompositeConstruct %v2bool %93 %93
         %95 = OpSelect %v2uint %94 %91 %92
         %96 = OpBitcast %v4half %95
         %97 = OpVectorShuffle %v3half %96 %96 0 1 2
         %98 = OpCompositeConstruct %mat3v3half %71 %84 %97
               OpReturnValue %98
               OpFunctionEnd
