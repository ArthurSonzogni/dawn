; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 95
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_2 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_2 = OpConstant %uint 2
%_arr_v4uint_uint_2 = OpTypeArray %v4uint %uint_2
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_2
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat3v3half = OpTypeMatrix %v3half 3
%_ptr_Private_mat3v3half = OpTypePointer Private %mat3v3half
         %13 = OpConstantNull %mat3v3half
          %p = OpVariable %_ptr_Private_mat3v3half Private %13
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_v3half = OpTypePointer Private %v3half
     %uint_1 = OpConstant %uint 1
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
     %v2half = OpTypeVector %half 2
%_ptr_Private_half = OpTypePointer Private %half
         %49 = OpTypeFunction %mat3v3half %uint
    %uint_16 = OpConstant %uint 16
     %uint_4 = OpConstant %uint 4
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %f = OpFunction %void None %16
         %17 = OpLabel
         %18 = OpFunctionCall %mat3v3half %19 %uint_0
               OpStore %p %18 None
         %21 = OpAccessChain %_ptr_Private_v3half %p %uint_1
         %24 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %26 = OpLoad %v4uint %24 None
         %27 = OpVectorShuffle %v2uint %26 %26 0 1
         %30 = OpBitcast %v4half %27
         %31 = OpVectorShuffle %v3half %30 %30 0 1 2
               OpStore %21 %31 None
         %32 = OpAccessChain %_ptr_Private_v3half %p %uint_1
         %33 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %34 = OpLoad %v4uint %33 None
         %35 = OpVectorShuffle %v2uint %34 %34 0 1
         %36 = OpBitcast %v4half %35
         %37 = OpVectorShuffle %v3half %36 %36 0 1 2
         %38 = OpVectorShuffle %v3half %37 %37 2 0 1
               OpStore %32 %38 None
         %39 = OpAccessChain %_ptr_Private_v3half %p %uint_0
         %40 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %41 = OpLoad %v4uint %40 None
         %42 = OpCompositeExtract %uint %41 2
         %44 = OpBitcast %v2half %42
         %45 = OpCompositeExtract %half %44 0
         %46 = OpAccessChain %_ptr_Private_half %39 %uint_1
               OpStore %46 %45 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat3v3half None %49
%start_byte_offset = OpFunctionParameter %uint
         %50 = OpLabel
         %51 = OpUDiv %uint %start_byte_offset %uint_16
         %53 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %51
         %54 = OpUMod %uint %start_byte_offset %uint_16
         %55 = OpUDiv %uint %54 %uint_4
         %57 = OpLoad %v4uint %53 None
         %58 = OpVectorShuffle %v2uint %57 %57 2 3
         %59 = OpVectorShuffle %v2uint %57 %57 0 1
         %60 = OpIEqual %bool %55 %uint_2
         %63 = OpCompositeConstruct %v2bool %60 %60
         %64 = OpSelect %v2uint %63 %58 %59
         %65 = OpBitcast %v4half %64
         %66 = OpVectorShuffle %v3half %65 %65 0 1 2
         %67 = OpIAdd %uint %uint_8 %start_byte_offset
         %69 = OpUDiv %uint %67 %uint_16
         %70 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %69
         %71 = OpUMod %uint %67 %uint_16
         %72 = OpUDiv %uint %71 %uint_4
         %73 = OpLoad %v4uint %70 None
         %74 = OpVectorShuffle %v2uint %73 %73 2 3
         %75 = OpVectorShuffle %v2uint %73 %73 0 1
         %76 = OpIEqual %bool %72 %uint_2
         %77 = OpCompositeConstruct %v2bool %76 %76
         %78 = OpSelect %v2uint %77 %74 %75
         %79 = OpBitcast %v4half %78
         %80 = OpVectorShuffle %v3half %79 %79 0 1 2
         %81 = OpIAdd %uint %uint_16 %start_byte_offset
         %82 = OpUDiv %uint %81 %uint_16
         %83 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %82
         %84 = OpUMod %uint %81 %uint_16
         %85 = OpUDiv %uint %84 %uint_4
         %86 = OpLoad %v4uint %83 None
         %87 = OpVectorShuffle %v2uint %86 %86 2 3
         %88 = OpVectorShuffle %v2uint %86 %86 0 1
         %89 = OpIEqual %bool %85 %uint_2
         %90 = OpCompositeConstruct %v2bool %89 %89
         %91 = OpSelect %v2uint %90 %87 %88
         %92 = OpBitcast %v4half %91
         %93 = OpVectorShuffle %v3half %92 %92 0 1 2
         %94 = OpCompositeConstruct %mat3v3half %66 %80 %93
               OpReturnValue %94
               OpFunctionEnd
