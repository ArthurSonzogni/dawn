; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 89
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_2 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_2 = OpConstant %uint 2
%_arr_v4uint_uint_2 = OpTypeArray %v4uint %uint_2
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_2
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat3v4half = OpTypeMatrix %v4half 3
%_ptr_Private_mat3v4half = OpTypePointer Private %mat3v4half
         %13 = OpConstantNull %mat3v4half
          %p = OpVariable %_ptr_Private_mat3v4half Private %13
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_v4half = OpTypePointer Private %v4half
     %uint_1 = OpConstant %uint 1
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v2half = OpTypeVector %half 2
%_ptr_Private_half = OpTypePointer Private %half
         %46 = OpTypeFunction %mat3v4half %uint
    %uint_16 = OpConstant %uint 16
     %uint_4 = OpConstant %uint 4
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %f = OpFunction %void None %16
         %17 = OpLabel
         %18 = OpFunctionCall %mat3v4half %19 %uint_0
               OpStore %p %18 None
         %21 = OpAccessChain %_ptr_Private_v4half %p %uint_1
         %24 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %26 = OpLoad %v4uint %24 None
         %27 = OpVectorShuffle %v2uint %26 %26 0 1
         %29 = OpBitcast %v4half %27
               OpStore %21 %29 None
         %30 = OpAccessChain %_ptr_Private_v4half %p %uint_1
         %31 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %32 = OpLoad %v4uint %31 None
         %33 = OpVectorShuffle %v2uint %32 %32 0 1
         %34 = OpBitcast %v4half %33
         %35 = OpVectorShuffle %v4half %34 %34 1 3 0 2
               OpStore %30 %35 None
         %36 = OpAccessChain %_ptr_Private_v4half %p %uint_0
         %37 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %38 = OpLoad %v4uint %37 None
         %39 = OpCompositeExtract %uint %38 2
         %41 = OpBitcast %v2half %39
         %42 = OpCompositeExtract %half %41 0
         %43 = OpAccessChain %_ptr_Private_half %36 %uint_1
               OpStore %43 %42 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat3v4half None %46
%start_byte_offset = OpFunctionParameter %uint
         %47 = OpLabel
         %48 = OpUDiv %uint %start_byte_offset %uint_16
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %48
         %51 = OpUMod %uint %start_byte_offset %uint_16
         %52 = OpUDiv %uint %51 %uint_4
         %54 = OpLoad %v4uint %50 None
         %55 = OpVectorShuffle %v2uint %54 %54 2 3
         %56 = OpVectorShuffle %v2uint %54 %54 0 1
         %57 = OpIEqual %bool %52 %uint_2
         %60 = OpCompositeConstruct %v2bool %57 %57
         %61 = OpSelect %v2uint %60 %55 %56
         %62 = OpBitcast %v4half %61
         %63 = OpIAdd %uint %uint_8 %start_byte_offset
         %65 = OpUDiv %uint %63 %uint_16
         %66 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %65
         %67 = OpUMod %uint %63 %uint_16
         %68 = OpUDiv %uint %67 %uint_4
         %69 = OpLoad %v4uint %66 None
         %70 = OpVectorShuffle %v2uint %69 %69 2 3
         %71 = OpVectorShuffle %v2uint %69 %69 0 1
         %72 = OpIEqual %bool %68 %uint_2
         %73 = OpCompositeConstruct %v2bool %72 %72
         %74 = OpSelect %v2uint %73 %70 %71
         %75 = OpBitcast %v4half %74
         %76 = OpIAdd %uint %uint_16 %start_byte_offset
         %77 = OpUDiv %uint %76 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpUMod %uint %76 %uint_16
         %80 = OpUDiv %uint %79 %uint_4
         %81 = OpLoad %v4uint %78 None
         %82 = OpVectorShuffle %v2uint %81 %81 2 3
         %83 = OpVectorShuffle %v2uint %81 %81 0 1
         %84 = OpIEqual %bool %80 %uint_2
         %85 = OpCompositeConstruct %v2bool %84 %84
         %86 = OpSelect %v2uint %85 %82 %83
         %87 = OpBitcast %v4half %86
         %88 = OpCompositeConstruct %mat3v4half %62 %75 %87
               OpReturnValue %88
               OpFunctionEnd
