; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 102
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_2 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_2 = OpConstant %uint 2
%_arr_v4uint_uint_2 = OpTypeArray %v4uint %uint_2
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_2
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat3v4half = OpTypeMatrix %v4half 3
%_ptr_Workgroup_mat3v4half = OpTypePointer Workgroup %mat3v4half
          %w = OpVariable %_ptr_Workgroup_mat3v4half Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %18 = OpTypeFunction %void %uint
     %uint_1 = OpConstant %uint 1
       %bool = OpTypeBool
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_v4half = OpTypePointer Workgroup %v4half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v2half = OpTypeVector %half 2
%_ptr_Workgroup_half = OpTypePointer Workgroup %half
         %53 = OpConstantNull %mat3v4half
         %55 = OpTypeFunction %mat3v4half %uint
    %uint_16 = OpConstant %uint 16
     %uint_4 = OpConstant %uint 4
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
         %98 = OpTypeFunction %void
    %f_inner = OpFunction %void None %18
%tint_local_index = OpFunctionParameter %uint
         %19 = OpLabel
         %20 = OpULessThan %bool %tint_local_index %uint_1
               OpSelectionMerge %23 None
               OpBranchConditional %20 %24 %23
         %24 = OpLabel
               OpStore %w %53 None
               OpBranch %23
         %23 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %27 = OpFunctionCall %mat3v4half %28 %uint_0
               OpStore %w %27 None
         %30 = OpAccessChain %_ptr_Workgroup_v4half %w %uint_1
         %32 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %34 = OpLoad %v4uint %32 None
         %35 = OpVectorShuffle %v2uint %34 %34 0 1
         %37 = OpBitcast %v4half %35
               OpStore %30 %37 None
         %38 = OpAccessChain %_ptr_Workgroup_v4half %w %uint_1
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %40 = OpLoad %v4uint %39 None
         %41 = OpVectorShuffle %v2uint %40 %40 0 1
         %42 = OpBitcast %v4half %41
         %43 = OpVectorShuffle %v4half %42 %42 1 3 0 2
               OpStore %38 %43 None
         %44 = OpAccessChain %_ptr_Workgroup_v4half %w %uint_0
         %45 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %46 = OpLoad %v4uint %45 None
         %47 = OpCompositeExtract %uint %46 2
         %49 = OpBitcast %v2half %47
         %50 = OpCompositeExtract %half %49 0
         %51 = OpAccessChain %_ptr_Workgroup_half %44 %uint_1
               OpStore %51 %50 None
               OpReturn
               OpFunctionEnd
         %28 = OpFunction %mat3v4half None %55
%start_byte_offset = OpFunctionParameter %uint
         %56 = OpLabel
         %57 = OpUDiv %uint %start_byte_offset %uint_16
         %59 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %57
         %60 = OpUMod %uint %start_byte_offset %uint_16
         %61 = OpUDiv %uint %60 %uint_4
         %63 = OpLoad %v4uint %59 None
         %64 = OpVectorShuffle %v2uint %63 %63 2 3
         %65 = OpVectorShuffle %v2uint %63 %63 0 1
         %66 = OpIEqual %bool %61 %uint_2
         %68 = OpCompositeConstruct %v2bool %66 %66
         %69 = OpSelect %v2uint %68 %64 %65
         %70 = OpBitcast %v4half %69
         %71 = OpIAdd %uint %uint_8 %start_byte_offset
         %73 = OpUDiv %uint %71 %uint_16
         %74 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %73
         %75 = OpUMod %uint %71 %uint_16
         %76 = OpUDiv %uint %75 %uint_4
         %77 = OpLoad %v4uint %74 None
         %78 = OpVectorShuffle %v2uint %77 %77 2 3
         %79 = OpVectorShuffle %v2uint %77 %77 0 1
         %80 = OpIEqual %bool %76 %uint_2
         %81 = OpCompositeConstruct %v2bool %80 %80
         %82 = OpSelect %v2uint %81 %78 %79
         %83 = OpBitcast %v4half %82
         %84 = OpIAdd %uint %uint_16 %start_byte_offset
         %85 = OpUDiv %uint %84 %uint_16
         %86 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %85
         %87 = OpUMod %uint %84 %uint_16
         %88 = OpUDiv %uint %87 %uint_4
         %89 = OpLoad %v4uint %86 None
         %90 = OpVectorShuffle %v2uint %89 %89 2 3
         %91 = OpVectorShuffle %v2uint %89 %89 0 1
         %92 = OpIEqual %bool %88 %uint_2
         %93 = OpCompositeConstruct %v2bool %92 %92
         %94 = OpSelect %v2uint %93 %90 %91
         %95 = OpBitcast %v4half %94
         %96 = OpCompositeConstruct %mat3v4half %70 %83 %95
               OpReturnValue %96
               OpFunctionEnd
          %f = OpFunction %void None %98
         %99 = OpLabel
        %100 = OpLoad %uint %f_local_invocation_index_Input None
        %101 = OpFunctionCall %void %f_inner %100
               OpReturn
               OpFunctionEnd
