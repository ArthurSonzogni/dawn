; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 114
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_12 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_12 = OpConstant %uint 12
%_arr_v4uint_uint_12 = OpTypeArray %v4uint %uint_12
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_12
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %v3float = OpTypeVector %float 3
%mat3v3float = OpTypeMatrix %v3float 3
     %uint_4 = OpConstant %uint 4
%_arr_mat3v3float_uint_4 = OpTypeArray %mat3v3float %uint_4
%_ptr_Workgroup__arr_mat3v3float_uint_4 = OpTypePointer Workgroup %_arr_mat3v3float_uint_4
          %w = OpVariable %_ptr_Workgroup__arr_mat3v3float_uint_4 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %20 = OpTypeFunction %void %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_mat3v3float = OpTypePointer Workgroup %mat3v3float
     %uint_1 = OpConstant %uint 1
    %uint_96 = OpConstant %uint 96
%_ptr_Workgroup_v3float = OpTypePointer Workgroup %v3float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v3uint = OpTypeVector %uint 3
%_ptr_Workgroup_float = OpTypePointer Workgroup %float
       %bool = OpTypeBool
         %62 = OpConstantNull %mat3v3float
         %64 = OpTypeFunction %mat3v3float %uint
    %uint_16 = OpConstant %uint 16
    %uint_32 = OpConstant %uint 32
         %87 = OpTypeFunction %_arr_mat3v3float_uint_4 %uint
%_ptr_Function__arr_mat3v3float_uint_4 = OpTypePointer Function %_arr_mat3v3float_uint_4
         %91 = OpConstantNull %_arr_mat3v3float_uint_4
    %uint_48 = OpConstant %uint 48
%_ptr_Function_mat3v3float = OpTypePointer Function %mat3v3float
        %110 = OpTypeFunction %void
    %f_inner = OpFunction %void None %20
%tint_local_index = OpFunctionParameter %uint
         %21 = OpLabel
               OpBranch %22
         %22 = OpLabel
               OpBranch %25
         %25 = OpLabel
         %27 = OpPhi %uint %tint_local_index %22 %28 %24
               OpLoopMerge %26 %24 None
               OpBranch %23
         %23 = OpLabel
         %57 = OpUGreaterThanEqual %bool %27 %uint_4
               OpSelectionMerge %59 None
               OpBranchConditional %57 %60 %59
         %60 = OpLabel
               OpBranch %26
         %59 = OpLabel
         %61 = OpAccessChain %_ptr_Workgroup_mat3v3float %w %27
               OpStore %61 %62 None
               OpBranch %24
         %24 = OpLabel
         %28 = OpIAdd %uint %27 %uint_1
               OpBranch %25
         %26 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %32 = OpFunctionCall %_arr_mat3v3float_uint_4 %33 %uint_0
               OpStore %w %32 None
         %35 = OpAccessChain %_ptr_Workgroup_mat3v3float %w %uint_1
         %38 = OpFunctionCall %mat3v3float %39 %uint_96
               OpStore %35 %38 None
         %41 = OpAccessChain %_ptr_Workgroup_v3float %w %uint_1 %uint_0
         %43 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %45 = OpLoad %v4uint %43 None
         %46 = OpVectorShuffle %v3uint %45 %45 0 1 2
         %48 = OpBitcast %v3float %46
         %49 = OpVectorShuffle %v3float %48 %48 2 0 1
               OpStore %41 %49 None
         %50 = OpAccessChain %_ptr_Workgroup_v3float %w %uint_1 %uint_0
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %52 = OpLoad %v4uint %51 None
         %53 = OpCompositeExtract %uint %52 0
         %54 = OpBitcast %float %53
         %55 = OpAccessChain %_ptr_Workgroup_float %50 %uint_0
               OpStore %55 %54 None
               OpReturn
               OpFunctionEnd
         %39 = OpFunction %mat3v3float None %64
%start_byte_offset = OpFunctionParameter %uint
         %65 = OpLabel
         %66 = OpUDiv %uint %start_byte_offset %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %69 = OpLoad %v4uint %68 None
         %70 = OpVectorShuffle %v3uint %69 %69 0 1 2
         %71 = OpBitcast %v3float %70
         %72 = OpIAdd %uint %uint_16 %start_byte_offset
         %73 = OpUDiv %uint %72 %uint_16
         %74 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %73
         %75 = OpLoad %v4uint %74 None
         %76 = OpVectorShuffle %v3uint %75 %75 0 1 2
         %77 = OpBitcast %v3float %76
         %78 = OpIAdd %uint %uint_32 %start_byte_offset
         %80 = OpUDiv %uint %78 %uint_16
         %81 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %80
         %82 = OpLoad %v4uint %81 None
         %83 = OpVectorShuffle %v3uint %82 %82 0 1 2
         %84 = OpBitcast %v3float %83
         %85 = OpCompositeConstruct %mat3v3float %71 %77 %84
               OpReturnValue %85
               OpFunctionEnd
         %33 = OpFunction %_arr_mat3v3float_uint_4 None %87
%start_byte_offset_0 = OpFunctionParameter %uint
         %88 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat3v3float_uint_4 Function
               OpStore %a %91
               OpBranch %92
         %92 = OpLabel
               OpBranch %95
         %95 = OpLabel
         %97 = OpPhi %uint %uint_0 %92 %98 %94
               OpLoopMerge %96 %94 None
               OpBranch %93
         %93 = OpLabel
        %100 = OpUGreaterThanEqual %bool %97 %uint_4
               OpSelectionMerge %101 None
               OpBranchConditional %100 %102 %101
        %102 = OpLabel
               OpBranch %96
        %101 = OpLabel
        %103 = OpIMul %uint %97 %uint_48
        %105 = OpIAdd %uint %start_byte_offset_0 %103
        %106 = OpAccessChain %_ptr_Function_mat3v3float %a %97
        %108 = OpFunctionCall %mat3v3float %39 %105
               OpStore %106 %108 None
               OpBranch %94
         %94 = OpLabel
         %98 = OpIAdd %uint %97 %uint_1
               OpBranch %95
         %96 = OpLabel
         %99 = OpLoad %_arr_mat3v3float_uint_4 %a None
               OpReturnValue %99
               OpFunctionEnd
          %f = OpFunction %void None %110
        %111 = OpLabel
        %112 = OpLoad %uint %f_local_invocation_index_Input None
        %113 = OpFunctionCall %void %f_inner %112
               OpReturn
               OpFunctionEnd
