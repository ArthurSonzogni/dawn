; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 126
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %a "a"
               OpName %a_0 "a"
               OpName %b "b"
               OpName %m "m"
               OpName %c "c"
               OpName %v "v"
               OpName %d "d"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a_1 "a"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
     %v3half = OpTypeVector %half 3
 %mat2v3half = OpTypeMatrix %v3half 2
%_arr_mat2v3half_uint_4 = OpTypeArray %mat2v3half %uint_4
         %17 = OpTypeFunction %half %_arr_mat2v3half_uint_4
         %22 = OpTypeFunction %half %mat2v3half
         %27 = OpTypeFunction %half %v3half
         %32 = OpTypeFunction %half %half
       %void = OpTypeVoid
         %36 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_1 = OpConstant %uint 1
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %71 = OpTypeFunction %mat2v3half %uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
        %105 = OpTypeFunction %_arr_mat2v3half_uint_4 %uint
%_ptr_Function__arr_mat2v3half_uint_4 = OpTypePointer Function %_arr_mat2v3half_uint_4
        %109 = OpConstantNull %_arr_mat2v3half_uint_4
%_ptr_Function_mat2v3half = OpTypePointer Function %mat2v3half
          %a = OpFunction %half None %17
        %a_0 = OpFunctionParameter %_arr_mat2v3half_uint_4
         %18 = OpLabel
         %19 = OpCompositeExtract %half %a_0 0 0 0
               OpReturnValue %19
               OpFunctionEnd
          %b = OpFunction %half None %22
          %m = OpFunctionParameter %mat2v3half
         %23 = OpLabel
         %24 = OpCompositeExtract %half %m 0 0
               OpReturnValue %24
               OpFunctionEnd
          %c = OpFunction %half None %27
          %v = OpFunctionParameter %v3half
         %28 = OpLabel
         %29 = OpCompositeExtract %half %v 0
               OpReturnValue %29
               OpFunctionEnd
          %d = OpFunction %half None %32
          %f = OpFunctionParameter %half
         %33 = OpLabel
               OpReturnValue %f
               OpFunctionEnd
        %f_0 = OpFunction %void None %36
         %37 = OpLabel
         %38 = OpFunctionCall %_arr_mat2v3half_uint_4 %39 %uint_0
         %41 = OpFunctionCall %half %a %38
         %42 = OpFunctionCall %mat2v3half %43 %uint_16
         %45 = OpFunctionCall %half %b %42
         %46 = OpFAdd %half %41 %45
         %47 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %50 = OpLoad %v4uint %47 None
         %51 = OpVectorShuffle %v2uint %50 %50 0 1
         %54 = OpBitcast %v4half %51
         %55 = OpVectorShuffle %v3half %54 %54 0 1 2
         %56 = OpVectorShuffle %v3half %55 %55 2 0 1
         %57 = OpFunctionCall %half %c %56
         %58 = OpFAdd %half %46 %57
         %59 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %60 = OpLoad %v4uint %59 None
         %61 = OpVectorShuffle %v2uint %60 %60 0 1
         %62 = OpBitcast %v4half %61
         %63 = OpVectorShuffle %v3half %62 %62 0 1 2
         %64 = OpVectorShuffle %v3half %63 %63 2 0 1
         %65 = OpCompositeExtract %half %64 0
         %66 = OpFunctionCall %half %d %65
         %67 = OpFAdd %half %58 %66
         %68 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %68 %67 None
               OpReturn
               OpFunctionEnd
         %43 = OpFunction %mat2v3half None %71
%start_byte_offset = OpFunctionParameter %uint
         %72 = OpLabel
         %73 = OpUDiv %uint %start_byte_offset %uint_16
         %74 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %73
         %75 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %77 = OpShiftRightLogical %uint %75 %uint_2
         %79 = OpLoad %v4uint %74 None
         %80 = OpVectorShuffle %v2uint %79 %79 2 3
         %81 = OpVectorShuffle %v2uint %79 %79 0 1
         %82 = OpIEqual %bool %77 %uint_2
         %85 = OpCompositeConstruct %v2bool %82 %82
         %86 = OpSelect %v2uint %85 %80 %81
         %87 = OpBitcast %v4half %86
         %88 = OpVectorShuffle %v3half %87 %87 0 1 2
         %89 = OpIAdd %uint %uint_8 %start_byte_offset
         %91 = OpUDiv %uint %89 %uint_16
         %92 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %91
         %93 = OpBitwiseAnd %uint %89 %uint_15
         %94 = OpShiftRightLogical %uint %93 %uint_2
         %95 = OpLoad %v4uint %92 None
         %96 = OpVectorShuffle %v2uint %95 %95 2 3
         %97 = OpVectorShuffle %v2uint %95 %95 0 1
         %98 = OpIEqual %bool %94 %uint_2
         %99 = OpCompositeConstruct %v2bool %98 %98
        %100 = OpSelect %v2uint %99 %96 %97
        %101 = OpBitcast %v4half %100
        %102 = OpVectorShuffle %v3half %101 %101 0 1 2
        %103 = OpCompositeConstruct %mat2v3half %88 %102
               OpReturnValue %103
               OpFunctionEnd
         %39 = OpFunction %_arr_mat2v3half_uint_4 None %105
%start_byte_offset_0 = OpFunctionParameter %uint
        %106 = OpLabel
        %a_1 = OpVariable %_ptr_Function__arr_mat2v3half_uint_4 Function
               OpStore %a_1 %109
               OpBranch %110
        %110 = OpLabel
               OpBranch %113
        %113 = OpLabel
        %115 = OpPhi %uint %uint_0 %110 %116 %112
               OpLoopMerge %114 %112 None
               OpBranch %111
        %111 = OpLabel
        %118 = OpUGreaterThanEqual %bool %115 %uint_4
               OpSelectionMerge %119 None
               OpBranchConditional %118 %120 %119
        %120 = OpLabel
               OpBranch %114
        %119 = OpLabel
        %121 = OpIMul %uint %115 %uint_16
        %122 = OpIAdd %uint %start_byte_offset_0 %121
        %123 = OpAccessChain %_ptr_Function_mat2v3half %a_1 %115
        %125 = OpFunctionCall %mat2v3half %43 %122
               OpStore %123 %125 None
               OpBranch %112
        %112 = OpLabel
        %116 = OpIAdd %uint %115 %uint_1
               OpBranch %113
        %114 = OpLabel
        %117 = OpLoad %_arr_mat2v3half_uint_4 %a_1 None
               OpReturnValue %117
               OpFunctionEnd
