; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 104
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
     %v3half = OpTypeVector %half 3
 %mat2v3half = OpTypeMatrix %v3half 2
%_arr_mat2v3half_uint_4 = OpTypeArray %mat2v3half %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_32 = OpConstant %uint 32
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_2 = OpConstant %uint 2
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
     %v2half = OpTypeVector %half 2
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %49 = OpTypeFunction %_arr_mat2v3half_uint_4 %uint
%_ptr_Function__arr_mat2v3half_uint_4 = OpTypePointer Function %_arr_mat2v3half_uint_4
         %53 = OpConstantNull %_arr_mat2v3half_uint_4
       %bool = OpTypeBool
    %uint_16 = OpConstant %uint 16
%_ptr_Function_mat2v3half = OpTypePointer Function %mat2v3half
     %uint_1 = OpConstant %uint 1
         %74 = OpTypeFunction %mat2v3half %uint
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %f = OpFunction %void None %14
         %15 = OpLabel
        %l_a = OpFunctionCall %_arr_mat2v3half_uint_4 %20 %uint_0
      %l_a_i = OpFunctionCall %mat2v3half %23 %uint_32
         %25 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %28 = OpLoad %v4uint %25 None
         %29 = OpVectorShuffle %v2uint %28 %28 2 3
         %32 = OpBitcast %v4half %29
    %l_a_i_i = OpVectorShuffle %v3half %32 %32 0 1 2
         %34 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %35 = OpLoad %v4uint %34 None
         %36 = OpCompositeExtract %uint %35 2
         %38 = OpBitcast %v2half %36
         %39 = OpCompositeExtract %half %38 0
         %40 = OpCompositeExtract %half %l_a 0 0 0
         %41 = OpFAdd %half %39 %40
         %42 = OpCompositeExtract %half %l_a_i 0 0
         %43 = OpFAdd %half %41 %42
         %44 = OpCompositeExtract %half %l_a_i_i 0
         %45 = OpFAdd %half %43 %44
         %46 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %46 %45 None
               OpReturn
               OpFunctionEnd
         %20 = OpFunction %_arr_mat2v3half_uint_4 None %49
%start_byte_offset = OpFunctionParameter %uint
         %50 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat2v3half_uint_4 Function
               OpStore %a %53
               OpBranch %54
         %54 = OpLabel
               OpBranch %57
         %57 = OpLabel
         %59 = OpPhi %uint %uint_0 %54 %60 %56
               OpLoopMerge %58 %56 None
               OpBranch %55
         %55 = OpLabel
         %62 = OpUGreaterThanEqual %bool %59 %uint_4
               OpSelectionMerge %64 None
               OpBranchConditional %62 %65 %64
         %65 = OpLabel
               OpBranch %58
         %64 = OpLabel
         %66 = OpIMul %uint %59 %uint_16
         %68 = OpIAdd %uint %start_byte_offset %66
         %69 = OpAccessChain %_ptr_Function_mat2v3half %a %59
         %71 = OpFunctionCall %mat2v3half %23 %68
               OpStore %69 %71 None
               OpBranch %56
         %56 = OpLabel
         %60 = OpIAdd %uint %59 %uint_1
               OpBranch %57
         %58 = OpLabel
         %61 = OpLoad %_arr_mat2v3half_uint_4 %a None
               OpReturnValue %61
               OpFunctionEnd
         %23 = OpFunction %mat2v3half None %74
%start_byte_offset_0 = OpFunctionParameter %uint
         %75 = OpLabel
         %76 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %77 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %76
         %78 = OpUMod %uint %start_byte_offset_0 %uint_16
         %79 = OpUDiv %uint %78 %uint_4
         %80 = OpLoad %v4uint %77 None
         %81 = OpVectorShuffle %v2uint %80 %80 2 3
         %82 = OpVectorShuffle %v2uint %80 %80 0 1
         %83 = OpIEqual %bool %79 %uint_2
         %85 = OpCompositeConstruct %v2bool %83 %83
         %86 = OpSelect %v2uint %85 %81 %82
         %87 = OpBitcast %v4half %86
         %88 = OpVectorShuffle %v3half %87 %87 0 1 2
         %89 = OpIAdd %uint %uint_8 %start_byte_offset_0
         %91 = OpUDiv %uint %89 %uint_16
         %92 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %91
         %93 = OpUMod %uint %89 %uint_16
         %94 = OpUDiv %uint %93 %uint_4
         %95 = OpLoad %v4uint %92 None
         %96 = OpVectorShuffle %v2uint %95 %95 2 3
         %97 = OpVectorShuffle %v2uint %95 %95 0 1
         %98 = OpIEqual %bool %94 %uint_2
         %99 = OpCompositeConstruct %v2bool %98 %98
        %100 = OpSelect %v2uint %99 %96 %97
        %101 = OpBitcast %v4half %100
        %102 = OpVectorShuffle %v3half %101 %101 0 1 2
        %103 = OpCompositeConstruct %mat2v3half %88 %102
               OpReturnValue %103
               OpFunctionEnd
