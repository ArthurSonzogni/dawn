; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 142
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
         %33 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %17 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %28 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
    %uint_16 = OpConstant %uint 16
     %uint_1 = OpConstant %uint 1
     %uint_8 = OpConstant %uint 8
     %v3half = OpTypeVector %half 3
 %mat2v3half = OpTypeMatrix %v3half 2
%_arr_mat2v3half_uint_4 = OpTypeArray %mat2v3half %uint_4
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %v4half = OpTypeVector %half 4
     %v2half = OpTypeVector %half 2
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %92 = OpTypeFunction %_arr_mat2v3half_uint_4 %uint
%_ptr_Function__arr_mat2v3half_uint_4 = OpTypePointer Function %_arr_mat2v3half_uint_4
         %96 = OpConstantNull %_arr_mat2v3half_uint_4
%_ptr_Function_mat2v3half = OpTypePointer Function %mat2v3half
        %114 = OpTypeFunction %mat2v3half %uint
          %i = OpFunction %int None %17
         %18 = OpLabel
         %19 = OpLoad %int %counter None
         %20 = OpBitcast %uint %19
         %21 = OpBitcast %uint %int_1
         %23 = OpIAdd %uint %20 %21
         %24 = OpBitcast %int %23
               OpStore %counter %24 None
         %25 = OpLoad %int %counter None
               OpReturnValue %25
               OpFunctionEnd
          %f = OpFunction %void None %28
         %29 = OpLabel
         %30 = OpFunctionCall %int %i
         %31 = OpBitcast %uint %30
         %32 = OpExtInst %uint %33 UMin %31 %uint_3
         %35 = OpIMul %uint %uint_16 %32
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %33 UMin %38 %uint_1
         %41 = OpIMul %uint %uint_8 %39
        %l_a = OpFunctionCall %_arr_mat2v3half_uint_4 %47 %uint_0
      %l_a_i = OpFunctionCall %mat2v3half %50 %35
         %51 = OpIAdd %uint %35 %41
         %52 = OpUDiv %uint %51 %uint_16
         %53 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %52
         %55 = OpUMod %uint %51 %uint_16
         %56 = OpUDiv %uint %55 %uint_4
         %57 = OpLoad %v4uint %53 None
         %58 = OpVectorShuffle %v2uint %57 %57 2 3
         %60 = OpVectorShuffle %v2uint %57 %57 0 1
         %61 = OpIEqual %bool %56 %uint_2
         %65 = OpCompositeConstruct %v2bool %61 %61
         %66 = OpSelect %v2uint %65 %58 %60
         %68 = OpBitcast %v4half %66
    %l_a_i_i = OpVectorShuffle %v3half %68 %68 0 1 2
         %70 = OpIAdd %uint %35 %41
         %71 = OpUDiv %uint %70 %uint_16
         %72 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %71
         %73 = OpUMod %uint %70 %uint_16
         %74 = OpUDiv %uint %73 %uint_4
         %75 = OpLoad %v4uint %72 None
         %76 = OpVectorExtractDynamic %uint %75 %74
         %77 = OpUMod %uint %70 %uint_4
         %78 = OpIEqual %bool %77 %uint_0
         %79 = OpSelect %uint %78 %uint_0 %uint_1
         %81 = OpBitcast %v2half %76
         %82 = OpVectorExtractDynamic %half %81 %79
         %83 = OpCompositeExtract %half %l_a 0 0 0
         %84 = OpFAdd %half %82 %83
         %85 = OpCompositeExtract %half %l_a_i 0 0
         %86 = OpFAdd %half %84 %85
         %87 = OpCompositeExtract %half %l_a_i_i 0
         %88 = OpFAdd %half %86 %87
         %89 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %89 %88 None
               OpReturn
               OpFunctionEnd
         %47 = OpFunction %_arr_mat2v3half_uint_4 None %92
%start_byte_offset = OpFunctionParameter %uint
         %93 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat2v3half_uint_4 Function
               OpStore %a %96
               OpBranch %97
         %97 = OpLabel
               OpBranch %100
        %100 = OpLabel
        %102 = OpPhi %uint %uint_0 %97 %103 %99
               OpLoopMerge %101 %99 None
               OpBranch %98
         %98 = OpLabel
        %105 = OpUGreaterThanEqual %bool %102 %uint_4
               OpSelectionMerge %106 None
               OpBranchConditional %105 %107 %106
        %107 = OpLabel
               OpBranch %101
        %106 = OpLabel
        %108 = OpIMul %uint %102 %uint_16
        %109 = OpIAdd %uint %start_byte_offset %108
        %110 = OpAccessChain %_ptr_Function_mat2v3half %a %102
        %112 = OpFunctionCall %mat2v3half %50 %109
               OpStore %110 %112 None
               OpBranch %99
         %99 = OpLabel
        %103 = OpIAdd %uint %102 %uint_1
               OpBranch %100
        %101 = OpLabel
        %104 = OpLoad %_arr_mat2v3half_uint_4 %a None
               OpReturnValue %104
               OpFunctionEnd
         %50 = OpFunction %mat2v3half None %114
%start_byte_offset_0 = OpFunctionParameter %uint
        %115 = OpLabel
        %116 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %117 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %116
        %118 = OpUMod %uint %start_byte_offset_0 %uint_16
        %119 = OpUDiv %uint %118 %uint_4
        %120 = OpLoad %v4uint %117 None
        %121 = OpVectorShuffle %v2uint %120 %120 2 3
        %122 = OpVectorShuffle %v2uint %120 %120 0 1
        %123 = OpIEqual %bool %119 %uint_2
        %124 = OpCompositeConstruct %v2bool %123 %123
        %125 = OpSelect %v2uint %124 %121 %122
        %126 = OpBitcast %v4half %125
        %127 = OpVectorShuffle %v3half %126 %126 0 1 2
        %128 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %129 = OpUDiv %uint %128 %uint_16
        %130 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %129
        %131 = OpUMod %uint %128 %uint_16
        %132 = OpUDiv %uint %131 %uint_4
        %133 = OpLoad %v4uint %130 None
        %134 = OpVectorShuffle %v2uint %133 %133 2 3
        %135 = OpVectorShuffle %v2uint %133 %133 0 1
        %136 = OpIEqual %bool %132 %uint_2
        %137 = OpCompositeConstruct %v2bool %136 %136
        %138 = OpSelect %v2uint %137 %134 %135
        %139 = OpBitcast %v4half %138
        %140 = OpVectorShuffle %v3half %139 %139 0 1 2
        %141 = OpCompositeConstruct %mat2v3half %127 %140
               OpReturnValue %141
               OpFunctionEnd
