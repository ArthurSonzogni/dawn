; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 83
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
         %35 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %t "t"
               OpName %l "l"
               OpName %a "a"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
     %v3half = OpTypeVector %half 3
 %mat2v3half = OpTypeMatrix %v3half 2
    %uint_32 = OpConstant %uint 32
     %v2half = OpTypeVector %half 2
 %mat3v2half = OpTypeMatrix %v2half 3
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %50 = OpTypeFunction %mat2v3half %uint
    %uint_16 = OpConstant %uint 16
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %f = OpFunction %void None %14
         %15 = OpLabel
         %16 = OpFunctionCall %mat2v3half %19 %uint_32
          %t = OpTranspose %mat3v2half %16
         %24 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %27 = OpLoad %v4uint %24 None
         %28 = OpVectorShuffle %v2uint %27 %27 2 3
         %31 = OpBitcast %v4half %28
         %32 = OpVectorShuffle %v3half %31 %31 0 1 2
         %33 = OpVectorShuffle %v3half %32 %32 2 0 1
          %l = OpExtInst %half %35 Length %33
         %36 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %37 = OpLoad %v4uint %36 None
         %38 = OpVectorShuffle %v2uint %37 %37 2 3
         %39 = OpBitcast %v4half %38
         %40 = OpVectorShuffle %v3half %39 %39 0 1 2
         %41 = OpVectorShuffle %v3half %40 %40 2 0 1
         %42 = OpCompositeExtract %half %41 0
          %a = OpExtInst %half %35 FAbs %42
         %44 = OpFAdd %half %a %l
         %45 = OpCompositeExtract %half %t 0 0
         %46 = OpFAdd %half %44 %45
         %47 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %47 %46 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat2v3half None %50
%start_byte_offset = OpFunctionParameter %uint
         %51 = OpLabel
         %52 = OpUDiv %uint %start_byte_offset %uint_16
         %54 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %52
         %55 = OpUMod %uint %start_byte_offset %uint_16
         %56 = OpUDiv %uint %55 %uint_4
         %57 = OpLoad %v4uint %54 None
         %58 = OpVectorShuffle %v2uint %57 %57 2 3
         %59 = OpVectorShuffle %v2uint %57 %57 0 1
         %60 = OpIEqual %bool %56 %uint_2
         %64 = OpCompositeConstruct %v2bool %60 %60
         %65 = OpSelect %v2uint %64 %58 %59
         %66 = OpBitcast %v4half %65
         %67 = OpVectorShuffle %v3half %66 %66 0 1 2
         %68 = OpIAdd %uint %uint_8 %start_byte_offset
         %70 = OpUDiv %uint %68 %uint_16
         %71 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %70
         %72 = OpUMod %uint %68 %uint_16
         %73 = OpUDiv %uint %72 %uint_4
         %74 = OpLoad %v4uint %71 None
         %75 = OpVectorShuffle %v2uint %74 %74 2 3
         %76 = OpVectorShuffle %v2uint %74 %74 0 1
         %77 = OpIEqual %bool %73 %uint_2
         %78 = OpCompositeConstruct %v2bool %77 %77
         %79 = OpSelect %v2uint %78 %75 %76
         %80 = OpBitcast %v4half %79
         %81 = OpVectorShuffle %v3half %80 %80 0 1 2
         %82 = OpCompositeConstruct %mat2v3half %67 %81
               OpReturnValue %82
               OpFunctionEnd
