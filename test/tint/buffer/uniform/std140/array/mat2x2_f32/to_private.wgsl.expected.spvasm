; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 106
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
    %v2float = OpTypeVector %float 2
%mat2v2float = OpTypeMatrix %v2float 2
%_arr_mat2v2float_uint_4 = OpTypeArray %mat2v2float %uint_4
%_ptr_Private__arr_mat2v2float_uint_4 = OpTypePointer Private %_arr_mat2v2float_uint_4
         %17 = OpConstantNull %_arr_mat2v2float_uint_4
          %p = OpVariable %_ptr_Private__arr_mat2v2float_uint_4 Private %17
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_mat2v2float = OpTypePointer Private %mat2v2float
     %uint_1 = OpConstant %uint 1
    %uint_32 = OpConstant %uint 32
%_ptr_Private_v2float = OpTypePointer Private %v2float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
%_ptr_Private_float = OpTypePointer Private %float
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %53 = OpTypeFunction %mat2v2float %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
         %86 = OpTypeFunction %_arr_mat2v2float_uint_4 %uint
%_ptr_Function__arr_mat2v2float_uint_4 = OpTypePointer Function %_arr_mat2v2float_uint_4
%_ptr_Function_mat2v2float = OpTypePointer Function %mat2v2float
          %f = OpFunction %void None %20
         %21 = OpLabel
         %22 = OpFunctionCall %_arr_mat2v2float_uint_4 %23 %uint_0
               OpStore %p %22 None
         %25 = OpAccessChain %_ptr_Private_mat2v2float %p %uint_1
         %28 = OpFunctionCall %mat2v2float %29 %uint_32
               OpStore %25 %28 None
         %31 = OpAccessChain %_ptr_Private_v2float %p %uint_1 %uint_0
         %33 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %35 = OpLoad %v4uint %33 None
         %36 = OpVectorShuffle %v2uint %35 %35 2 3
         %38 = OpBitcast %v2float %36
         %39 = OpVectorShuffle %v2float %38 %38 1 0
               OpStore %31 %39 None
         %40 = OpAccessChain %_ptr_Private_v2float %p %uint_1 %uint_0
         %41 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %42 = OpLoad %v4uint %41 None
         %43 = OpCompositeExtract %uint %42 2
         %44 = OpBitcast %float %43
         %45 = OpAccessChain %_ptr_Private_float %40 %uint_0
               OpStore %45 %44 None
         %47 = OpAccessChain %_ptr_Private_v2float %p %uint_1 %uint_0
         %48 = OpAccessChain %_ptr_Private_float %47 %uint_0
         %49 = OpLoad %float %48 None
         %50 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %50 %49 None
               OpReturn
               OpFunctionEnd
         %29 = OpFunction %mat2v2float None %53
%start_byte_offset = OpFunctionParameter %uint
         %54 = OpLabel
         %55 = OpUDiv %uint %start_byte_offset %uint_16
         %57 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %55
         %58 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %60 = OpShiftRightLogical %uint %58 %uint_2
         %62 = OpLoad %v4uint %57 None
         %63 = OpVectorShuffle %v2uint %62 %62 2 3
         %64 = OpVectorShuffle %v2uint %62 %62 0 1
         %65 = OpIEqual %bool %60 %uint_2
         %68 = OpCompositeConstruct %v2bool %65 %65
         %69 = OpSelect %v2uint %68 %63 %64
         %70 = OpBitcast %v2float %69
         %71 = OpIAdd %uint %uint_8 %start_byte_offset
         %73 = OpUDiv %uint %71 %uint_16
         %74 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %73
         %75 = OpBitwiseAnd %uint %71 %uint_15
         %76 = OpShiftRightLogical %uint %75 %uint_2
         %77 = OpLoad %v4uint %74 None
         %78 = OpVectorShuffle %v2uint %77 %77 2 3
         %79 = OpVectorShuffle %v2uint %77 %77 0 1
         %80 = OpIEqual %bool %76 %uint_2
         %81 = OpCompositeConstruct %v2bool %80 %80
         %82 = OpSelect %v2uint %81 %78 %79
         %83 = OpBitcast %v2float %82
         %84 = OpCompositeConstruct %mat2v2float %70 %83
               OpReturnValue %84
               OpFunctionEnd
         %23 = OpFunction %_arr_mat2v2float_uint_4 None %86
%start_byte_offset_0 = OpFunctionParameter %uint
         %87 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat2v2float_uint_4 Function
               OpStore %a %17
               OpBranch %90
         %90 = OpLabel
               OpBranch %93
         %93 = OpLabel
         %95 = OpPhi %uint %uint_0 %90 %96 %92
               OpLoopMerge %94 %92 None
               OpBranch %91
         %91 = OpLabel
         %98 = OpUGreaterThanEqual %bool %95 %uint_4
               OpSelectionMerge %99 None
               OpBranchConditional %98 %100 %99
        %100 = OpLabel
               OpBranch %94
         %99 = OpLabel
        %101 = OpIMul %uint %95 %uint_16
        %102 = OpIAdd %uint %start_byte_offset_0 %101
        %103 = OpAccessChain %_ptr_Function_mat2v2float %a %95
        %105 = OpFunctionCall %mat2v2float %29 %102
               OpStore %103 %105 None
               OpBranch %92
         %92 = OpLabel
         %96 = OpIAdd %uint %95 %uint_1
               OpBranch %93
         %94 = OpLabel
         %97 = OpLoad %_arr_mat2v2float_uint_4 %a None
               OpReturnValue %97
               OpFunctionEnd
