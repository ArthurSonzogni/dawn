; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 121
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %a "a"
               OpName %a_0 "a"
               OpName %b "b"
               OpName %m "m"
               OpName %c "c"
               OpName %v "v"
               OpName %d "d"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a_1 "a"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
    %v2float = OpTypeVector %float 2
%mat2v2float = OpTypeMatrix %v2float 2
%_arr_mat2v2float_uint_4 = OpTypeArray %mat2v2float %uint_4
         %17 = OpTypeFunction %float %_arr_mat2v2float_uint_4
         %22 = OpTypeFunction %float %mat2v2float
         %27 = OpTypeFunction %float %v2float
         %32 = OpTypeFunction %float %float
       %void = OpTypeVoid
         %36 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_1 = OpConstant %uint 1
     %v2uint = OpTypeVector %uint 2
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %68 = OpTypeFunction %mat2v2float %uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
        %100 = OpTypeFunction %_arr_mat2v2float_uint_4 %uint
%_ptr_Function__arr_mat2v2float_uint_4 = OpTypePointer Function %_arr_mat2v2float_uint_4
        %104 = OpConstantNull %_arr_mat2v2float_uint_4
%_ptr_Function_mat2v2float = OpTypePointer Function %mat2v2float
          %a = OpFunction %float None %17
        %a_0 = OpFunctionParameter %_arr_mat2v2float_uint_4
         %18 = OpLabel
         %19 = OpCompositeExtract %float %a_0 0 0 0
               OpReturnValue %19
               OpFunctionEnd
          %b = OpFunction %float None %22
          %m = OpFunctionParameter %mat2v2float
         %23 = OpLabel
         %24 = OpCompositeExtract %float %m 0 0
               OpReturnValue %24
               OpFunctionEnd
          %c = OpFunction %float None %27
          %v = OpFunctionParameter %v2float
         %28 = OpLabel
         %29 = OpCompositeExtract %float %v 0
               OpReturnValue %29
               OpFunctionEnd
          %d = OpFunction %float None %32
          %f = OpFunctionParameter %float
         %33 = OpLabel
               OpReturnValue %f
               OpFunctionEnd
        %f_0 = OpFunction %void None %36
         %37 = OpLabel
         %38 = OpFunctionCall %_arr_mat2v2float_uint_4 %39 %uint_0
         %41 = OpFunctionCall %float %a %38
         %42 = OpFunctionCall %mat2v2float %43 %uint_16
         %45 = OpFunctionCall %float %b %42
         %46 = OpFAdd %float %41 %45
         %47 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %50 = OpLoad %v4uint %47 None
         %51 = OpVectorShuffle %v2uint %50 %50 0 1
         %53 = OpBitcast %v2float %51
         %54 = OpVectorShuffle %v2float %53 %53 1 0
         %55 = OpFunctionCall %float %c %54
         %56 = OpFAdd %float %46 %55
         %57 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %58 = OpLoad %v4uint %57 None
         %59 = OpVectorShuffle %v2uint %58 %58 0 1
         %60 = OpBitcast %v2float %59
         %61 = OpVectorShuffle %v2float %60 %60 1 0
         %62 = OpCompositeExtract %float %61 0
         %63 = OpFunctionCall %float %d %62
         %64 = OpFAdd %float %56 %63
         %65 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %65 %64 None
               OpReturn
               OpFunctionEnd
         %43 = OpFunction %mat2v2float None %68
%start_byte_offset = OpFunctionParameter %uint
         %69 = OpLabel
         %70 = OpUDiv %uint %start_byte_offset %uint_16
         %71 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %70
         %72 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %74 = OpShiftRightLogical %uint %72 %uint_2
         %76 = OpLoad %v4uint %71 None
         %77 = OpVectorShuffle %v2uint %76 %76 2 3
         %78 = OpVectorShuffle %v2uint %76 %76 0 1
         %79 = OpIEqual %bool %74 %uint_2
         %82 = OpCompositeConstruct %v2bool %79 %79
         %83 = OpSelect %v2uint %82 %77 %78
         %84 = OpBitcast %v2float %83
         %85 = OpIAdd %uint %uint_8 %start_byte_offset
         %87 = OpUDiv %uint %85 %uint_16
         %88 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %87
         %89 = OpBitwiseAnd %uint %85 %uint_15
         %90 = OpShiftRightLogical %uint %89 %uint_2
         %91 = OpLoad %v4uint %88 None
         %92 = OpVectorShuffle %v2uint %91 %91 2 3
         %93 = OpVectorShuffle %v2uint %91 %91 0 1
         %94 = OpIEqual %bool %90 %uint_2
         %95 = OpCompositeConstruct %v2bool %94 %94
         %96 = OpSelect %v2uint %95 %92 %93
         %97 = OpBitcast %v2float %96
         %98 = OpCompositeConstruct %mat2v2float %84 %97
               OpReturnValue %98
               OpFunctionEnd
         %39 = OpFunction %_arr_mat2v2float_uint_4 None %100
%start_byte_offset_0 = OpFunctionParameter %uint
        %101 = OpLabel
        %a_1 = OpVariable %_ptr_Function__arr_mat2v2float_uint_4 Function
               OpStore %a_1 %104
               OpBranch %105
        %105 = OpLabel
               OpBranch %108
        %108 = OpLabel
        %110 = OpPhi %uint %uint_0 %105 %111 %107
               OpLoopMerge %109 %107 None
               OpBranch %106
        %106 = OpLabel
        %113 = OpUGreaterThanEqual %bool %110 %uint_4
               OpSelectionMerge %114 None
               OpBranchConditional %113 %115 %114
        %115 = OpLabel
               OpBranch %109
        %114 = OpLabel
        %116 = OpIMul %uint %110 %uint_16
        %117 = OpIAdd %uint %start_byte_offset_0 %116
        %118 = OpAccessChain %_ptr_Function_mat2v2float %a_1 %110
        %120 = OpFunctionCall %mat2v2float %43 %117
               OpStore %118 %120 None
               OpBranch %107
        %107 = OpLabel
        %111 = OpIAdd %uint %110 %uint_1
               OpBranch %108
        %109 = OpLabel
        %112 = OpLoad %_arr_mat2v2float_uint_4 %a_1 None
               OpReturnValue %112
               OpFunctionEnd
