; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 133
; Schema: 0
               OpCapability Shader
         %33 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %17 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %28 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
    %uint_16 = OpConstant %uint 16
     %uint_1 = OpConstant %uint 1
     %uint_8 = OpConstant %uint 8
    %v2float = OpTypeVector %float 2
%mat2v2float = OpTypeMatrix %v2float 2
%_arr_mat2v2float_uint_4 = OpTypeArray %mat2v2float %uint_4
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %85 = OpTypeFunction %_arr_mat2v2float_uint_4 %uint
%_ptr_Function__arr_mat2v2float_uint_4 = OpTypePointer Function %_arr_mat2v2float_uint_4
         %89 = OpConstantNull %_arr_mat2v2float_uint_4
%_ptr_Function_mat2v2float = OpTypePointer Function %mat2v2float
        %107 = OpTypeFunction %mat2v2float %uint
          %i = OpFunction %int None %17
         %18 = OpLabel
         %19 = OpLoad %int %counter None
         %20 = OpBitcast %uint %19
         %21 = OpBitcast %uint %int_1
         %23 = OpIAdd %uint %20 %21
         %24 = OpBitcast %int %23
               OpStore %counter %24 None
         %25 = OpLoad %int %counter None
               OpReturnValue %25
               OpFunctionEnd
          %f = OpFunction %void None %28
         %29 = OpLabel
         %30 = OpFunctionCall %int %i
         %31 = OpBitcast %uint %30
         %32 = OpExtInst %uint %33 UMin %31 %uint_3
         %35 = OpIMul %uint %uint_16 %32
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %33 UMin %38 %uint_1
         %41 = OpIMul %uint %uint_8 %39
        %l_a = OpFunctionCall %_arr_mat2v2float_uint_4 %47 %uint_0
      %l_a_i = OpFunctionCall %mat2v2float %50 %35
         %51 = OpIAdd %uint %35 %41
         %52 = OpUDiv %uint %51 %uint_16
         %53 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %52
         %55 = OpUMod %uint %51 %uint_16
         %56 = OpUDiv %uint %55 %uint_4
         %57 = OpLoad %v4uint %53 None
         %58 = OpVectorShuffle %v2uint %57 %57 2 3
         %60 = OpVectorShuffle %v2uint %57 %57 0 1
         %61 = OpIEqual %bool %56 %uint_2
         %65 = OpCompositeConstruct %v2bool %61 %61
         %66 = OpSelect %v2uint %65 %58 %60
    %l_a_i_i = OpBitcast %v2float %66
         %68 = OpIAdd %uint %35 %41
         %69 = OpUDiv %uint %68 %uint_16
         %70 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %69
         %71 = OpUMod %uint %68 %uint_16
         %72 = OpUDiv %uint %71 %uint_4
         %73 = OpLoad %v4uint %70 None
         %74 = OpVectorExtractDynamic %uint %73 %72
         %75 = OpBitcast %float %74
         %76 = OpCompositeExtract %float %l_a 0 0 0
         %77 = OpFAdd %float %75 %76
         %78 = OpCompositeExtract %float %l_a_i 0 0
         %79 = OpFAdd %float %77 %78
         %80 = OpCompositeExtract %float %l_a_i_i 0
         %81 = OpFAdd %float %79 %80
         %82 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %82 %81 None
               OpReturn
               OpFunctionEnd
         %47 = OpFunction %_arr_mat2v2float_uint_4 None %85
%start_byte_offset = OpFunctionParameter %uint
         %86 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat2v2float_uint_4 Function
               OpStore %a %89
               OpBranch %90
         %90 = OpLabel
               OpBranch %93
         %93 = OpLabel
         %95 = OpPhi %uint %uint_0 %90 %96 %92
               OpLoopMerge %94 %92 None
               OpBranch %91
         %91 = OpLabel
         %98 = OpUGreaterThanEqual %bool %95 %uint_4
               OpSelectionMerge %99 None
               OpBranchConditional %98 %100 %99
        %100 = OpLabel
               OpBranch %94
         %99 = OpLabel
        %101 = OpIMul %uint %95 %uint_16
        %102 = OpIAdd %uint %start_byte_offset %101
        %103 = OpAccessChain %_ptr_Function_mat2v2float %a %95
        %105 = OpFunctionCall %mat2v2float %50 %102
               OpStore %103 %105 None
               OpBranch %92
         %92 = OpLabel
         %96 = OpIAdd %uint %95 %uint_1
               OpBranch %93
         %94 = OpLabel
         %97 = OpLoad %_arr_mat2v2float_uint_4 %a None
               OpReturnValue %97
               OpFunctionEnd
         %50 = OpFunction %mat2v2float None %107
%start_byte_offset_0 = OpFunctionParameter %uint
        %108 = OpLabel
        %109 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %110 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %109
        %111 = OpUMod %uint %start_byte_offset_0 %uint_16
        %112 = OpUDiv %uint %111 %uint_4
        %113 = OpLoad %v4uint %110 None
        %114 = OpVectorShuffle %v2uint %113 %113 2 3
        %115 = OpVectorShuffle %v2uint %113 %113 0 1
        %116 = OpIEqual %bool %112 %uint_2
        %117 = OpCompositeConstruct %v2bool %116 %116
        %118 = OpSelect %v2uint %117 %114 %115
        %119 = OpBitcast %v2float %118
        %120 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %121 = OpUDiv %uint %120 %uint_16
        %122 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %121
        %123 = OpUMod %uint %120 %uint_16
        %124 = OpUDiv %uint %123 %uint_4
        %125 = OpLoad %v4uint %122 None
        %126 = OpVectorShuffle %v2uint %125 %125 2 3
        %127 = OpVectorShuffle %v2uint %125 %125 0 1
        %128 = OpIEqual %bool %124 %uint_2
        %129 = OpCompositeConstruct %v2bool %128 %128
        %130 = OpSelect %v2uint %129 %126 %127
        %131 = OpBitcast %v2float %130
        %132 = OpCompositeConstruct %mat2v2float %119 %131
               OpReturnValue %132
               OpFunctionEnd
