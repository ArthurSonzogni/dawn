; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 116
; Schema: 0
               OpCapability Shader
         %33 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %17 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %28 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
    %uint_32 = OpConstant %uint 32
     %uint_1 = OpConstant %uint 1
    %uint_16 = OpConstant %uint 16
    %v3float = OpTypeVector %float 3
%mat2v3float = OpTypeMatrix %v3float 2
     %uint_4 = OpConstant %uint 4
%_arr_mat2v3float_uint_4 = OpTypeArray %mat2v3float %uint_4
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v3uint = OpTypeVector %uint 3
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %79 = OpTypeFunction %_arr_mat2v3float_uint_4 %uint
%_ptr_Function__arr_mat2v3float_uint_4 = OpTypePointer Function %_arr_mat2v3float_uint_4
         %83 = OpConstantNull %_arr_mat2v3float_uint_4
       %bool = OpTypeBool
%_ptr_Function_mat2v3float = OpTypePointer Function %mat2v3float
        %102 = OpTypeFunction %mat2v3float %uint
          %i = OpFunction %int None %17
         %18 = OpLabel
         %19 = OpLoad %int %counter None
         %20 = OpBitcast %uint %19
         %21 = OpBitcast %uint %int_1
         %23 = OpIAdd %uint %20 %21
         %24 = OpBitcast %int %23
               OpStore %counter %24 None
         %25 = OpLoad %int %counter None
               OpReturnValue %25
               OpFunctionEnd
          %f = OpFunction %void None %28
         %29 = OpLabel
         %30 = OpFunctionCall %int %i
         %31 = OpBitcast %uint %30
         %32 = OpExtInst %uint %33 UMin %31 %uint_3
         %35 = OpIMul %uint %uint_32 %32
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %33 UMin %38 %uint_1
         %41 = OpIMul %uint %uint_16 %39
        %l_a = OpFunctionCall %_arr_mat2v3float_uint_4 %48 %uint_0
      %l_a_i = OpFunctionCall %mat2v3float %51 %35
         %52 = OpIAdd %uint %35 %41
         %53 = OpUDiv %uint %52 %uint_16
         %54 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %53
         %56 = OpLoad %v4uint %54 None
         %57 = OpVectorShuffle %v3uint %56 %56 0 1 2
    %l_a_i_i = OpBitcast %v3float %57
         %60 = OpIAdd %uint %35 %41
         %61 = OpUDiv %uint %60 %uint_16
         %62 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %61
         %63 = OpBitwiseAnd %uint %60 %uint_15
         %65 = OpShiftRightLogical %uint %63 %uint_2
         %67 = OpLoad %v4uint %62 None
         %68 = OpVectorExtractDynamic %uint %67 %65
         %69 = OpBitcast %float %68
         %70 = OpCompositeExtract %float %l_a 0 0 0
         %71 = OpFAdd %float %69 %70
         %72 = OpCompositeExtract %float %l_a_i 0 0
         %73 = OpFAdd %float %71 %72
         %74 = OpCompositeExtract %float %l_a_i_i 0
         %75 = OpFAdd %float %73 %74
         %76 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %76 %75 None
               OpReturn
               OpFunctionEnd
         %48 = OpFunction %_arr_mat2v3float_uint_4 None %79
%start_byte_offset = OpFunctionParameter %uint
         %80 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat2v3float_uint_4 Function
               OpStore %a %83
               OpBranch %84
         %84 = OpLabel
               OpBranch %87
         %87 = OpLabel
         %89 = OpPhi %uint %uint_0 %84 %90 %86
               OpLoopMerge %88 %86 None
               OpBranch %85
         %85 = OpLabel
         %92 = OpUGreaterThanEqual %bool %89 %uint_4
               OpSelectionMerge %94 None
               OpBranchConditional %92 %95 %94
         %95 = OpLabel
               OpBranch %88
         %94 = OpLabel
         %96 = OpIMul %uint %89 %uint_32
         %97 = OpIAdd %uint %start_byte_offset %96
         %98 = OpAccessChain %_ptr_Function_mat2v3float %a %89
        %100 = OpFunctionCall %mat2v3float %51 %97
               OpStore %98 %100 None
               OpBranch %86
         %86 = OpLabel
         %90 = OpIAdd %uint %89 %uint_1
               OpBranch %87
         %88 = OpLabel
         %91 = OpLoad %_arr_mat2v3float_uint_4 %a None
               OpReturnValue %91
               OpFunctionEnd
         %51 = OpFunction %mat2v3float None %102
%start_byte_offset_0 = OpFunctionParameter %uint
        %103 = OpLabel
        %104 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %105 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %104
        %106 = OpLoad %v4uint %105 None
        %107 = OpVectorShuffle %v3uint %106 %106 0 1 2
        %108 = OpBitcast %v3float %107
        %109 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %110 = OpUDiv %uint %109 %uint_16
        %111 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %110
        %112 = OpLoad %v4uint %111 None
        %113 = OpVectorShuffle %v3uint %112 %112 0 1 2
        %114 = OpBitcast %v3float %113
        %115 = OpCompositeConstruct %mat2v3float %108 %114
               OpReturnValue %115
               OpFunctionEnd
