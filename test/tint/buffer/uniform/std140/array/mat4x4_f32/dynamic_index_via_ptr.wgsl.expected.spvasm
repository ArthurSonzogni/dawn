; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 121
; Schema: 0
               OpCapability Shader
         %33 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_16 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_16 = OpConstant %uint 16
%_arr_v4uint_uint_16 = OpTypeArray %v4uint %uint_16
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_16
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %17 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %28 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
    %uint_64 = OpConstant %uint 64
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v4float_uint_4 = OpTypeArray %mat4v4float %uint_4
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %73 = OpTypeFunction %_arr_mat4v4float_uint_4 %uint
%_ptr_Function__arr_mat4v4float_uint_4 = OpTypePointer Function %_arr_mat4v4float_uint_4
         %77 = OpConstantNull %_arr_mat4v4float_uint_4
       %bool = OpTypeBool
%_ptr_Function_mat4v4float = OpTypePointer Function %mat4v4float
     %uint_1 = OpConstant %uint 1
         %97 = OpTypeFunction %mat4v4float %uint
    %uint_32 = OpConstant %uint 32
    %uint_48 = OpConstant %uint 48
          %i = OpFunction %int None %17
         %18 = OpLabel
         %19 = OpLoad %int %counter None
         %20 = OpBitcast %uint %19
         %21 = OpBitcast %uint %int_1
         %23 = OpIAdd %uint %20 %21
         %24 = OpBitcast %int %23
               OpStore %counter %24 None
         %25 = OpLoad %int %counter None
               OpReturnValue %25
               OpFunctionEnd
          %f = OpFunction %void None %28
         %29 = OpLabel
         %30 = OpFunctionCall %int %i
         %31 = OpBitcast %uint %30
         %32 = OpExtInst %uint %33 UMin %31 %uint_3
         %35 = OpIMul %uint %uint_64 %32
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %33 UMin %38 %uint_3
         %40 = OpIMul %uint %uint_16 %39
        %l_a = OpFunctionCall %_arr_mat4v4float_uint_4 %46 %uint_0
      %l_a_i = OpFunctionCall %mat4v4float %49 %35
         %50 = OpIAdd %uint %35 %40
         %51 = OpUDiv %uint %50 %uint_16
         %52 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %51
         %54 = OpLoad %v4uint %52 None
    %l_a_i_i = OpBitcast %v4float %54
         %56 = OpIAdd %uint %35 %40
         %57 = OpUDiv %uint %56 %uint_16
         %58 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %57
         %59 = OpUMod %uint %56 %uint_16
         %60 = OpUDiv %uint %59 %uint_4
         %61 = OpLoad %v4uint %58 None
         %62 = OpVectorExtractDynamic %uint %61 %60
         %63 = OpBitcast %float %62
         %64 = OpCompositeExtract %float %l_a 0 0 0
         %65 = OpFAdd %float %63 %64
         %66 = OpCompositeExtract %float %l_a_i 0 0
         %67 = OpFAdd %float %65 %66
         %68 = OpCompositeExtract %float %l_a_i_i 0
         %69 = OpFAdd %float %67 %68
         %70 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %70 %69 None
               OpReturn
               OpFunctionEnd
         %46 = OpFunction %_arr_mat4v4float_uint_4 None %73
%start_byte_offset = OpFunctionParameter %uint
         %74 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v4float_uint_4 Function
               OpStore %a %77
               OpBranch %78
         %78 = OpLabel
               OpBranch %81
         %81 = OpLabel
         %83 = OpPhi %uint %uint_0 %78 %84 %80
               OpLoopMerge %82 %80 None
               OpBranch %79
         %79 = OpLabel
         %86 = OpUGreaterThanEqual %bool %83 %uint_4
               OpSelectionMerge %88 None
               OpBranchConditional %86 %89 %88
         %89 = OpLabel
               OpBranch %82
         %88 = OpLabel
         %90 = OpIMul %uint %83 %uint_64
         %91 = OpIAdd %uint %start_byte_offset %90
         %92 = OpAccessChain %_ptr_Function_mat4v4float %a %83
         %94 = OpFunctionCall %mat4v4float %49 %91
               OpStore %92 %94 None
               OpBranch %80
         %80 = OpLabel
         %84 = OpIAdd %uint %83 %uint_1
               OpBranch %81
         %82 = OpLabel
         %85 = OpLoad %_arr_mat4v4float_uint_4 %a None
               OpReturnValue %85
               OpFunctionEnd
         %49 = OpFunction %mat4v4float None %97
%start_byte_offset_0 = OpFunctionParameter %uint
         %98 = OpLabel
         %99 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %100 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %99
        %101 = OpLoad %v4uint %100 None
        %102 = OpBitcast %v4float %101
        %103 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %104 = OpUDiv %uint %103 %uint_16
        %105 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %104
        %106 = OpLoad %v4uint %105 None
        %107 = OpBitcast %v4float %106
        %108 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %110 = OpUDiv %uint %108 %uint_16
        %111 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %110
        %112 = OpLoad %v4uint %111 None
        %113 = OpBitcast %v4float %112
        %114 = OpIAdd %uint %uint_48 %start_byte_offset_0
        %116 = OpUDiv %uint %114 %uint_16
        %117 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %116
        %118 = OpLoad %v4uint %117 None
        %119 = OpBitcast %v4float %118
        %120 = OpCompositeConstruct %mat4v4float %102 %107 %113 %119
               OpReturnValue %120
               OpFunctionEnd
