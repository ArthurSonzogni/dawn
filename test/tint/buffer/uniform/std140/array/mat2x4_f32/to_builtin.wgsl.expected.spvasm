; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 58
; Schema: 0
               OpCapability Shader
         %32 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %t "t"
               OpName %l "l"
               OpName %a "a"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
    %v4float = OpTypeVector %float 4
%mat2v4float = OpTypeMatrix %v4float 2
    %uint_64 = OpConstant %uint 64
    %v2float = OpTypeVector %float 2
%mat4v2float = OpTypeMatrix %v2float 4
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %45 = OpTypeFunction %mat2v4float %uint
    %uint_16 = OpConstant %uint 16
          %f = OpFunction %void None %14
         %15 = OpLabel
         %16 = OpFunctionCall %mat2v4float %19 %uint_64
          %t = OpTranspose %mat4v2float %16
         %24 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %28 = OpLoad %v4uint %24 None
         %29 = OpBitcast %v4float %28
         %30 = OpVectorShuffle %v4float %29 %29 1 3 0 2
          %l = OpExtInst %float %32 Length %30
         %33 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_1
         %34 = OpLoad %v4uint %33 None
         %35 = OpBitcast %v4float %34
         %36 = OpVectorShuffle %v4float %35 %35 1 3 0 2
         %37 = OpCompositeExtract %float %36 0
          %a = OpExtInst %float %32 FAbs %37
         %39 = OpCompositeExtract %float %t 0 0
         %40 = OpFAdd %float %39 %l
         %41 = OpFAdd %float %40 %a
         %42 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %42 %41 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat2v4float None %45
%start_byte_offset = OpFunctionParameter %uint
         %46 = OpLabel
         %47 = OpUDiv %uint %start_byte_offset %uint_16
         %49 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %47
         %50 = OpLoad %v4uint %49 None
         %51 = OpBitcast %v4float %50
         %52 = OpIAdd %uint %uint_16 %start_byte_offset
         %53 = OpUDiv %uint %52 %uint_16
         %54 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %53
         %55 = OpLoad %v4uint %54 None
         %56 = OpBitcast %v4float %55
         %57 = OpCompositeConstruct %mat2v4float %51 %56
               OpReturnValue %57
               OpFunctionEnd
