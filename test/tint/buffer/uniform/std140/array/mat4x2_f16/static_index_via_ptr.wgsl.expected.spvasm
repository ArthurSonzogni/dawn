; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 107
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
     %v2half = OpTypeVector %half 2
 %mat4v2half = OpTypeMatrix %v2half 4
%_arr_mat4v2half_uint_4 = OpTypeArray %mat4v2half %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_32 = OpConstant %uint 32
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_2 = OpConstant %uint 2
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %45 = OpTypeFunction %_arr_mat4v2half_uint_4 %uint
%_ptr_Function__arr_mat4v2half_uint_4 = OpTypePointer Function %_arr_mat4v2half_uint_4
         %49 = OpConstantNull %_arr_mat4v2half_uint_4
       %bool = OpTypeBool
    %uint_16 = OpConstant %uint 16
%_ptr_Function_mat4v2half = OpTypePointer Function %mat4v2half
     %uint_1 = OpConstant %uint 1
         %70 = OpTypeFunction %mat4v2half %uint
    %uint_15 = OpConstant %uint 15
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
          %f = OpFunction %void None %14
         %15 = OpLabel
        %l_a = OpFunctionCall %_arr_mat4v2half_uint_4 %20 %uint_0
      %l_a_i = OpFunctionCall %mat4v2half %23 %uint_32
         %25 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %28 = OpLoad %v4uint %25 None
         %29 = OpCompositeExtract %uint %28 1
    %l_a_i_i = OpBitcast %v2half %29
         %31 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %32 = OpLoad %v4uint %31 None
         %33 = OpCompositeExtract %uint %32 1
         %34 = OpBitcast %v2half %33
         %35 = OpCompositeExtract %half %34 0
         %36 = OpCompositeExtract %half %l_a 0 0 0
         %37 = OpFAdd %half %35 %36
         %38 = OpCompositeExtract %half %l_a_i 0 0
         %39 = OpFAdd %half %37 %38
         %40 = OpCompositeExtract %half %l_a_i_i 0
         %41 = OpFAdd %half %39 %40
         %42 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %42 %41 None
               OpReturn
               OpFunctionEnd
         %20 = OpFunction %_arr_mat4v2half_uint_4 None %45
%start_byte_offset = OpFunctionParameter %uint
         %46 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v2half_uint_4 Function
               OpStore %a %49
               OpBranch %50
         %50 = OpLabel
               OpBranch %53
         %53 = OpLabel
         %55 = OpPhi %uint %uint_0 %50 %56 %52
               OpLoopMerge %54 %52 None
               OpBranch %51
         %51 = OpLabel
         %58 = OpUGreaterThanEqual %bool %55 %uint_4
               OpSelectionMerge %60 None
               OpBranchConditional %58 %61 %60
         %61 = OpLabel
               OpBranch %54
         %60 = OpLabel
         %62 = OpIMul %uint %55 %uint_16
         %64 = OpIAdd %uint %start_byte_offset %62
         %65 = OpAccessChain %_ptr_Function_mat4v2half %a %55
         %67 = OpFunctionCall %mat4v2half %23 %64
               OpStore %65 %67 None
               OpBranch %52
         %52 = OpLabel
         %56 = OpIAdd %uint %55 %uint_1
               OpBranch %53
         %54 = OpLabel
         %57 = OpLoad %_arr_mat4v2half_uint_4 %a None
               OpReturnValue %57
               OpFunctionEnd
         %23 = OpFunction %mat4v2half None %70
%start_byte_offset_0 = OpFunctionParameter %uint
         %71 = OpLabel
         %72 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %73 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %72
         %74 = OpBitwiseAnd %uint %start_byte_offset_0 %uint_15
         %76 = OpShiftRightLogical %uint %74 %uint_2
         %77 = OpLoad %v4uint %73 None
         %78 = OpVectorExtractDynamic %uint %77 %76
         %79 = OpBitcast %v2half %78
         %80 = OpIAdd %uint %uint_4 %start_byte_offset_0
         %81 = OpUDiv %uint %80 %uint_16
         %82 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %81
         %83 = OpBitwiseAnd %uint %80 %uint_15
         %84 = OpShiftRightLogical %uint %83 %uint_2
         %85 = OpLoad %v4uint %82 None
         %86 = OpVectorExtractDynamic %uint %85 %84
         %87 = OpBitcast %v2half %86
         %88 = OpIAdd %uint %uint_8 %start_byte_offset_0
         %90 = OpUDiv %uint %88 %uint_16
         %91 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %90
         %92 = OpBitwiseAnd %uint %88 %uint_15
         %93 = OpShiftRightLogical %uint %92 %uint_2
         %94 = OpLoad %v4uint %91 None
         %95 = OpVectorExtractDynamic %uint %94 %93
         %96 = OpBitcast %v2half %95
         %97 = OpIAdd %uint %uint_12 %start_byte_offset_0
         %99 = OpUDiv %uint %97 %uint_16
        %100 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %99
        %101 = OpBitwiseAnd %uint %97 %uint_15
        %102 = OpShiftRightLogical %uint %101 %uint_2
        %103 = OpLoad %v4uint %100 None
        %104 = OpVectorExtractDynamic %uint %103 %102
        %105 = OpBitcast %v2half %104
        %106 = OpCompositeConstruct %mat4v2half %79 %87 %96 %105
               OpReturnValue %106
               OpFunctionEnd
