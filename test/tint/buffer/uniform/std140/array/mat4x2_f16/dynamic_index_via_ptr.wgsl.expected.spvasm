; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 139
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %33 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %17 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %28 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
    %uint_16 = OpConstant %uint 16
     %v2half = OpTypeVector %half 2
 %mat4v2half = OpTypeMatrix %v2half 4
%_arr_mat4v2half_uint_4 = OpTypeArray %mat4v2half %uint_4
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
       %bool = OpTypeBool
     %uint_1 = OpConstant %uint 1
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %81 = OpTypeFunction %_arr_mat4v2half_uint_4 %uint
%_ptr_Function__arr_mat4v2half_uint_4 = OpTypePointer Function %_arr_mat4v2half_uint_4
         %85 = OpConstantNull %_arr_mat4v2half_uint_4
%_ptr_Function_mat4v2half = OpTypePointer Function %mat4v2half
        %103 = OpTypeFunction %mat4v2half %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
          %i = OpFunction %int None %17
         %18 = OpLabel
         %19 = OpLoad %int %counter None
         %20 = OpBitcast %uint %19
         %21 = OpBitcast %uint %int_1
         %23 = OpIAdd %uint %20 %21
         %24 = OpBitcast %int %23
               OpStore %counter %24 None
         %25 = OpLoad %int %counter None
               OpReturnValue %25
               OpFunctionEnd
          %f = OpFunction %void None %28
         %29 = OpLabel
         %30 = OpFunctionCall %int %i
         %31 = OpBitcast %uint %30
         %32 = OpExtInst %uint %33 UMin %31 %uint_3
         %35 = OpIMul %uint %uint_16 %32
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %33 UMin %38 %uint_3
         %40 = OpIMul %uint %uint_4 %39
        %l_a = OpFunctionCall %_arr_mat4v2half_uint_4 %45 %uint_0
      %l_a_i = OpFunctionCall %mat4v2half %48 %35
         %49 = OpIAdd %uint %35 %40
         %50 = OpUDiv %uint %49 %uint_16
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %50
         %53 = OpUMod %uint %49 %uint_16
         %54 = OpUDiv %uint %53 %uint_4
         %55 = OpLoad %v4uint %51 None
         %56 = OpVectorExtractDynamic %uint %55 %54
    %l_a_i_i = OpBitcast %v2half %56
         %58 = OpIAdd %uint %35 %40
         %59 = OpUDiv %uint %58 %uint_16
         %60 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %59
         %61 = OpUMod %uint %58 %uint_16
         %62 = OpUDiv %uint %61 %uint_4
         %63 = OpLoad %v4uint %60 None
         %64 = OpVectorExtractDynamic %uint %63 %62
         %65 = OpUMod %uint %58 %uint_4
         %66 = OpIEqual %bool %65 %uint_0
         %68 = OpSelect %uint %66 %uint_0 %uint_1
         %70 = OpBitcast %v2half %64
         %71 = OpVectorExtractDynamic %half %70 %68
         %72 = OpCompositeExtract %half %l_a 0 0 0
         %73 = OpFAdd %half %71 %72
         %74 = OpCompositeExtract %half %l_a_i 0 0
         %75 = OpFAdd %half %73 %74
         %76 = OpCompositeExtract %half %l_a_i_i 0
         %77 = OpFAdd %half %75 %76
         %78 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %78 %77 None
               OpReturn
               OpFunctionEnd
         %45 = OpFunction %_arr_mat4v2half_uint_4 None %81
%start_byte_offset = OpFunctionParameter %uint
         %82 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v2half_uint_4 Function
               OpStore %a %85
               OpBranch %86
         %86 = OpLabel
               OpBranch %89
         %89 = OpLabel
         %91 = OpPhi %uint %uint_0 %86 %92 %88
               OpLoopMerge %90 %88 None
               OpBranch %87
         %87 = OpLabel
         %94 = OpUGreaterThanEqual %bool %91 %uint_4
               OpSelectionMerge %95 None
               OpBranchConditional %94 %96 %95
         %96 = OpLabel
               OpBranch %90
         %95 = OpLabel
         %97 = OpIMul %uint %91 %uint_16
         %98 = OpIAdd %uint %start_byte_offset %97
         %99 = OpAccessChain %_ptr_Function_mat4v2half %a %91
        %101 = OpFunctionCall %mat4v2half %48 %98
               OpStore %99 %101 None
               OpBranch %88
         %88 = OpLabel
         %92 = OpIAdd %uint %91 %uint_1
               OpBranch %89
         %90 = OpLabel
         %93 = OpLoad %_arr_mat4v2half_uint_4 %a None
               OpReturnValue %93
               OpFunctionEnd
         %48 = OpFunction %mat4v2half None %103
%start_byte_offset_0 = OpFunctionParameter %uint
        %104 = OpLabel
        %105 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %106 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %105
        %107 = OpUMod %uint %start_byte_offset_0 %uint_16
        %108 = OpUDiv %uint %107 %uint_4
        %109 = OpLoad %v4uint %106 None
        %110 = OpVectorExtractDynamic %uint %109 %108
        %111 = OpBitcast %v2half %110
        %112 = OpIAdd %uint %uint_4 %start_byte_offset_0
        %113 = OpUDiv %uint %112 %uint_16
        %114 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %113
        %115 = OpUMod %uint %112 %uint_16
        %116 = OpUDiv %uint %115 %uint_4
        %117 = OpLoad %v4uint %114 None
        %118 = OpVectorExtractDynamic %uint %117 %116
        %119 = OpBitcast %v2half %118
        %120 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %122 = OpUDiv %uint %120 %uint_16
        %123 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %122
        %124 = OpUMod %uint %120 %uint_16
        %125 = OpUDiv %uint %124 %uint_4
        %126 = OpLoad %v4uint %123 None
        %127 = OpVectorExtractDynamic %uint %126 %125
        %128 = OpBitcast %v2half %127
        %129 = OpIAdd %uint %uint_12 %start_byte_offset_0
        %131 = OpUDiv %uint %129 %uint_16
        %132 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %131
        %133 = OpUMod %uint %129 %uint_16
        %134 = OpUDiv %uint %133 %uint_4
        %135 = OpLoad %v4uint %132 None
        %136 = OpVectorExtractDynamic %uint %135 %134
        %137 = OpBitcast %v2half %136
        %138 = OpCompositeConstruct %mat4v2half %111 %119 %128 %137
               OpReturnValue %138
               OpFunctionEnd
