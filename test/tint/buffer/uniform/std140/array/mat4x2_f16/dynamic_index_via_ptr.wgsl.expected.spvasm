; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 141
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %33 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %counter "counter"
               OpName %i "i"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
        %int = OpTypeInt 32 1
%_ptr_Private_int = OpTypePointer Private %int
      %int_0 = OpConstant %int 0
    %counter = OpVariable %_ptr_Private_int Private %int_0
         %17 = OpTypeFunction %int
      %int_1 = OpConstant %int 1
       %void = OpTypeVoid
         %28 = OpTypeFunction %void
     %uint_3 = OpConstant %uint 3
    %uint_16 = OpConstant %uint 16
     %v2half = OpTypeVector %half 2
 %mat4v2half = OpTypeMatrix %v2half 4
%_arr_mat4v2half_uint_4 = OpTypeArray %mat4v2half %uint_4
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %uint_1 = OpConstant %uint 1
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %83 = OpTypeFunction %_arr_mat4v2half_uint_4 %uint
%_ptr_Function__arr_mat4v2half_uint_4 = OpTypePointer Function %_arr_mat4v2half_uint_4
         %87 = OpConstantNull %_arr_mat4v2half_uint_4
%_ptr_Function_mat4v2half = OpTypePointer Function %mat4v2half
        %105 = OpTypeFunction %mat4v2half %uint
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
          %i = OpFunction %int None %17
         %18 = OpLabel
         %19 = OpLoad %int %counter None
         %20 = OpBitcast %uint %19
         %21 = OpBitcast %uint %int_1
         %23 = OpIAdd %uint %20 %21
         %24 = OpBitcast %int %23
               OpStore %counter %24 None
         %25 = OpLoad %int %counter None
               OpReturnValue %25
               OpFunctionEnd
          %f = OpFunction %void None %28
         %29 = OpLabel
         %30 = OpFunctionCall %int %i
         %31 = OpBitcast %uint %30
         %32 = OpExtInst %uint %33 UMin %31 %uint_3
         %35 = OpIMul %uint %uint_16 %32
         %37 = OpFunctionCall %int %i
         %38 = OpBitcast %uint %37
         %39 = OpExtInst %uint %33 UMin %38 %uint_3
         %40 = OpIMul %uint %uint_4 %39
        %l_a = OpFunctionCall %_arr_mat4v2half_uint_4 %45 %uint_0
      %l_a_i = OpFunctionCall %mat4v2half %48 %35
         %49 = OpIAdd %uint %35 %40
         %50 = OpUDiv %uint %49 %uint_16
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %50
         %53 = OpBitwiseAnd %uint %49 %uint_15
         %55 = OpShiftRightLogical %uint %53 %uint_2
         %57 = OpLoad %v4uint %51 None
         %58 = OpVectorExtractDynamic %uint %57 %55
    %l_a_i_i = OpBitcast %v2half %58
         %60 = OpIAdd %uint %35 %40
         %61 = OpUDiv %uint %60 %uint_16
         %62 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %61
         %63 = OpBitwiseAnd %uint %60 %uint_15
         %64 = OpShiftRightLogical %uint %63 %uint_2
         %65 = OpLoad %v4uint %62 None
         %66 = OpVectorExtractDynamic %uint %65 %64
         %67 = OpUMod %uint %60 %uint_4
         %68 = OpIEqual %bool %67 %uint_0
         %70 = OpSelect %uint %68 %uint_0 %uint_1
         %72 = OpBitcast %v2half %66
         %73 = OpVectorExtractDynamic %half %72 %70
         %74 = OpCompositeExtract %half %l_a 0 0 0
         %75 = OpFAdd %half %73 %74
         %76 = OpCompositeExtract %half %l_a_i 0 0
         %77 = OpFAdd %half %75 %76
         %78 = OpCompositeExtract %half %l_a_i_i 0
         %79 = OpFAdd %half %77 %78
         %80 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %80 %79 None
               OpReturn
               OpFunctionEnd
         %45 = OpFunction %_arr_mat4v2half_uint_4 None %83
%start_byte_offset = OpFunctionParameter %uint
         %84 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v2half_uint_4 Function
               OpStore %a %87
               OpBranch %88
         %88 = OpLabel
               OpBranch %91
         %91 = OpLabel
         %93 = OpPhi %uint %uint_0 %88 %94 %90
               OpLoopMerge %92 %90 None
               OpBranch %89
         %89 = OpLabel
         %96 = OpUGreaterThanEqual %bool %93 %uint_4
               OpSelectionMerge %97 None
               OpBranchConditional %96 %98 %97
         %98 = OpLabel
               OpBranch %92
         %97 = OpLabel
         %99 = OpIMul %uint %93 %uint_16
        %100 = OpIAdd %uint %start_byte_offset %99
        %101 = OpAccessChain %_ptr_Function_mat4v2half %a %93
        %103 = OpFunctionCall %mat4v2half %48 %100
               OpStore %101 %103 None
               OpBranch %90
         %90 = OpLabel
         %94 = OpIAdd %uint %93 %uint_1
               OpBranch %91
         %92 = OpLabel
         %95 = OpLoad %_arr_mat4v2half_uint_4 %a None
               OpReturnValue %95
               OpFunctionEnd
         %48 = OpFunction %mat4v2half None %105
%start_byte_offset_0 = OpFunctionParameter %uint
        %106 = OpLabel
        %107 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %108 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %107
        %109 = OpBitwiseAnd %uint %start_byte_offset_0 %uint_15
        %110 = OpShiftRightLogical %uint %109 %uint_2
        %111 = OpLoad %v4uint %108 None
        %112 = OpVectorExtractDynamic %uint %111 %110
        %113 = OpBitcast %v2half %112
        %114 = OpIAdd %uint %uint_4 %start_byte_offset_0
        %115 = OpUDiv %uint %114 %uint_16
        %116 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %115
        %117 = OpBitwiseAnd %uint %114 %uint_15
        %118 = OpShiftRightLogical %uint %117 %uint_2
        %119 = OpLoad %v4uint %116 None
        %120 = OpVectorExtractDynamic %uint %119 %118
        %121 = OpBitcast %v2half %120
        %122 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %124 = OpUDiv %uint %122 %uint_16
        %125 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %124
        %126 = OpBitwiseAnd %uint %122 %uint_15
        %127 = OpShiftRightLogical %uint %126 %uint_2
        %128 = OpLoad %v4uint %125 None
        %129 = OpVectorExtractDynamic %uint %128 %127
        %130 = OpBitcast %v2half %129
        %131 = OpIAdd %uint %uint_12 %start_byte_offset_0
        %133 = OpUDiv %uint %131 %uint_16
        %134 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %133
        %135 = OpBitwiseAnd %uint %131 %uint_15
        %136 = OpShiftRightLogical %uint %135 %uint_2
        %137 = OpLoad %v4uint %134 None
        %138 = OpVectorExtractDynamic %uint %137 %136
        %139 = OpBitcast %v2half %138
        %140 = OpCompositeConstruct %mat4v2half %113 %121 %130 %139
               OpReturnValue %140
               OpFunctionEnd
