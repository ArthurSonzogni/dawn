; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 85
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %32 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %t "t"
               OpName %l "l"
               OpName %a "a"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
     %v2half = OpTypeVector %half 2
 %mat4v2half = OpTypeMatrix %v2half 4
    %uint_32 = OpConstant %uint 32
     %v4half = OpTypeVector %half 4
 %mat2v4half = OpTypeMatrix %v4half 2
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %46 = OpTypeFunction %mat4v2half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
          %f = OpFunction %void None %14
         %15 = OpLabel
         %16 = OpFunctionCall %mat4v2half %19 %uint_32
          %t = OpTranspose %mat2v4half %16
         %24 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %27 = OpLoad %v4uint %24 None
         %28 = OpCompositeExtract %uint %27 1
         %29 = OpBitcast %v2half %28
         %30 = OpVectorShuffle %v2half %29 %29 1 0
          %l = OpExtInst %half %32 Length %30
         %33 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %34 = OpLoad %v4uint %33 None
         %35 = OpCompositeExtract %uint %34 1
         %36 = OpBitcast %v2half %35
         %37 = OpVectorShuffle %v2half %36 %36 1 0
         %38 = OpCompositeExtract %half %37 0
          %a = OpExtInst %half %32 FAbs %38
         %40 = OpCompositeExtract %half %t 0 0
         %41 = OpFAdd %half %40 %l
         %42 = OpFAdd %half %41 %a
         %43 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %43 %42 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat4v2half None %46
%start_byte_offset = OpFunctionParameter %uint
         %47 = OpLabel
         %48 = OpUDiv %uint %start_byte_offset %uint_16
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %48
         %51 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %53 = OpShiftRightLogical %uint %51 %uint_2
         %55 = OpLoad %v4uint %50 None
         %56 = OpVectorExtractDynamic %uint %55 %53
         %57 = OpBitcast %v2half %56
         %58 = OpIAdd %uint %uint_4 %start_byte_offset
         %59 = OpUDiv %uint %58 %uint_16
         %60 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %59
         %61 = OpBitwiseAnd %uint %58 %uint_15
         %62 = OpShiftRightLogical %uint %61 %uint_2
         %63 = OpLoad %v4uint %60 None
         %64 = OpVectorExtractDynamic %uint %63 %62
         %65 = OpBitcast %v2half %64
         %66 = OpIAdd %uint %uint_8 %start_byte_offset
         %68 = OpUDiv %uint %66 %uint_16
         %69 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %68
         %70 = OpBitwiseAnd %uint %66 %uint_15
         %71 = OpShiftRightLogical %uint %70 %uint_2
         %72 = OpLoad %v4uint %69 None
         %73 = OpVectorExtractDynamic %uint %72 %71
         %74 = OpBitcast %v2half %73
         %75 = OpIAdd %uint %uint_12 %start_byte_offset
         %77 = OpUDiv %uint %75 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpBitwiseAnd %uint %75 %uint_15
         %80 = OpShiftRightLogical %uint %79 %uint_2
         %81 = OpLoad %v4uint %78 None
         %82 = OpVectorExtractDynamic %uint %81 %80
         %83 = OpBitcast %v2half %82
         %84 = OpCompositeConstruct %mat4v2half %57 %65 %74 %83
               OpReturnValue %84
               OpFunctionEnd
