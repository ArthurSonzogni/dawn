; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 134
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
     %v4half = OpTypeVector %half 4
 %mat4v4half = OpTypeMatrix %v4half 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v4half_uint_4 = OpTypeArray %mat4v4half %uint_4
%_ptr_Private__arr_mat4v4half_uint_4 = OpTypePointer Private %_arr_mat4v4half_uint_4
         %18 = OpConstantNull %_arr_mat4v4half_uint_4
          %p = OpVariable %_ptr_Private__arr_mat4v4half_uint_4 Private %18
       %void = OpTypeVoid
         %21 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_mat4v4half = OpTypePointer Private %mat4v4half
     %uint_1 = OpConstant %uint 1
    %uint_64 = OpConstant %uint 64
%_ptr_Private_v4half = OpTypePointer Private %v4half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v2half = OpTypeVector %half 2
%_ptr_Private_half = OpTypePointer Private %half
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %56 = OpTypeFunction %mat4v4half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %113 = OpTypeFunction %_arr_mat4v4half_uint_4 %uint
%_ptr_Function__arr_mat4v4half_uint_4 = OpTypePointer Function %_arr_mat4v4half_uint_4
    %uint_32 = OpConstant %uint 32
%_ptr_Function_mat4v4half = OpTypePointer Function %mat4v4half
          %f = OpFunction %void None %21
         %22 = OpLabel
         %23 = OpFunctionCall %_arr_mat4v4half_uint_4 %24 %uint_0
               OpStore %p %23 None
         %26 = OpAccessChain %_ptr_Private_mat4v4half %p %uint_1
         %29 = OpFunctionCall %mat4v4half %30 %uint_64
               OpStore %26 %29 None
         %32 = OpAccessChain %_ptr_Private_v4half %p %uint_1 %uint_0
         %34 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %36 = OpLoad %v4uint %34 None
         %37 = OpVectorShuffle %v2uint %36 %36 2 3
         %39 = OpBitcast %v4half %37
         %40 = OpVectorShuffle %v4half %39 %39 1 3 0 2
               OpStore %32 %40 None
         %41 = OpAccessChain %_ptr_Private_v4half %p %uint_1 %uint_0
         %42 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %43 = OpLoad %v4uint %42 None
         %44 = OpCompositeExtract %uint %43 2
         %46 = OpBitcast %v2half %44
         %47 = OpCompositeExtract %half %46 0
         %48 = OpAccessChain %_ptr_Private_half %41 %uint_0
               OpStore %48 %47 None
         %50 = OpAccessChain %_ptr_Private_v4half %p %uint_1 %uint_0
         %51 = OpAccessChain %_ptr_Private_half %50 %uint_0
         %52 = OpLoad %half %51 None
         %53 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %53 %52 None
               OpReturn
               OpFunctionEnd
         %30 = OpFunction %mat4v4half None %56
%start_byte_offset = OpFunctionParameter %uint
         %57 = OpLabel
         %58 = OpUDiv %uint %start_byte_offset %uint_16
         %60 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %58
         %61 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %63 = OpShiftRightLogical %uint %61 %uint_2
         %65 = OpLoad %v4uint %60 None
         %66 = OpVectorShuffle %v2uint %65 %65 2 3
         %67 = OpVectorShuffle %v2uint %65 %65 0 1
         %68 = OpIEqual %bool %63 %uint_2
         %71 = OpCompositeConstruct %v2bool %68 %68
         %72 = OpSelect %v2uint %71 %66 %67
         %73 = OpBitcast %v4half %72
         %74 = OpIAdd %uint %uint_8 %start_byte_offset
         %75 = OpUDiv %uint %74 %uint_16
         %76 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %75
         %77 = OpBitwiseAnd %uint %74 %uint_15
         %78 = OpShiftRightLogical %uint %77 %uint_2
         %79 = OpLoad %v4uint %76 None
         %80 = OpVectorShuffle %v2uint %79 %79 2 3
         %81 = OpVectorShuffle %v2uint %79 %79 0 1
         %82 = OpIEqual %bool %78 %uint_2
         %83 = OpCompositeConstruct %v2bool %82 %82
         %84 = OpSelect %v2uint %83 %80 %81
         %85 = OpBitcast %v4half %84
         %86 = OpIAdd %uint %uint_16 %start_byte_offset
         %87 = OpUDiv %uint %86 %uint_16
         %88 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %87
         %89 = OpBitwiseAnd %uint %86 %uint_15
         %90 = OpShiftRightLogical %uint %89 %uint_2
         %91 = OpLoad %v4uint %88 None
         %92 = OpVectorShuffle %v2uint %91 %91 2 3
         %93 = OpVectorShuffle %v2uint %91 %91 0 1
         %94 = OpIEqual %bool %90 %uint_2
         %95 = OpCompositeConstruct %v2bool %94 %94
         %96 = OpSelect %v2uint %95 %92 %93
         %97 = OpBitcast %v4half %96
         %98 = OpIAdd %uint %uint_24 %start_byte_offset
        %100 = OpUDiv %uint %98 %uint_16
        %101 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %100
        %102 = OpBitwiseAnd %uint %98 %uint_15
        %103 = OpShiftRightLogical %uint %102 %uint_2
        %104 = OpLoad %v4uint %101 None
        %105 = OpVectorShuffle %v2uint %104 %104 2 3
        %106 = OpVectorShuffle %v2uint %104 %104 0 1
        %107 = OpIEqual %bool %103 %uint_2
        %108 = OpCompositeConstruct %v2bool %107 %107
        %109 = OpSelect %v2uint %108 %105 %106
        %110 = OpBitcast %v4half %109
        %111 = OpCompositeConstruct %mat4v4half %73 %85 %97 %110
               OpReturnValue %111
               OpFunctionEnd
         %24 = OpFunction %_arr_mat4v4half_uint_4 None %113
%start_byte_offset_0 = OpFunctionParameter %uint
        %114 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v4half_uint_4 Function
               OpStore %a %18
               OpBranch %117
        %117 = OpLabel
               OpBranch %120
        %120 = OpLabel
        %122 = OpPhi %uint %uint_0 %117 %123 %119
               OpLoopMerge %121 %119 None
               OpBranch %118
        %118 = OpLabel
        %125 = OpUGreaterThanEqual %bool %122 %uint_4
               OpSelectionMerge %126 None
               OpBranchConditional %125 %127 %126
        %127 = OpLabel
               OpBranch %121
        %126 = OpLabel
        %128 = OpIMul %uint %122 %uint_32
        %130 = OpIAdd %uint %start_byte_offset_0 %128
        %131 = OpAccessChain %_ptr_Function_mat4v4half %a %122
        %133 = OpFunctionCall %mat4v4half %30 %130
               OpStore %131 %133 None
               OpBranch %119
        %119 = OpLabel
        %123 = OpIAdd %uint %122 %uint_1
               OpBranch %120
        %121 = OpLabel
        %124 = OpLoad %_arr_mat4v4half_uint_4 %a None
               OpReturnValue %124
               OpFunctionEnd
