; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 148
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat4v4half = OpTypeMatrix %v4half 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v4half_uint_4 = OpTypeArray %mat4v4half %uint_4
%_ptr_Workgroup__arr_mat4v4half_uint_4 = OpTypePointer Workgroup %_arr_mat4v4half_uint_4
          %w = OpVariable %_ptr_Workgroup__arr_mat4v4half_uint_4 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %20 = OpTypeFunction %void %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_mat4v4half = OpTypePointer Workgroup %mat4v4half
     %uint_1 = OpConstant %uint 1
    %uint_64 = OpConstant %uint 64
%_ptr_Workgroup_v4half = OpTypePointer Workgroup %v4half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v2half = OpTypeVector %half 2
%_ptr_Workgroup_half = OpTypePointer Workgroup %half
       %bool = OpTypeBool
         %64 = OpConstantNull %mat4v4half
         %66 = OpTypeFunction %mat4v4half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %121 = OpTypeFunction %_arr_mat4v4half_uint_4 %uint
%_ptr_Function__arr_mat4v4half_uint_4 = OpTypePointer Function %_arr_mat4v4half_uint_4
        %125 = OpConstantNull %_arr_mat4v4half_uint_4
    %uint_32 = OpConstant %uint 32
%_ptr_Function_mat4v4half = OpTypePointer Function %mat4v4half
        %144 = OpTypeFunction %void
    %f_inner = OpFunction %void None %20
%tint_local_index = OpFunctionParameter %uint
         %21 = OpLabel
               OpBranch %22
         %22 = OpLabel
               OpBranch %25
         %25 = OpLabel
         %27 = OpPhi %uint %tint_local_index %22 %28 %24
               OpLoopMerge %26 %24 None
               OpBranch %23
         %23 = OpLabel
         %59 = OpUGreaterThanEqual %bool %27 %uint_4
               OpSelectionMerge %61 None
               OpBranchConditional %59 %62 %61
         %62 = OpLabel
               OpBranch %26
         %61 = OpLabel
         %63 = OpAccessChain %_ptr_Workgroup_mat4v4half %w %27
               OpStore %63 %64 None
               OpBranch %24
         %24 = OpLabel
         %28 = OpIAdd %uint %27 %uint_1
               OpBranch %25
         %26 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %32 = OpFunctionCall %_arr_mat4v4half_uint_4 %33 %uint_0
               OpStore %w %32 None
         %35 = OpAccessChain %_ptr_Workgroup_mat4v4half %w %uint_1
         %38 = OpFunctionCall %mat4v4half %39 %uint_64
               OpStore %35 %38 None
         %41 = OpAccessChain %_ptr_Workgroup_v4half %w %uint_1 %uint_0
         %43 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %45 = OpLoad %v4uint %43 None
         %46 = OpVectorShuffle %v2uint %45 %45 2 3
         %48 = OpBitcast %v4half %46
         %49 = OpVectorShuffle %v4half %48 %48 1 3 0 2
               OpStore %41 %49 None
         %50 = OpAccessChain %_ptr_Workgroup_v4half %w %uint_1 %uint_0
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %52 = OpLoad %v4uint %51 None
         %53 = OpCompositeExtract %uint %52 2
         %55 = OpBitcast %v2half %53
         %56 = OpCompositeExtract %half %55 0
         %57 = OpAccessChain %_ptr_Workgroup_half %50 %uint_0
               OpStore %57 %56 None
               OpReturn
               OpFunctionEnd
         %39 = OpFunction %mat4v4half None %66
%start_byte_offset = OpFunctionParameter %uint
         %67 = OpLabel
         %68 = OpUDiv %uint %start_byte_offset %uint_16
         %70 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %68
         %71 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %73 = OpShiftRightLogical %uint %71 %uint_2
         %74 = OpLoad %v4uint %70 None
         %75 = OpVectorShuffle %v2uint %74 %74 2 3
         %76 = OpVectorShuffle %v2uint %74 %74 0 1
         %77 = OpIEqual %bool %73 %uint_2
         %79 = OpCompositeConstruct %v2bool %77 %77
         %80 = OpSelect %v2uint %79 %75 %76
         %81 = OpBitcast %v4half %80
         %82 = OpIAdd %uint %uint_8 %start_byte_offset
         %83 = OpUDiv %uint %82 %uint_16
         %84 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %83
         %85 = OpBitwiseAnd %uint %82 %uint_15
         %86 = OpShiftRightLogical %uint %85 %uint_2
         %87 = OpLoad %v4uint %84 None
         %88 = OpVectorShuffle %v2uint %87 %87 2 3
         %89 = OpVectorShuffle %v2uint %87 %87 0 1
         %90 = OpIEqual %bool %86 %uint_2
         %91 = OpCompositeConstruct %v2bool %90 %90
         %92 = OpSelect %v2uint %91 %88 %89
         %93 = OpBitcast %v4half %92
         %94 = OpIAdd %uint %uint_16 %start_byte_offset
         %95 = OpUDiv %uint %94 %uint_16
         %96 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %95
         %97 = OpBitwiseAnd %uint %94 %uint_15
         %98 = OpShiftRightLogical %uint %97 %uint_2
         %99 = OpLoad %v4uint %96 None
        %100 = OpVectorShuffle %v2uint %99 %99 2 3
        %101 = OpVectorShuffle %v2uint %99 %99 0 1
        %102 = OpIEqual %bool %98 %uint_2
        %103 = OpCompositeConstruct %v2bool %102 %102
        %104 = OpSelect %v2uint %103 %100 %101
        %105 = OpBitcast %v4half %104
        %106 = OpIAdd %uint %uint_24 %start_byte_offset
        %108 = OpUDiv %uint %106 %uint_16
        %109 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %108
        %110 = OpBitwiseAnd %uint %106 %uint_15
        %111 = OpShiftRightLogical %uint %110 %uint_2
        %112 = OpLoad %v4uint %109 None
        %113 = OpVectorShuffle %v2uint %112 %112 2 3
        %114 = OpVectorShuffle %v2uint %112 %112 0 1
        %115 = OpIEqual %bool %111 %uint_2
        %116 = OpCompositeConstruct %v2bool %115 %115
        %117 = OpSelect %v2uint %116 %113 %114
        %118 = OpBitcast %v4half %117
        %119 = OpCompositeConstruct %mat4v4half %81 %93 %105 %118
               OpReturnValue %119
               OpFunctionEnd
         %33 = OpFunction %_arr_mat4v4half_uint_4 None %121
%start_byte_offset_0 = OpFunctionParameter %uint
        %122 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v4half_uint_4 Function
               OpStore %a %125
               OpBranch %126
        %126 = OpLabel
               OpBranch %129
        %129 = OpLabel
        %131 = OpPhi %uint %uint_0 %126 %132 %128
               OpLoopMerge %130 %128 None
               OpBranch %127
        %127 = OpLabel
        %134 = OpUGreaterThanEqual %bool %131 %uint_4
               OpSelectionMerge %135 None
               OpBranchConditional %134 %136 %135
        %136 = OpLabel
               OpBranch %130
        %135 = OpLabel
        %137 = OpIMul %uint %131 %uint_32
        %139 = OpIAdd %uint %start_byte_offset_0 %137
        %140 = OpAccessChain %_ptr_Function_mat4v4half %a %131
        %142 = OpFunctionCall %mat4v4half %39 %139
               OpStore %140 %142 None
               OpBranch %128
        %128 = OpLabel
        %132 = OpIAdd %uint %131 %uint_1
               OpBranch %129
        %130 = OpLabel
        %133 = OpLoad %_arr_mat4v4half_uint_4 %a None
               OpReturnValue %133
               OpFunctionEnd
          %f = OpFunction %void None %144
        %145 = OpLabel
        %146 = OpLoad %uint %f_local_invocation_index_Input None
        %147 = OpFunctionCall %void %f_inner %146
               OpReturn
               OpFunctionEnd
