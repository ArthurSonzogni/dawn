; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 150
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block_tint_explicit_layout 0 "inner"
               OpName %s_block_tint_explicit_layout "s_block_tint_explicit_layout"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpName %tint_convert_explicit_layout "tint_convert_explicit_layout"
               OpName %tint_source "tint_source"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %_arr_mat4v2float_uint_4 ArrayStride 32
               OpMemberDecorate %s_block_tint_explicit_layout 0 Offset 0
               OpMemberDecorate %s_block_tint_explicit_layout 0 ColMajor
               OpMemberDecorate %s_block_tint_explicit_layout 0 MatrixStride 8
               OpDecorate %s_block_tint_explicit_layout Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat4v2float = OpTypeMatrix %v2float 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v2float_uint_4 = OpTypeArray %mat4v2float %uint_4
%s_block_tint_explicit_layout = OpTypeStruct %_arr_mat4v2float_uint_4
%_ptr_StorageBuffer_s_block_tint_explicit_layout = OpTypePointer StorageBuffer %s_block_tint_explicit_layout
          %8 = OpVariable %_ptr_StorageBuffer_s_block_tint_explicit_layout StorageBuffer
       %void = OpTypeVoid
         %18 = OpTypeFunction %void
%_arr_mat4v2float_uint_4_0 = OpTypeArray %mat4v2float %uint_4
     %uint_0 = OpConstant %uint 0
%_ptr_StorageBuffer__arr_mat4v2float_uint_4 = OpTypePointer StorageBuffer %_arr_mat4v2float_uint_4
%_ptr_StorageBuffer_mat4v2float = OpTypePointer StorageBuffer %mat4v2float
     %uint_1 = OpConstant %uint 1
    %uint_64 = OpConstant %uint 64
%_ptr_StorageBuffer_v2float = OpTypePointer StorageBuffer %v2float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %51 = OpTypeFunction %mat4v2float %uint
    %uint_16 = OpConstant %uint 16
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %107 = OpTypeFunction %_arr_mat4v2float_uint_4_0 %uint
%_ptr_Function__arr_mat4v2float_uint_4_0 = OpTypePointer Function %_arr_mat4v2float_uint_4_0
        %111 = OpConstantNull %_arr_mat4v2float_uint_4_0
    %uint_32 = OpConstant %uint 32
%_ptr_Function_mat4v2float = OpTypePointer Function %mat4v2float
        %130 = OpTypeFunction %_arr_mat4v2float_uint_4 %_arr_mat4v2float_uint_4_0
%_ptr_Function__arr_mat4v2float_uint_4 = OpTypePointer Function %_arr_mat4v2float_uint_4
        %135 = OpConstantNull %_arr_mat4v2float_uint_4
          %f = OpFunction %void None %18
         %19 = OpLabel
         %20 = OpFunctionCall %_arr_mat4v2float_uint_4_0 %22 %uint_0
         %24 = OpAccessChain %_ptr_StorageBuffer__arr_mat4v2float_uint_4 %8 %uint_0
         %26 = OpFunctionCall %_arr_mat4v2float_uint_4 %tint_convert_explicit_layout %20
               OpStore %24 %26 None
         %28 = OpAccessChain %_ptr_StorageBuffer_mat4v2float %8 %uint_0 %uint_1
         %31 = OpFunctionCall %mat4v2float %32 %uint_64
               OpStore %28 %31 None
         %34 = OpAccessChain %_ptr_StorageBuffer_v2float %8 %uint_0 %uint_1 %uint_0
         %36 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %38 = OpLoad %v4uint %36 None
         %39 = OpVectorShuffle %v2uint %38 %38 2 3
         %41 = OpBitcast %v2float %39
         %42 = OpVectorShuffle %v2float %41 %41 1 0
               OpStore %34 %42 None
         %43 = OpAccessChain %_ptr_StorageBuffer_v2float %8 %uint_0 %uint_1 %uint_0
         %44 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %45 = OpLoad %v4uint %44 None
         %46 = OpCompositeExtract %uint %45 2
         %47 = OpBitcast %float %46
         %48 = OpAccessChain %_ptr_StorageBuffer_float %43 %uint_0
               OpStore %48 %47 None
               OpReturn
               OpFunctionEnd
         %32 = OpFunction %mat4v2float None %51
%start_byte_offset = OpFunctionParameter %uint
         %52 = OpLabel
         %53 = OpUDiv %uint %start_byte_offset %uint_16
         %55 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %53
         %56 = OpUMod %uint %start_byte_offset %uint_16
         %57 = OpUDiv %uint %56 %uint_4
         %58 = OpLoad %v4uint %55 None
         %59 = OpVectorShuffle %v2uint %58 %58 2 3
         %60 = OpVectorShuffle %v2uint %58 %58 0 1
         %61 = OpIEqual %bool %57 %uint_2
         %65 = OpCompositeConstruct %v2bool %61 %61
         %66 = OpSelect %v2uint %65 %59 %60
         %67 = OpBitcast %v2float %66
         %68 = OpIAdd %uint %uint_8 %start_byte_offset
         %69 = OpUDiv %uint %68 %uint_16
         %70 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %69
         %71 = OpUMod %uint %68 %uint_16
         %72 = OpUDiv %uint %71 %uint_4
         %73 = OpLoad %v4uint %70 None
         %74 = OpVectorShuffle %v2uint %73 %73 2 3
         %75 = OpVectorShuffle %v2uint %73 %73 0 1
         %76 = OpIEqual %bool %72 %uint_2
         %77 = OpCompositeConstruct %v2bool %76 %76
         %78 = OpSelect %v2uint %77 %74 %75
         %79 = OpBitcast %v2float %78
         %80 = OpIAdd %uint %uint_16 %start_byte_offset
         %81 = OpUDiv %uint %80 %uint_16
         %82 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %81
         %83 = OpUMod %uint %80 %uint_16
         %84 = OpUDiv %uint %83 %uint_4
         %85 = OpLoad %v4uint %82 None
         %86 = OpVectorShuffle %v2uint %85 %85 2 3
         %87 = OpVectorShuffle %v2uint %85 %85 0 1
         %88 = OpIEqual %bool %84 %uint_2
         %89 = OpCompositeConstruct %v2bool %88 %88
         %90 = OpSelect %v2uint %89 %86 %87
         %91 = OpBitcast %v2float %90
         %92 = OpIAdd %uint %uint_24 %start_byte_offset
         %94 = OpUDiv %uint %92 %uint_16
         %95 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %94
         %96 = OpUMod %uint %92 %uint_16
         %97 = OpUDiv %uint %96 %uint_4
         %98 = OpLoad %v4uint %95 None
         %99 = OpVectorShuffle %v2uint %98 %98 2 3
        %100 = OpVectorShuffle %v2uint %98 %98 0 1
        %101 = OpIEqual %bool %97 %uint_2
        %102 = OpCompositeConstruct %v2bool %101 %101
        %103 = OpSelect %v2uint %102 %99 %100
        %104 = OpBitcast %v2float %103
        %105 = OpCompositeConstruct %mat4v2float %67 %79 %91 %104
               OpReturnValue %105
               OpFunctionEnd
         %22 = OpFunction %_arr_mat4v2float_uint_4_0 None %107
%start_byte_offset_0 = OpFunctionParameter %uint
        %108 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v2float_uint_4_0 Function
               OpStore %a %111
               OpBranch %112
        %112 = OpLabel
               OpBranch %115
        %115 = OpLabel
        %117 = OpPhi %uint %uint_0 %112 %118 %114
               OpLoopMerge %116 %114 None
               OpBranch %113
        %113 = OpLabel
        %120 = OpUGreaterThanEqual %bool %117 %uint_4
               OpSelectionMerge %121 None
               OpBranchConditional %120 %122 %121
        %122 = OpLabel
               OpBranch %116
        %121 = OpLabel
        %123 = OpIMul %uint %117 %uint_32
        %125 = OpIAdd %uint %start_byte_offset_0 %123
        %126 = OpAccessChain %_ptr_Function_mat4v2float %a %117
        %128 = OpFunctionCall %mat4v2float %32 %125
               OpStore %126 %128 None
               OpBranch %114
        %114 = OpLabel
        %118 = OpIAdd %uint %117 %uint_1
               OpBranch %115
        %116 = OpLabel
        %119 = OpLoad %_arr_mat4v2float_uint_4_0 %a None
               OpReturnValue %119
               OpFunctionEnd
%tint_convert_explicit_layout = OpFunction %_arr_mat4v2float_uint_4 None %130
%tint_source = OpFunctionParameter %_arr_mat4v2float_uint_4_0
        %131 = OpLabel
        %132 = OpVariable %_ptr_Function__arr_mat4v2float_uint_4_0 Function
        %133 = OpVariable %_ptr_Function__arr_mat4v2float_uint_4 Function %135
               OpStore %132 %tint_source
               OpBranch %136
        %136 = OpLabel
               OpBranch %139
        %139 = OpLabel
        %141 = OpPhi %uint %uint_0 %136 %142 %138
               OpLoopMerge %140 %138 None
               OpBranch %137
        %137 = OpLabel
        %144 = OpUGreaterThanEqual %bool %141 %uint_4
               OpSelectionMerge %145 None
               OpBranchConditional %144 %146 %145
        %146 = OpLabel
               OpBranch %140
        %145 = OpLabel
        %147 = OpAccessChain %_ptr_Function_mat4v2float %132 %141
        %148 = OpLoad %mat4v2float %147 None
        %149 = OpAccessChain %_ptr_Function_mat4v2float %133 %141
               OpStore %149 %148 None
               OpBranch %138
        %138 = OpLabel
        %142 = OpIAdd %uint %141 %uint_1
               OpBranch %139
        %140 = OpLabel
        %143 = OpLoad %_arr_mat4v2float_uint_4 %133 None
               OpReturnValue %143
               OpFunctionEnd
