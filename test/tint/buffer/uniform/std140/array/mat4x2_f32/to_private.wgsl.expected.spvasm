; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 132
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
    %v2float = OpTypeVector %float 2
%mat4v2float = OpTypeMatrix %v2float 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v2float_uint_4 = OpTypeArray %mat4v2float %uint_4
%_ptr_Private__arr_mat4v2float_uint_4 = OpTypePointer Private %_arr_mat4v2float_uint_4
         %18 = OpConstantNull %_arr_mat4v2float_uint_4
          %p = OpVariable %_ptr_Private__arr_mat4v2float_uint_4 Private %18
       %void = OpTypeVoid
         %21 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_mat4v2float = OpTypePointer Private %mat4v2float
     %uint_1 = OpConstant %uint 1
    %uint_64 = OpConstant %uint 64
%_ptr_Private_v2float = OpTypePointer Private %v2float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
%_ptr_Private_float = OpTypePointer Private %float
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %54 = OpTypeFunction %mat4v2float %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %111 = OpTypeFunction %_arr_mat4v2float_uint_4 %uint
%_ptr_Function__arr_mat4v2float_uint_4 = OpTypePointer Function %_arr_mat4v2float_uint_4
    %uint_32 = OpConstant %uint 32
%_ptr_Function_mat4v2float = OpTypePointer Function %mat4v2float
          %f = OpFunction %void None %21
         %22 = OpLabel
         %23 = OpFunctionCall %_arr_mat4v2float_uint_4 %24 %uint_0
               OpStore %p %23 None
         %26 = OpAccessChain %_ptr_Private_mat4v2float %p %uint_1
         %29 = OpFunctionCall %mat4v2float %30 %uint_64
               OpStore %26 %29 None
         %32 = OpAccessChain %_ptr_Private_v2float %p %uint_1 %uint_0
         %34 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %36 = OpLoad %v4uint %34 None
         %37 = OpVectorShuffle %v2uint %36 %36 2 3
         %39 = OpBitcast %v2float %37
         %40 = OpVectorShuffle %v2float %39 %39 1 0
               OpStore %32 %40 None
         %41 = OpAccessChain %_ptr_Private_v2float %p %uint_1 %uint_0
         %42 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %43 = OpLoad %v4uint %42 None
         %44 = OpCompositeExtract %uint %43 2
         %45 = OpBitcast %float %44
         %46 = OpAccessChain %_ptr_Private_float %41 %uint_0
               OpStore %46 %45 None
         %48 = OpAccessChain %_ptr_Private_v2float %p %uint_1 %uint_0
         %49 = OpAccessChain %_ptr_Private_float %48 %uint_0
         %50 = OpLoad %float %49 None
         %51 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %51 %50 None
               OpReturn
               OpFunctionEnd
         %30 = OpFunction %mat4v2float None %54
%start_byte_offset = OpFunctionParameter %uint
         %55 = OpLabel
         %56 = OpUDiv %uint %start_byte_offset %uint_16
         %58 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %56
         %59 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %61 = OpShiftRightLogical %uint %59 %uint_2
         %63 = OpLoad %v4uint %58 None
         %64 = OpVectorShuffle %v2uint %63 %63 2 3
         %65 = OpVectorShuffle %v2uint %63 %63 0 1
         %66 = OpIEqual %bool %61 %uint_2
         %69 = OpCompositeConstruct %v2bool %66 %66
         %70 = OpSelect %v2uint %69 %64 %65
         %71 = OpBitcast %v2float %70
         %72 = OpIAdd %uint %uint_8 %start_byte_offset
         %73 = OpUDiv %uint %72 %uint_16
         %74 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %73
         %75 = OpBitwiseAnd %uint %72 %uint_15
         %76 = OpShiftRightLogical %uint %75 %uint_2
         %77 = OpLoad %v4uint %74 None
         %78 = OpVectorShuffle %v2uint %77 %77 2 3
         %79 = OpVectorShuffle %v2uint %77 %77 0 1
         %80 = OpIEqual %bool %76 %uint_2
         %81 = OpCompositeConstruct %v2bool %80 %80
         %82 = OpSelect %v2uint %81 %78 %79
         %83 = OpBitcast %v2float %82
         %84 = OpIAdd %uint %uint_16 %start_byte_offset
         %85 = OpUDiv %uint %84 %uint_16
         %86 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %85
         %87 = OpBitwiseAnd %uint %84 %uint_15
         %88 = OpShiftRightLogical %uint %87 %uint_2
         %89 = OpLoad %v4uint %86 None
         %90 = OpVectorShuffle %v2uint %89 %89 2 3
         %91 = OpVectorShuffle %v2uint %89 %89 0 1
         %92 = OpIEqual %bool %88 %uint_2
         %93 = OpCompositeConstruct %v2bool %92 %92
         %94 = OpSelect %v2uint %93 %90 %91
         %95 = OpBitcast %v2float %94
         %96 = OpIAdd %uint %uint_24 %start_byte_offset
         %98 = OpUDiv %uint %96 %uint_16
         %99 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %98
        %100 = OpBitwiseAnd %uint %96 %uint_15
        %101 = OpShiftRightLogical %uint %100 %uint_2
        %102 = OpLoad %v4uint %99 None
        %103 = OpVectorShuffle %v2uint %102 %102 2 3
        %104 = OpVectorShuffle %v2uint %102 %102 0 1
        %105 = OpIEqual %bool %101 %uint_2
        %106 = OpCompositeConstruct %v2bool %105 %105
        %107 = OpSelect %v2uint %106 %103 %104
        %108 = OpBitcast %v2float %107
        %109 = OpCompositeConstruct %mat4v2float %71 %83 %95 %108
               OpReturnValue %109
               OpFunctionEnd
         %24 = OpFunction %_arr_mat4v2float_uint_4 None %111
%start_byte_offset_0 = OpFunctionParameter %uint
        %112 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v2float_uint_4 Function
               OpStore %a %18
               OpBranch %115
        %115 = OpLabel
               OpBranch %118
        %118 = OpLabel
        %120 = OpPhi %uint %uint_0 %115 %121 %117
               OpLoopMerge %119 %117 None
               OpBranch %116
        %116 = OpLabel
        %123 = OpUGreaterThanEqual %bool %120 %uint_4
               OpSelectionMerge %124 None
               OpBranchConditional %123 %125 %124
        %125 = OpLabel
               OpBranch %119
        %124 = OpLabel
        %126 = OpIMul %uint %120 %uint_32
        %128 = OpIAdd %uint %start_byte_offset_0 %126
        %129 = OpAccessChain %_ptr_Function_mat4v2float %a %120
        %131 = OpFunctionCall %mat4v2float %30 %128
               OpStore %129 %131 None
               OpBranch %117
        %117 = OpLabel
        %121 = OpIAdd %uint %120 %uint_1
               OpBranch %118
        %119 = OpLabel
        %122 = OpLoad %_arr_mat4v2float_uint_4 %a None
               OpReturnValue %122
               OpFunctionEnd
