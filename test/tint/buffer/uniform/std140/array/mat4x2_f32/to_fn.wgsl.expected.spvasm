; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 147
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %a "a"
               OpName %a_0 "a"
               OpName %b "b"
               OpName %m "m"
               OpName %c "c"
               OpName %v "v"
               OpName %d "d"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a_1 "a"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
    %v2float = OpTypeVector %float 2
%mat4v2float = OpTypeMatrix %v2float 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v2float_uint_4 = OpTypeArray %mat4v2float %uint_4
         %18 = OpTypeFunction %float %_arr_mat4v2float_uint_4
         %23 = OpTypeFunction %float %mat4v2float
         %28 = OpTypeFunction %float %v2float
         %33 = OpTypeFunction %float %float
       %void = OpTypeVoid
         %37 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
    %uint_32 = OpConstant %uint 32
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_2 = OpConstant %uint 2
     %v2uint = OpTypeVector %uint 2
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %69 = OpTypeFunction %mat4v2float %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %125 = OpTypeFunction %_arr_mat4v2float_uint_4 %uint
%_ptr_Function__arr_mat4v2float_uint_4 = OpTypePointer Function %_arr_mat4v2float_uint_4
        %129 = OpConstantNull %_arr_mat4v2float_uint_4
%_ptr_Function_mat4v2float = OpTypePointer Function %mat4v2float
     %uint_1 = OpConstant %uint 1
          %a = OpFunction %float None %18
        %a_0 = OpFunctionParameter %_arr_mat4v2float_uint_4
         %19 = OpLabel
         %20 = OpCompositeExtract %float %a_0 0 0 0
               OpReturnValue %20
               OpFunctionEnd
          %b = OpFunction %float None %23
          %m = OpFunctionParameter %mat4v2float
         %24 = OpLabel
         %25 = OpCompositeExtract %float %m 0 0
               OpReturnValue %25
               OpFunctionEnd
          %c = OpFunction %float None %28
          %v = OpFunctionParameter %v2float
         %29 = OpLabel
         %30 = OpCompositeExtract %float %v 0
               OpReturnValue %30
               OpFunctionEnd
          %d = OpFunction %float None %33
          %f = OpFunctionParameter %float
         %34 = OpLabel
               OpReturnValue %f
               OpFunctionEnd
        %f_0 = OpFunction %void None %37
         %38 = OpLabel
         %39 = OpFunctionCall %_arr_mat4v2float_uint_4 %40 %uint_0
         %42 = OpFunctionCall %float %a %39
         %43 = OpFunctionCall %mat4v2float %44 %uint_32
         %46 = OpFunctionCall %float %b %43
         %47 = OpFAdd %float %42 %46
         %48 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %51 = OpLoad %v4uint %48 None
         %52 = OpVectorShuffle %v2uint %51 %51 0 1
         %54 = OpBitcast %v2float %52
         %55 = OpVectorShuffle %v2float %54 %54 1 0
         %56 = OpFunctionCall %float %c %55
         %57 = OpFAdd %float %47 %56
         %58 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %59 = OpLoad %v4uint %58 None
         %60 = OpVectorShuffle %v2uint %59 %59 0 1
         %61 = OpBitcast %v2float %60
         %62 = OpVectorShuffle %v2float %61 %61 1 0
         %63 = OpCompositeExtract %float %62 0
         %64 = OpFunctionCall %float %d %63
         %65 = OpFAdd %float %57 %64
         %66 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %66 %65 None
               OpReturn
               OpFunctionEnd
         %44 = OpFunction %mat4v2float None %69
%start_byte_offset = OpFunctionParameter %uint
         %70 = OpLabel
         %71 = OpUDiv %uint %start_byte_offset %uint_16
         %73 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %71
         %74 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %76 = OpShiftRightLogical %uint %74 %uint_2
         %77 = OpLoad %v4uint %73 None
         %78 = OpVectorShuffle %v2uint %77 %77 2 3
         %79 = OpVectorShuffle %v2uint %77 %77 0 1
         %80 = OpIEqual %bool %76 %uint_2
         %83 = OpCompositeConstruct %v2bool %80 %80
         %84 = OpSelect %v2uint %83 %78 %79
         %85 = OpBitcast %v2float %84
         %86 = OpIAdd %uint %uint_8 %start_byte_offset
         %87 = OpUDiv %uint %86 %uint_16
         %88 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %87
         %89 = OpBitwiseAnd %uint %86 %uint_15
         %90 = OpShiftRightLogical %uint %89 %uint_2
         %91 = OpLoad %v4uint %88 None
         %92 = OpVectorShuffle %v2uint %91 %91 2 3
         %93 = OpVectorShuffle %v2uint %91 %91 0 1
         %94 = OpIEqual %bool %90 %uint_2
         %95 = OpCompositeConstruct %v2bool %94 %94
         %96 = OpSelect %v2uint %95 %92 %93
         %97 = OpBitcast %v2float %96
         %98 = OpIAdd %uint %uint_16 %start_byte_offset
         %99 = OpUDiv %uint %98 %uint_16
        %100 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %99
        %101 = OpBitwiseAnd %uint %98 %uint_15
        %102 = OpShiftRightLogical %uint %101 %uint_2
        %103 = OpLoad %v4uint %100 None
        %104 = OpVectorShuffle %v2uint %103 %103 2 3
        %105 = OpVectorShuffle %v2uint %103 %103 0 1
        %106 = OpIEqual %bool %102 %uint_2
        %107 = OpCompositeConstruct %v2bool %106 %106
        %108 = OpSelect %v2uint %107 %104 %105
        %109 = OpBitcast %v2float %108
        %110 = OpIAdd %uint %uint_24 %start_byte_offset
        %112 = OpUDiv %uint %110 %uint_16
        %113 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %112
        %114 = OpBitwiseAnd %uint %110 %uint_15
        %115 = OpShiftRightLogical %uint %114 %uint_2
        %116 = OpLoad %v4uint %113 None
        %117 = OpVectorShuffle %v2uint %116 %116 2 3
        %118 = OpVectorShuffle %v2uint %116 %116 0 1
        %119 = OpIEqual %bool %115 %uint_2
        %120 = OpCompositeConstruct %v2bool %119 %119
        %121 = OpSelect %v2uint %120 %117 %118
        %122 = OpBitcast %v2float %121
        %123 = OpCompositeConstruct %mat4v2float %85 %97 %109 %122
               OpReturnValue %123
               OpFunctionEnd
         %40 = OpFunction %_arr_mat4v2float_uint_4 None %125
%start_byte_offset_0 = OpFunctionParameter %uint
        %126 = OpLabel
        %a_1 = OpVariable %_ptr_Function__arr_mat4v2float_uint_4 Function
               OpStore %a_1 %129
               OpBranch %130
        %130 = OpLabel
               OpBranch %133
        %133 = OpLabel
        %135 = OpPhi %uint %uint_0 %130 %136 %132
               OpLoopMerge %134 %132 None
               OpBranch %131
        %131 = OpLabel
        %138 = OpUGreaterThanEqual %bool %135 %uint_4
               OpSelectionMerge %139 None
               OpBranchConditional %138 %140 %139
        %140 = OpLabel
               OpBranch %134
        %139 = OpLabel
        %141 = OpIMul %uint %135 %uint_32
        %142 = OpIAdd %uint %start_byte_offset_0 %141
        %143 = OpAccessChain %_ptr_Function_mat4v2float %a_1 %135
        %145 = OpFunctionCall %mat4v2float %44 %142
               OpStore %143 %145 None
               OpBranch %132
        %132 = OpLabel
        %136 = OpIAdd %uint %135 %uint_1
               OpBranch %133
        %134 = OpLabel
        %137 = OpLoad %_arr_mat4v2float_uint_4 %a_1 None
               OpReturnValue %137
               OpFunctionEnd
