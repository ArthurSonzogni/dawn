; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 146
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %a "a"
               OpName %a_0 "a"
               OpName %b "b"
               OpName %m "m"
               OpName %c "c"
               OpName %v "v"
               OpName %d "d"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a_1 "a"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
    %v2float = OpTypeVector %float 2
%mat4v2float = OpTypeMatrix %v2float 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v2float_uint_4 = OpTypeArray %mat4v2float %uint_4
         %18 = OpTypeFunction %float %_arr_mat4v2float_uint_4
         %23 = OpTypeFunction %float %mat4v2float
         %28 = OpTypeFunction %float %v2float
         %33 = OpTypeFunction %float %float
       %void = OpTypeVoid
         %37 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
    %uint_32 = OpConstant %uint 32
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_2 = OpConstant %uint 2
     %v2uint = OpTypeVector %uint 2
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %69 = OpTypeFunction %mat4v2float %uint
    %uint_16 = OpConstant %uint 16
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %124 = OpTypeFunction %_arr_mat4v2float_uint_4 %uint
%_ptr_Function__arr_mat4v2float_uint_4 = OpTypePointer Function %_arr_mat4v2float_uint_4
        %128 = OpConstantNull %_arr_mat4v2float_uint_4
%_ptr_Function_mat4v2float = OpTypePointer Function %mat4v2float
     %uint_1 = OpConstant %uint 1
          %a = OpFunction %float None %18
        %a_0 = OpFunctionParameter %_arr_mat4v2float_uint_4
         %19 = OpLabel
         %20 = OpCompositeExtract %float %a_0 0 0 0
               OpReturnValue %20
               OpFunctionEnd
          %b = OpFunction %float None %23
          %m = OpFunctionParameter %mat4v2float
         %24 = OpLabel
         %25 = OpCompositeExtract %float %m 0 0
               OpReturnValue %25
               OpFunctionEnd
          %c = OpFunction %float None %28
          %v = OpFunctionParameter %v2float
         %29 = OpLabel
         %30 = OpCompositeExtract %float %v 0
               OpReturnValue %30
               OpFunctionEnd
          %d = OpFunction %float None %33
          %f = OpFunctionParameter %float
         %34 = OpLabel
               OpReturnValue %f
               OpFunctionEnd
        %f_0 = OpFunction %void None %37
         %38 = OpLabel
         %39 = OpFunctionCall %_arr_mat4v2float_uint_4 %40 %uint_0
         %42 = OpFunctionCall %float %a %39
         %43 = OpFunctionCall %mat4v2float %44 %uint_32
         %46 = OpFunctionCall %float %b %43
         %47 = OpFAdd %float %42 %46
         %48 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %51 = OpLoad %v4uint %48 None
         %52 = OpVectorShuffle %v2uint %51 %51 0 1
         %54 = OpBitcast %v2float %52
         %55 = OpVectorShuffle %v2float %54 %54 1 0
         %56 = OpFunctionCall %float %c %55
         %57 = OpFAdd %float %47 %56
         %58 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %59 = OpLoad %v4uint %58 None
         %60 = OpVectorShuffle %v2uint %59 %59 0 1
         %61 = OpBitcast %v2float %60
         %62 = OpVectorShuffle %v2float %61 %61 1 0
         %63 = OpCompositeExtract %float %62 0
         %64 = OpFunctionCall %float %d %63
         %65 = OpFAdd %float %57 %64
         %66 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %66 %65 None
               OpReturn
               OpFunctionEnd
         %44 = OpFunction %mat4v2float None %69
%start_byte_offset = OpFunctionParameter %uint
         %70 = OpLabel
         %71 = OpUDiv %uint %start_byte_offset %uint_16
         %73 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %71
         %74 = OpUMod %uint %start_byte_offset %uint_16
         %75 = OpUDiv %uint %74 %uint_4
         %76 = OpLoad %v4uint %73 None
         %77 = OpVectorShuffle %v2uint %76 %76 2 3
         %78 = OpVectorShuffle %v2uint %76 %76 0 1
         %79 = OpIEqual %bool %75 %uint_2
         %82 = OpCompositeConstruct %v2bool %79 %79
         %83 = OpSelect %v2uint %82 %77 %78
         %84 = OpBitcast %v2float %83
         %85 = OpIAdd %uint %uint_8 %start_byte_offset
         %86 = OpUDiv %uint %85 %uint_16
         %87 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %86
         %88 = OpUMod %uint %85 %uint_16
         %89 = OpUDiv %uint %88 %uint_4
         %90 = OpLoad %v4uint %87 None
         %91 = OpVectorShuffle %v2uint %90 %90 2 3
         %92 = OpVectorShuffle %v2uint %90 %90 0 1
         %93 = OpIEqual %bool %89 %uint_2
         %94 = OpCompositeConstruct %v2bool %93 %93
         %95 = OpSelect %v2uint %94 %91 %92
         %96 = OpBitcast %v2float %95
         %97 = OpIAdd %uint %uint_16 %start_byte_offset
         %98 = OpUDiv %uint %97 %uint_16
         %99 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %98
        %100 = OpUMod %uint %97 %uint_16
        %101 = OpUDiv %uint %100 %uint_4
        %102 = OpLoad %v4uint %99 None
        %103 = OpVectorShuffle %v2uint %102 %102 2 3
        %104 = OpVectorShuffle %v2uint %102 %102 0 1
        %105 = OpIEqual %bool %101 %uint_2
        %106 = OpCompositeConstruct %v2bool %105 %105
        %107 = OpSelect %v2uint %106 %103 %104
        %108 = OpBitcast %v2float %107
        %109 = OpIAdd %uint %uint_24 %start_byte_offset
        %111 = OpUDiv %uint %109 %uint_16
        %112 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %111
        %113 = OpUMod %uint %109 %uint_16
        %114 = OpUDiv %uint %113 %uint_4
        %115 = OpLoad %v4uint %112 None
        %116 = OpVectorShuffle %v2uint %115 %115 2 3
        %117 = OpVectorShuffle %v2uint %115 %115 0 1
        %118 = OpIEqual %bool %114 %uint_2
        %119 = OpCompositeConstruct %v2bool %118 %118
        %120 = OpSelect %v2uint %119 %116 %117
        %121 = OpBitcast %v2float %120
        %122 = OpCompositeConstruct %mat4v2float %84 %96 %108 %121
               OpReturnValue %122
               OpFunctionEnd
         %40 = OpFunction %_arr_mat4v2float_uint_4 None %124
%start_byte_offset_0 = OpFunctionParameter %uint
        %125 = OpLabel
        %a_1 = OpVariable %_ptr_Function__arr_mat4v2float_uint_4 Function
               OpStore %a_1 %128
               OpBranch %129
        %129 = OpLabel
               OpBranch %132
        %132 = OpLabel
        %134 = OpPhi %uint %uint_0 %129 %135 %131
               OpLoopMerge %133 %131 None
               OpBranch %130
        %130 = OpLabel
        %137 = OpUGreaterThanEqual %bool %134 %uint_4
               OpSelectionMerge %138 None
               OpBranchConditional %137 %139 %138
        %139 = OpLabel
               OpBranch %133
        %138 = OpLabel
        %140 = OpIMul %uint %134 %uint_32
        %141 = OpIAdd %uint %start_byte_offset_0 %140
        %142 = OpAccessChain %_ptr_Function_mat4v2float %a_1 %134
        %144 = OpFunctionCall %mat4v2float %44 %141
               OpStore %142 %144 None
               OpBranch %131
        %131 = OpLabel
        %135 = OpIAdd %uint %134 %uint_1
               OpBranch %132
        %133 = OpLabel
        %136 = OpLoad %_arr_mat4v2float_uint_4 %a_1 None
               OpReturnValue %136
               OpFunctionEnd
