; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 146
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
%mat4v2float = OpTypeMatrix %v2float 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v2float_uint_4 = OpTypeArray %mat4v2float %uint_4
%_ptr_Workgroup__arr_mat4v2float_uint_4 = OpTypePointer Workgroup %_arr_mat4v2float_uint_4
          %w = OpVariable %_ptr_Workgroup__arr_mat4v2float_uint_4 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %20 = OpTypeFunction %void %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_mat4v2float = OpTypePointer Workgroup %mat4v2float
     %uint_1 = OpConstant %uint 1
    %uint_64 = OpConstant %uint 64
%_ptr_Workgroup_v2float = OpTypePointer Workgroup %v2float
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
%_ptr_Workgroup_float = OpTypePointer Workgroup %float
       %bool = OpTypeBool
         %62 = OpConstantNull %mat4v2float
         %64 = OpTypeFunction %mat4v2float %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %119 = OpTypeFunction %_arr_mat4v2float_uint_4 %uint
%_ptr_Function__arr_mat4v2float_uint_4 = OpTypePointer Function %_arr_mat4v2float_uint_4
        %123 = OpConstantNull %_arr_mat4v2float_uint_4
    %uint_32 = OpConstant %uint 32
%_ptr_Function_mat4v2float = OpTypePointer Function %mat4v2float
        %142 = OpTypeFunction %void
    %f_inner = OpFunction %void None %20
%tint_local_index = OpFunctionParameter %uint
         %21 = OpLabel
               OpBranch %22
         %22 = OpLabel
               OpBranch %25
         %25 = OpLabel
         %27 = OpPhi %uint %tint_local_index %22 %28 %24
               OpLoopMerge %26 %24 None
               OpBranch %23
         %23 = OpLabel
         %57 = OpUGreaterThanEqual %bool %27 %uint_4
               OpSelectionMerge %59 None
               OpBranchConditional %57 %60 %59
         %60 = OpLabel
               OpBranch %26
         %59 = OpLabel
         %61 = OpAccessChain %_ptr_Workgroup_mat4v2float %w %27
               OpStore %61 %62 None
               OpBranch %24
         %24 = OpLabel
         %28 = OpIAdd %uint %27 %uint_1
               OpBranch %25
         %26 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %32 = OpFunctionCall %_arr_mat4v2float_uint_4 %33 %uint_0
               OpStore %w %32 None
         %35 = OpAccessChain %_ptr_Workgroup_mat4v2float %w %uint_1
         %38 = OpFunctionCall %mat4v2float %39 %uint_64
               OpStore %35 %38 None
         %41 = OpAccessChain %_ptr_Workgroup_v2float %w %uint_1 %uint_0
         %43 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %45 = OpLoad %v4uint %43 None
         %46 = OpVectorShuffle %v2uint %45 %45 2 3
         %48 = OpBitcast %v2float %46
         %49 = OpVectorShuffle %v2float %48 %48 1 0
               OpStore %41 %49 None
         %50 = OpAccessChain %_ptr_Workgroup_v2float %w %uint_1 %uint_0
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %52 = OpLoad %v4uint %51 None
         %53 = OpCompositeExtract %uint %52 2
         %54 = OpBitcast %float %53
         %55 = OpAccessChain %_ptr_Workgroup_float %50 %uint_0
               OpStore %55 %54 None
               OpReturn
               OpFunctionEnd
         %39 = OpFunction %mat4v2float None %64
%start_byte_offset = OpFunctionParameter %uint
         %65 = OpLabel
         %66 = OpUDiv %uint %start_byte_offset %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %66
         %69 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %71 = OpShiftRightLogical %uint %69 %uint_2
         %72 = OpLoad %v4uint %68 None
         %73 = OpVectorShuffle %v2uint %72 %72 2 3
         %74 = OpVectorShuffle %v2uint %72 %72 0 1
         %75 = OpIEqual %bool %71 %uint_2
         %77 = OpCompositeConstruct %v2bool %75 %75
         %78 = OpSelect %v2uint %77 %73 %74
         %79 = OpBitcast %v2float %78
         %80 = OpIAdd %uint %uint_8 %start_byte_offset
         %81 = OpUDiv %uint %80 %uint_16
         %82 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %81
         %83 = OpBitwiseAnd %uint %80 %uint_15
         %84 = OpShiftRightLogical %uint %83 %uint_2
         %85 = OpLoad %v4uint %82 None
         %86 = OpVectorShuffle %v2uint %85 %85 2 3
         %87 = OpVectorShuffle %v2uint %85 %85 0 1
         %88 = OpIEqual %bool %84 %uint_2
         %89 = OpCompositeConstruct %v2bool %88 %88
         %90 = OpSelect %v2uint %89 %86 %87
         %91 = OpBitcast %v2float %90
         %92 = OpIAdd %uint %uint_16 %start_byte_offset
         %93 = OpUDiv %uint %92 %uint_16
         %94 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %93
         %95 = OpBitwiseAnd %uint %92 %uint_15
         %96 = OpShiftRightLogical %uint %95 %uint_2
         %97 = OpLoad %v4uint %94 None
         %98 = OpVectorShuffle %v2uint %97 %97 2 3
         %99 = OpVectorShuffle %v2uint %97 %97 0 1
        %100 = OpIEqual %bool %96 %uint_2
        %101 = OpCompositeConstruct %v2bool %100 %100
        %102 = OpSelect %v2uint %101 %98 %99
        %103 = OpBitcast %v2float %102
        %104 = OpIAdd %uint %uint_24 %start_byte_offset
        %106 = OpUDiv %uint %104 %uint_16
        %107 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %106
        %108 = OpBitwiseAnd %uint %104 %uint_15
        %109 = OpShiftRightLogical %uint %108 %uint_2
        %110 = OpLoad %v4uint %107 None
        %111 = OpVectorShuffle %v2uint %110 %110 2 3
        %112 = OpVectorShuffle %v2uint %110 %110 0 1
        %113 = OpIEqual %bool %109 %uint_2
        %114 = OpCompositeConstruct %v2bool %113 %113
        %115 = OpSelect %v2uint %114 %111 %112
        %116 = OpBitcast %v2float %115
        %117 = OpCompositeConstruct %mat4v2float %79 %91 %103 %116
               OpReturnValue %117
               OpFunctionEnd
         %33 = OpFunction %_arr_mat4v2float_uint_4 None %119
%start_byte_offset_0 = OpFunctionParameter %uint
        %120 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v2float_uint_4 Function
               OpStore %a %123
               OpBranch %124
        %124 = OpLabel
               OpBranch %127
        %127 = OpLabel
        %129 = OpPhi %uint %uint_0 %124 %130 %126
               OpLoopMerge %128 %126 None
               OpBranch %125
        %125 = OpLabel
        %132 = OpUGreaterThanEqual %bool %129 %uint_4
               OpSelectionMerge %133 None
               OpBranchConditional %132 %134 %133
        %134 = OpLabel
               OpBranch %128
        %133 = OpLabel
        %135 = OpIMul %uint %129 %uint_32
        %137 = OpIAdd %uint %start_byte_offset_0 %135
        %138 = OpAccessChain %_ptr_Function_mat4v2float %a %129
        %140 = OpFunctionCall %mat4v2float %39 %137
               OpStore %138 %140 None
               OpBranch %126
        %126 = OpLabel
        %130 = OpIAdd %uint %129 %uint_1
               OpBranch %127
        %128 = OpLabel
        %131 = OpLoad %_arr_mat4v2float_uint_4 %a None
               OpReturnValue %131
               OpFunctionEnd
          %f = OpFunction %void None %142
        %143 = OpLabel
        %144 = OpLoad %uint %f_local_invocation_index_Input None
        %145 = OpFunctionCall %void %f_inner %144
               OpReturn
               OpFunctionEnd
