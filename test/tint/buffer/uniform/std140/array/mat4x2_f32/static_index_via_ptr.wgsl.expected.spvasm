; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 124
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
    %v2float = OpTypeVector %float 2
%mat4v2float = OpTypeMatrix %v2float 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v2float_uint_4 = OpTypeArray %mat4v2float %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_64 = OpConstant %uint 64
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %45 = OpTypeFunction %_arr_mat4v2float_uint_4 %uint
%_ptr_Function__arr_mat4v2float_uint_4 = OpTypePointer Function %_arr_mat4v2float_uint_4
         %49 = OpConstantNull %_arr_mat4v2float_uint_4
       %bool = OpTypeBool
    %uint_32 = OpConstant %uint 32
%_ptr_Function_mat4v2float = OpTypePointer Function %mat4v2float
     %uint_1 = OpConstant %uint 1
         %70 = OpTypeFunction %mat4v2float %uint
    %uint_16 = OpConstant %uint 16
     %uint_2 = OpConstant %uint 2
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
          %f = OpFunction %void None %14
         %15 = OpLabel
        %l_a = OpFunctionCall %_arr_mat4v2float_uint_4 %21 %uint_0
      %l_a_i = OpFunctionCall %mat4v2float %24 %uint_64
         %26 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_4
         %28 = OpLoad %v4uint %26 None
         %29 = OpVectorShuffle %v2uint %28 %28 2 3
    %l_a_i_i = OpBitcast %v2float %29
         %32 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_4
         %33 = OpLoad %v4uint %32 None
         %34 = OpCompositeExtract %uint %33 2
         %35 = OpBitcast %float %34
         %36 = OpCompositeExtract %float %l_a 0 0 0
         %37 = OpFAdd %float %35 %36
         %38 = OpCompositeExtract %float %l_a_i 0 0
         %39 = OpFAdd %float %37 %38
         %40 = OpCompositeExtract %float %l_a_i_i 0
         %41 = OpFAdd %float %39 %40
         %42 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %42 %41 None
               OpReturn
               OpFunctionEnd
         %21 = OpFunction %_arr_mat4v2float_uint_4 None %45
%start_byte_offset = OpFunctionParameter %uint
         %46 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v2float_uint_4 Function
               OpStore %a %49
               OpBranch %50
         %50 = OpLabel
               OpBranch %53
         %53 = OpLabel
         %55 = OpPhi %uint %uint_0 %50 %56 %52
               OpLoopMerge %54 %52 None
               OpBranch %51
         %51 = OpLabel
         %58 = OpUGreaterThanEqual %bool %55 %uint_4
               OpSelectionMerge %60 None
               OpBranchConditional %58 %61 %60
         %61 = OpLabel
               OpBranch %54
         %60 = OpLabel
         %62 = OpIMul %uint %55 %uint_32
         %64 = OpIAdd %uint %start_byte_offset %62
         %65 = OpAccessChain %_ptr_Function_mat4v2float %a %55
         %67 = OpFunctionCall %mat4v2float %24 %64
               OpStore %65 %67 None
               OpBranch %52
         %52 = OpLabel
         %56 = OpIAdd %uint %55 %uint_1
               OpBranch %53
         %54 = OpLabel
         %57 = OpLoad %_arr_mat4v2float_uint_4 %a None
               OpReturnValue %57
               OpFunctionEnd
         %24 = OpFunction %mat4v2float None %70
%start_byte_offset_0 = OpFunctionParameter %uint
         %71 = OpLabel
         %72 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %74 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %72
         %75 = OpUMod %uint %start_byte_offset_0 %uint_16
         %76 = OpUDiv %uint %75 %uint_4
         %77 = OpLoad %v4uint %74 None
         %78 = OpVectorShuffle %v2uint %77 %77 2 3
         %79 = OpVectorShuffle %v2uint %77 %77 0 1
         %80 = OpIEqual %bool %76 %uint_2
         %83 = OpCompositeConstruct %v2bool %80 %80
         %84 = OpSelect %v2uint %83 %78 %79
         %85 = OpBitcast %v2float %84
         %86 = OpIAdd %uint %uint_8 %start_byte_offset_0
         %87 = OpUDiv %uint %86 %uint_16
         %88 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %87
         %89 = OpUMod %uint %86 %uint_16
         %90 = OpUDiv %uint %89 %uint_4
         %91 = OpLoad %v4uint %88 None
         %92 = OpVectorShuffle %v2uint %91 %91 2 3
         %93 = OpVectorShuffle %v2uint %91 %91 0 1
         %94 = OpIEqual %bool %90 %uint_2
         %95 = OpCompositeConstruct %v2bool %94 %94
         %96 = OpSelect %v2uint %95 %92 %93
         %97 = OpBitcast %v2float %96
         %98 = OpIAdd %uint %uint_16 %start_byte_offset_0
         %99 = OpUDiv %uint %98 %uint_16
        %100 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %99
        %101 = OpUMod %uint %98 %uint_16
        %102 = OpUDiv %uint %101 %uint_4
        %103 = OpLoad %v4uint %100 None
        %104 = OpVectorShuffle %v2uint %103 %103 2 3
        %105 = OpVectorShuffle %v2uint %103 %103 0 1
        %106 = OpIEqual %bool %102 %uint_2
        %107 = OpCompositeConstruct %v2bool %106 %106
        %108 = OpSelect %v2uint %107 %104 %105
        %109 = OpBitcast %v2float %108
        %110 = OpIAdd %uint %uint_24 %start_byte_offset_0
        %112 = OpUDiv %uint %110 %uint_16
        %113 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %112
        %114 = OpUMod %uint %110 %uint_16
        %115 = OpUDiv %uint %114 %uint_4
        %116 = OpLoad %v4uint %113 None
        %117 = OpVectorShuffle %v2uint %116 %116 2 3
        %118 = OpVectorShuffle %v2uint %116 %116 0 1
        %119 = OpIEqual %bool %115 %uint_2
        %120 = OpCompositeConstruct %v2bool %119 %119
        %121 = OpSelect %v2uint %120 %117 %118
        %122 = OpBitcast %v2float %121
        %123 = OpCompositeConstruct %mat4v2float %85 %97 %109 %122
               OpReturnValue %123
               OpFunctionEnd
