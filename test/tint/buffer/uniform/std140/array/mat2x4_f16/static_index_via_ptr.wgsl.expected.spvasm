; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 100
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
     %v4half = OpTypeVector %half 4
 %mat2v4half = OpTypeMatrix %v4half 2
%_arr_mat2v4half_uint_4 = OpTypeArray %mat2v4half %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_32 = OpConstant %uint 32
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_2 = OpConstant %uint 2
     %v2uint = OpTypeVector %uint 2
     %v2half = OpTypeVector %half 2
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %47 = OpTypeFunction %_arr_mat2v4half_uint_4 %uint
%_ptr_Function__arr_mat2v4half_uint_4 = OpTypePointer Function %_arr_mat2v4half_uint_4
         %51 = OpConstantNull %_arr_mat2v4half_uint_4
       %bool = OpTypeBool
    %uint_16 = OpConstant %uint 16
%_ptr_Function_mat2v4half = OpTypePointer Function %mat2v4half
     %uint_1 = OpConstant %uint 1
         %72 = OpTypeFunction %mat2v4half %uint
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %f = OpFunction %void None %14
         %15 = OpLabel
        %l_a = OpFunctionCall %_arr_mat2v4half_uint_4 %20 %uint_0
      %l_a_i = OpFunctionCall %mat2v4half %23 %uint_32
         %25 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %28 = OpLoad %v4uint %25 None
         %29 = OpVectorShuffle %v2uint %28 %28 2 3
    %l_a_i_i = OpBitcast %v4half %29
         %32 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %33 = OpLoad %v4uint %32 None
         %34 = OpCompositeExtract %uint %33 2
         %36 = OpBitcast %v2half %34
         %37 = OpCompositeExtract %half %36 0
         %38 = OpCompositeExtract %half %l_a 0 0 0
         %39 = OpFAdd %half %37 %38
         %40 = OpCompositeExtract %half %l_a_i 0 0
         %41 = OpFAdd %half %39 %40
         %42 = OpCompositeExtract %half %l_a_i_i 0
         %43 = OpFAdd %half %41 %42
         %44 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %44 %43 None
               OpReturn
               OpFunctionEnd
         %20 = OpFunction %_arr_mat2v4half_uint_4 None %47
%start_byte_offset = OpFunctionParameter %uint
         %48 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat2v4half_uint_4 Function
               OpStore %a %51
               OpBranch %52
         %52 = OpLabel
               OpBranch %55
         %55 = OpLabel
         %57 = OpPhi %uint %uint_0 %52 %58 %54
               OpLoopMerge %56 %54 None
               OpBranch %53
         %53 = OpLabel
         %60 = OpUGreaterThanEqual %bool %57 %uint_4
               OpSelectionMerge %62 None
               OpBranchConditional %60 %63 %62
         %63 = OpLabel
               OpBranch %56
         %62 = OpLabel
         %64 = OpIMul %uint %57 %uint_16
         %66 = OpIAdd %uint %start_byte_offset %64
         %67 = OpAccessChain %_ptr_Function_mat2v4half %a %57
         %69 = OpFunctionCall %mat2v4half %23 %66
               OpStore %67 %69 None
               OpBranch %54
         %54 = OpLabel
         %58 = OpIAdd %uint %57 %uint_1
               OpBranch %55
         %56 = OpLabel
         %59 = OpLoad %_arr_mat2v4half_uint_4 %a None
               OpReturnValue %59
               OpFunctionEnd
         %23 = OpFunction %mat2v4half None %72
%start_byte_offset_0 = OpFunctionParameter %uint
         %73 = OpLabel
         %74 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %75 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %74
         %76 = OpUMod %uint %start_byte_offset_0 %uint_16
         %77 = OpUDiv %uint %76 %uint_4
         %78 = OpLoad %v4uint %75 None
         %79 = OpVectorShuffle %v2uint %78 %78 2 3
         %80 = OpVectorShuffle %v2uint %78 %78 0 1
         %81 = OpIEqual %bool %77 %uint_2
         %83 = OpCompositeConstruct %v2bool %81 %81
         %84 = OpSelect %v2uint %83 %79 %80
         %85 = OpBitcast %v4half %84
         %86 = OpIAdd %uint %uint_8 %start_byte_offset_0
         %88 = OpUDiv %uint %86 %uint_16
         %89 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %88
         %90 = OpUMod %uint %86 %uint_16
         %91 = OpUDiv %uint %90 %uint_4
         %92 = OpLoad %v4uint %89 None
         %93 = OpVectorShuffle %v2uint %92 %92 2 3
         %94 = OpVectorShuffle %v2uint %92 %92 0 1
         %95 = OpIEqual %bool %91 %uint_2
         %96 = OpCompositeConstruct %v2bool %95 %95
         %97 = OpSelect %v2uint %96 %93 %94
         %98 = OpBitcast %v4half %97
         %99 = OpCompositeConstruct %mat2v4half %85 %98
               OpReturnValue %99
               OpFunctionEnd
