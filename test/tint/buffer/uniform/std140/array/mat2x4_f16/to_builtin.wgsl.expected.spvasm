; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 79
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %33 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %t "t"
               OpName %l "l"
               OpName %a "a"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
     %v4half = OpTypeVector %half 4
 %mat2v4half = OpTypeMatrix %v4half 2
    %uint_32 = OpConstant %uint 32
     %v2half = OpTypeVector %half 2
 %mat4v2half = OpTypeMatrix %v2half 4
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
     %v2uint = OpTypeVector %uint 2
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %47 = OpTypeFunction %mat2v4half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
          %f = OpFunction %void None %14
         %15 = OpLabel
         %16 = OpFunctionCall %mat2v4half %19 %uint_32
          %t = OpTranspose %mat4v2half %16
         %24 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %27 = OpLoad %v4uint %24 None
         %28 = OpVectorShuffle %v2uint %27 %27 2 3
         %30 = OpBitcast %v4half %28
         %31 = OpVectorShuffle %v4half %30 %30 1 3 0 2
          %l = OpExtInst %half %33 Length %31
         %34 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %35 = OpLoad %v4uint %34 None
         %36 = OpVectorShuffle %v2uint %35 %35 2 3
         %37 = OpBitcast %v4half %36
         %38 = OpVectorShuffle %v4half %37 %37 1 3 0 2
         %39 = OpCompositeExtract %half %38 0
          %a = OpExtInst %half %33 FAbs %39
         %41 = OpCompositeExtract %half %t 0 0
         %42 = OpFAdd %half %41 %l
         %43 = OpFAdd %half %42 %a
         %44 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %44 %43 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat2v4half None %47
%start_byte_offset = OpFunctionParameter %uint
         %48 = OpLabel
         %49 = OpUDiv %uint %start_byte_offset %uint_16
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %49
         %52 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %54 = OpShiftRightLogical %uint %52 %uint_2
         %56 = OpLoad %v4uint %51 None
         %57 = OpVectorShuffle %v2uint %56 %56 2 3
         %58 = OpVectorShuffle %v2uint %56 %56 0 1
         %59 = OpIEqual %bool %54 %uint_2
         %62 = OpCompositeConstruct %v2bool %59 %59
         %63 = OpSelect %v2uint %62 %57 %58
         %64 = OpBitcast %v4half %63
         %65 = OpIAdd %uint %uint_8 %start_byte_offset
         %67 = OpUDiv %uint %65 %uint_16
         %68 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %67
         %69 = OpBitwiseAnd %uint %65 %uint_15
         %70 = OpShiftRightLogical %uint %69 %uint_2
         %71 = OpLoad %v4uint %68 None
         %72 = OpVectorShuffle %v2uint %71 %71 2 3
         %73 = OpVectorShuffle %v2uint %71 %71 0 1
         %74 = OpIEqual %bool %70 %uint_2
         %75 = OpCompositeConstruct %v2bool %74 %74
         %76 = OpSelect %v2uint %75 %72 %73
         %77 = OpBitcast %v4half %76
         %78 = OpCompositeConstruct %mat2v4half %64 %77
               OpReturnValue %78
               OpFunctionEnd
