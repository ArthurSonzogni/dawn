; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 121
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f" %f_local_invocation_index_Input
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpName %w "w"
               OpName %f_local_invocation_index_Input "f_local_invocation_index_Input"
               OpName %f_inner "f_inner"
               OpName %tint_local_index "tint_local_index"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpName %f "f"
               OpDecorate %_arr_v4uint_uint_4 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %f_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_4 = OpConstant %uint 4
%_arr_v4uint_uint_4 = OpTypeArray %v4uint %uint_4
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_4
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat2v4half = OpTypeMatrix %v4half 2
%_arr_mat2v4half_uint_4 = OpTypeArray %mat2v4half %uint_4
%_ptr_Workgroup__arr_mat2v4half_uint_4 = OpTypePointer Workgroup %_arr_mat2v4half_uint_4
          %w = OpVariable %_ptr_Workgroup__arr_mat2v4half_uint_4 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%f_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %19 = OpTypeFunction %void %uint
     %uint_2 = OpConstant %uint 2
   %uint_264 = OpConstant %uint 264
     %uint_0 = OpConstant %uint 0
%_ptr_Workgroup_mat2v4half = OpTypePointer Workgroup %mat2v4half
     %uint_1 = OpConstant %uint 1
    %uint_32 = OpConstant %uint 32
%_ptr_Workgroup_v4half = OpTypePointer Workgroup %v4half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v2half = OpTypeVector %half 2
%_ptr_Workgroup_half = OpTypePointer Workgroup %half
       %bool = OpTypeBool
         %63 = OpConstantNull %mat2v4half
         %65 = OpTypeFunction %mat2v4half %uint
    %uint_16 = OpConstant %uint 16
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
         %95 = OpTypeFunction %_arr_mat2v4half_uint_4 %uint
%_ptr_Function__arr_mat2v4half_uint_4 = OpTypePointer Function %_arr_mat2v4half_uint_4
         %99 = OpConstantNull %_arr_mat2v4half_uint_4
%_ptr_Function_mat2v4half = OpTypePointer Function %mat2v4half
        %117 = OpTypeFunction %void
    %f_inner = OpFunction %void None %19
%tint_local_index = OpFunctionParameter %uint
         %20 = OpLabel
               OpBranch %21
         %21 = OpLabel
               OpBranch %24
         %24 = OpLabel
         %26 = OpPhi %uint %tint_local_index %21 %27 %23
               OpLoopMerge %25 %23 None
               OpBranch %22
         %22 = OpLabel
         %58 = OpUGreaterThanEqual %bool %26 %uint_4
               OpSelectionMerge %60 None
               OpBranchConditional %58 %61 %60
         %61 = OpLabel
               OpBranch %25
         %60 = OpLabel
         %62 = OpAccessChain %_ptr_Workgroup_mat2v4half %w %26
               OpStore %62 %63 None
               OpBranch %23
         %23 = OpLabel
         %27 = OpIAdd %uint %26 %uint_1
               OpBranch %24
         %25 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %31 = OpFunctionCall %_arr_mat2v4half_uint_4 %32 %uint_0
               OpStore %w %31 None
         %34 = OpAccessChain %_ptr_Workgroup_mat2v4half %w %uint_1
         %37 = OpFunctionCall %mat2v4half %38 %uint_32
               OpStore %34 %37 None
         %40 = OpAccessChain %_ptr_Workgroup_v4half %w %uint_1 %uint_0
         %42 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %44 = OpLoad %v4uint %42 None
         %45 = OpVectorShuffle %v2uint %44 %44 2 3
         %47 = OpBitcast %v4half %45
         %48 = OpVectorShuffle %v4half %47 %47 1 3 0 2
               OpStore %40 %48 None
         %49 = OpAccessChain %_ptr_Workgroup_v4half %w %uint_1 %uint_0
         %50 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %51 = OpLoad %v4uint %50 None
         %52 = OpCompositeExtract %uint %51 2
         %54 = OpBitcast %v2half %52
         %55 = OpCompositeExtract %half %54 0
         %56 = OpAccessChain %_ptr_Workgroup_half %49 %uint_0
               OpStore %56 %55 None
               OpReturn
               OpFunctionEnd
         %38 = OpFunction %mat2v4half None %65
%start_byte_offset = OpFunctionParameter %uint
         %66 = OpLabel
         %67 = OpUDiv %uint %start_byte_offset %uint_16
         %69 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %67
         %70 = OpUMod %uint %start_byte_offset %uint_16
         %71 = OpUDiv %uint %70 %uint_4
         %72 = OpLoad %v4uint %69 None
         %73 = OpVectorShuffle %v2uint %72 %72 2 3
         %74 = OpVectorShuffle %v2uint %72 %72 0 1
         %75 = OpIEqual %bool %71 %uint_2
         %77 = OpCompositeConstruct %v2bool %75 %75
         %78 = OpSelect %v2uint %77 %73 %74
         %79 = OpBitcast %v4half %78
         %80 = OpIAdd %uint %uint_8 %start_byte_offset
         %82 = OpUDiv %uint %80 %uint_16
         %83 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %82
         %84 = OpUMod %uint %80 %uint_16
         %85 = OpUDiv %uint %84 %uint_4
         %86 = OpLoad %v4uint %83 None
         %87 = OpVectorShuffle %v2uint %86 %86 2 3
         %88 = OpVectorShuffle %v2uint %86 %86 0 1
         %89 = OpIEqual %bool %85 %uint_2
         %90 = OpCompositeConstruct %v2bool %89 %89
         %91 = OpSelect %v2uint %90 %87 %88
         %92 = OpBitcast %v4half %91
         %93 = OpCompositeConstruct %mat2v4half %79 %92
               OpReturnValue %93
               OpFunctionEnd
         %32 = OpFunction %_arr_mat2v4half_uint_4 None %95
%start_byte_offset_0 = OpFunctionParameter %uint
         %96 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat2v4half_uint_4 Function
               OpStore %a %99
               OpBranch %100
        %100 = OpLabel
               OpBranch %103
        %103 = OpLabel
        %105 = OpPhi %uint %uint_0 %100 %106 %102
               OpLoopMerge %104 %102 None
               OpBranch %101
        %101 = OpLabel
        %108 = OpUGreaterThanEqual %bool %105 %uint_4
               OpSelectionMerge %109 None
               OpBranchConditional %108 %110 %109
        %110 = OpLabel
               OpBranch %104
        %109 = OpLabel
        %111 = OpIMul %uint %105 %uint_16
        %112 = OpIAdd %uint %start_byte_offset_0 %111
        %113 = OpAccessChain %_ptr_Function_mat2v4half %a %105
        %115 = OpFunctionCall %mat2v4half %38 %112
               OpStore %113 %115 None
               OpBranch %102
        %102 = OpLabel
        %106 = OpIAdd %uint %105 %uint_1
               OpBranch %103
        %104 = OpLabel
        %107 = OpLoad %_arr_mat2v4half_uint_4 %a None
               OpReturnValue %107
               OpFunctionEnd
          %f = OpFunction %void None %117
        %118 = OpLabel
        %119 = OpLoad %uint %f_local_invocation_index_Input None
        %120 = OpFunctionCall %void %f_inner %119
               OpReturn
               OpFunctionEnd
