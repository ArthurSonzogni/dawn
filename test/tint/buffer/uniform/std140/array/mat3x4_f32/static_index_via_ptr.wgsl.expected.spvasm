; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 88
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %a_block_tint_explicit_layout 0 "inner"
               OpName %a_block_tint_explicit_layout "a_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %l_a "l_a"
               OpName %l_a_i "l_a_i"
               OpName %l_a_i_i "l_a_i_i"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_12 ArrayStride 16
               OpMemberDecorate %a_block_tint_explicit_layout 0 Offset 0
               OpDecorate %a_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_12 = OpConstant %uint 12
%_arr_v4uint_uint_12 = OpTypeArray %v4uint %uint_12
%a_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_12
%_ptr_Uniform_a_block_tint_explicit_layout = OpTypePointer Uniform %a_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_a_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
    %v4float = OpTypeVector %float 4
%mat3v4float = OpTypeMatrix %v4float 3
     %uint_4 = OpConstant %uint 4
%_arr_mat3v4float_uint_4 = OpTypeArray %mat3v4float %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_96 = OpConstant %uint 96
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_7 = OpConstant %uint 7
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %44 = OpTypeFunction %_arr_mat3v4float_uint_4 %uint
%_ptr_Function__arr_mat3v4float_uint_4 = OpTypePointer Function %_arr_mat3v4float_uint_4
         %48 = OpConstantNull %_arr_mat3v4float_uint_4
       %bool = OpTypeBool
    %uint_48 = OpConstant %uint 48
%_ptr_Function_mat3v4float = OpTypePointer Function %mat3v4float
     %uint_1 = OpConstant %uint 1
         %69 = OpTypeFunction %mat3v4float %uint
    %uint_16 = OpConstant %uint 16
    %uint_32 = OpConstant %uint 32
          %f = OpFunction %void None %14
         %15 = OpLabel
        %l_a = OpFunctionCall %_arr_mat3v4float_uint_4 %21 %uint_0
      %l_a_i = OpFunctionCall %mat3v4float %24 %uint_96
         %26 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_7
         %29 = OpLoad %v4uint %26 None
    %l_a_i_i = OpBitcast %v4float %29
         %31 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_7
         %32 = OpLoad %v4uint %31 None
         %33 = OpCompositeExtract %uint %32 0
         %34 = OpBitcast %float %33
         %35 = OpCompositeExtract %float %l_a 0 0 0
         %36 = OpFAdd %float %34 %35
         %37 = OpCompositeExtract %float %l_a_i 0 0
         %38 = OpFAdd %float %36 %37
         %39 = OpCompositeExtract %float %l_a_i_i 0
         %40 = OpFAdd %float %38 %39
         %41 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %41 %40 None
               OpReturn
               OpFunctionEnd
         %21 = OpFunction %_arr_mat3v4float_uint_4 None %44
%start_byte_offset = OpFunctionParameter %uint
         %45 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat3v4float_uint_4 Function
               OpStore %a %48
               OpBranch %49
         %49 = OpLabel
               OpBranch %52
         %52 = OpLabel
         %54 = OpPhi %uint %uint_0 %49 %55 %51
               OpLoopMerge %53 %51 None
               OpBranch %50
         %50 = OpLabel
         %57 = OpUGreaterThanEqual %bool %54 %uint_4
               OpSelectionMerge %59 None
               OpBranchConditional %57 %60 %59
         %60 = OpLabel
               OpBranch %53
         %59 = OpLabel
         %61 = OpIMul %uint %54 %uint_48
         %63 = OpIAdd %uint %start_byte_offset %61
         %64 = OpAccessChain %_ptr_Function_mat3v4float %a %54
         %66 = OpFunctionCall %mat3v4float %24 %63
               OpStore %64 %66 None
               OpBranch %51
         %51 = OpLabel
         %55 = OpIAdd %uint %54 %uint_1
               OpBranch %52
         %53 = OpLabel
         %56 = OpLoad %_arr_mat3v4float_uint_4 %a None
               OpReturnValue %56
               OpFunctionEnd
         %24 = OpFunction %mat3v4float None %69
%start_byte_offset_0 = OpFunctionParameter %uint
         %70 = OpLabel
         %71 = OpUDiv %uint %start_byte_offset_0 %uint_16
         %73 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %71
         %74 = OpLoad %v4uint %73 None
         %75 = OpBitcast %v4float %74
         %76 = OpIAdd %uint %uint_16 %start_byte_offset_0
         %77 = OpUDiv %uint %76 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpLoad %v4uint %78 None
         %80 = OpBitcast %v4float %79
         %81 = OpIAdd %uint %uint_32 %start_byte_offset_0
         %83 = OpUDiv %uint %81 %uint_16
         %84 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %83
         %85 = OpLoad %v4uint %84 None
         %86 = OpBitcast %v4float %85
         %87 = OpCompositeConstruct %mat3v4float %75 %80 %86
               OpReturnValue %87
               OpFunctionEnd
