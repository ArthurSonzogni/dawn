; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 139
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %p "p"
               OpName %f "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
     %v3half = OpTypeVector %half 3
 %mat4v3half = OpTypeMatrix %v3half 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v3half_uint_4 = OpTypeArray %mat4v3half %uint_4
%_ptr_Private__arr_mat4v3half_uint_4 = OpTypePointer Private %_arr_mat4v3half_uint_4
         %18 = OpConstantNull %_arr_mat4v3half_uint_4
          %p = OpVariable %_ptr_Private__arr_mat4v3half_uint_4 Private %18
       %void = OpTypeVoid
         %21 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_Private_mat4v3half = OpTypePointer Private %mat4v3half
     %uint_1 = OpConstant %uint 1
    %uint_64 = OpConstant %uint 64
%_ptr_Private_v3half = OpTypePointer Private %v3half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
     %v2half = OpTypeVector %half 2
%_ptr_Private_half = OpTypePointer Private %half
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %58 = OpTypeFunction %mat4v3half %uint
    %uint_16 = OpConstant %uint 16
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %118 = OpTypeFunction %_arr_mat4v3half_uint_4 %uint
%_ptr_Function__arr_mat4v3half_uint_4 = OpTypePointer Function %_arr_mat4v3half_uint_4
    %uint_32 = OpConstant %uint 32
%_ptr_Function_mat4v3half = OpTypePointer Function %mat4v3half
          %f = OpFunction %void None %21
         %22 = OpLabel
         %23 = OpFunctionCall %_arr_mat4v3half_uint_4 %24 %uint_0
               OpStore %p %23 None
         %26 = OpAccessChain %_ptr_Private_mat4v3half %p %uint_1
         %29 = OpFunctionCall %mat4v3half %30 %uint_64
               OpStore %26 %29 None
         %32 = OpAccessChain %_ptr_Private_v3half %p %uint_1 %uint_0
         %34 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %36 = OpLoad %v4uint %34 None
         %37 = OpVectorShuffle %v2uint %36 %36 2 3
         %40 = OpBitcast %v4half %37
         %41 = OpVectorShuffle %v3half %40 %40 0 1 2
         %42 = OpVectorShuffle %v3half %41 %41 2 0 1
               OpStore %32 %42 None
         %43 = OpAccessChain %_ptr_Private_v3half %p %uint_1 %uint_0
         %44 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %45 = OpLoad %v4uint %44 None
         %46 = OpCompositeExtract %uint %45 2
         %48 = OpBitcast %v2half %46
         %49 = OpCompositeExtract %half %48 0
         %50 = OpAccessChain %_ptr_Private_half %43 %uint_0
               OpStore %50 %49 None
         %52 = OpAccessChain %_ptr_Private_v3half %p %uint_1 %uint_0
         %53 = OpAccessChain %_ptr_Private_half %52 %uint_0
         %54 = OpLoad %half %53 None
         %55 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %55 %54 None
               OpReturn
               OpFunctionEnd
         %30 = OpFunction %mat4v3half None %58
%start_byte_offset = OpFunctionParameter %uint
         %59 = OpLabel
         %60 = OpUDiv %uint %start_byte_offset %uint_16
         %62 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %60
         %63 = OpUMod %uint %start_byte_offset %uint_16
         %64 = OpUDiv %uint %63 %uint_4
         %65 = OpLoad %v4uint %62 None
         %66 = OpVectorShuffle %v2uint %65 %65 2 3
         %67 = OpVectorShuffle %v2uint %65 %65 0 1
         %68 = OpIEqual %bool %64 %uint_2
         %72 = OpCompositeConstruct %v2bool %68 %68
         %73 = OpSelect %v2uint %72 %66 %67
         %74 = OpBitcast %v4half %73
         %75 = OpVectorShuffle %v3half %74 %74 0 1 2
         %76 = OpIAdd %uint %uint_8 %start_byte_offset
         %77 = OpUDiv %uint %76 %uint_16
         %78 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %77
         %79 = OpUMod %uint %76 %uint_16
         %80 = OpUDiv %uint %79 %uint_4
         %81 = OpLoad %v4uint %78 None
         %82 = OpVectorShuffle %v2uint %81 %81 2 3
         %83 = OpVectorShuffle %v2uint %81 %81 0 1
         %84 = OpIEqual %bool %80 %uint_2
         %85 = OpCompositeConstruct %v2bool %84 %84
         %86 = OpSelect %v2uint %85 %82 %83
         %87 = OpBitcast %v4half %86
         %88 = OpVectorShuffle %v3half %87 %87 0 1 2
         %89 = OpIAdd %uint %uint_16 %start_byte_offset
         %90 = OpUDiv %uint %89 %uint_16
         %91 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %90
         %92 = OpUMod %uint %89 %uint_16
         %93 = OpUDiv %uint %92 %uint_4
         %94 = OpLoad %v4uint %91 None
         %95 = OpVectorShuffle %v2uint %94 %94 2 3
         %96 = OpVectorShuffle %v2uint %94 %94 0 1
         %97 = OpIEqual %bool %93 %uint_2
         %98 = OpCompositeConstruct %v2bool %97 %97
         %99 = OpSelect %v2uint %98 %95 %96
        %100 = OpBitcast %v4half %99
        %101 = OpVectorShuffle %v3half %100 %100 0 1 2
        %102 = OpIAdd %uint %uint_24 %start_byte_offset
        %104 = OpUDiv %uint %102 %uint_16
        %105 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %104
        %106 = OpUMod %uint %102 %uint_16
        %107 = OpUDiv %uint %106 %uint_4
        %108 = OpLoad %v4uint %105 None
        %109 = OpVectorShuffle %v2uint %108 %108 2 3
        %110 = OpVectorShuffle %v2uint %108 %108 0 1
        %111 = OpIEqual %bool %107 %uint_2
        %112 = OpCompositeConstruct %v2bool %111 %111
        %113 = OpSelect %v2uint %112 %109 %110
        %114 = OpBitcast %v4half %113
        %115 = OpVectorShuffle %v3half %114 %114 0 1 2
        %116 = OpCompositeConstruct %mat4v3half %75 %88 %101 %115
               OpReturnValue %116
               OpFunctionEnd
         %24 = OpFunction %_arr_mat4v3half_uint_4 None %118
%start_byte_offset_0 = OpFunctionParameter %uint
        %119 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v3half_uint_4 Function
               OpStore %a %18
               OpBranch %122
        %122 = OpLabel
               OpBranch %125
        %125 = OpLabel
        %127 = OpPhi %uint %uint_0 %122 %128 %124
               OpLoopMerge %126 %124 None
               OpBranch %123
        %123 = OpLabel
        %130 = OpUGreaterThanEqual %bool %127 %uint_4
               OpSelectionMerge %131 None
               OpBranchConditional %130 %132 %131
        %132 = OpLabel
               OpBranch %126
        %131 = OpLabel
        %133 = OpIMul %uint %127 %uint_32
        %135 = OpIAdd %uint %start_byte_offset_0 %133
        %136 = OpAccessChain %_ptr_Function_mat4v3half %a %127
        %138 = OpFunctionCall %mat4v3half %30 %135
               OpStore %136 %138 None
               OpBranch %124
        %124 = OpLabel
        %128 = OpIAdd %uint %127 %uint_1
               OpBranch %125
        %126 = OpLabel
        %129 = OpLoad %_arr_mat4v3half_uint_4 %a None
               OpReturnValue %129
               OpFunctionEnd
