; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 153
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %a "a"
               OpName %a_0 "a"
               OpName %b "b"
               OpName %m "m"
               OpName %c "c"
               OpName %v "v"
               OpName %d "d"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a_1 "a"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
     %v3half = OpTypeVector %half 3
 %mat4v3half = OpTypeMatrix %v3half 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v3half_uint_4 = OpTypeArray %mat4v3half %uint_4
         %18 = OpTypeFunction %half %_arr_mat4v3half_uint_4
         %23 = OpTypeFunction %half %mat4v3half
         %28 = OpTypeFunction %half %v3half
         %33 = OpTypeFunction %half %half
       %void = OpTypeVoid
         %37 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
    %uint_32 = OpConstant %uint 32
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_2 = OpConstant %uint 2
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %72 = OpTypeFunction %mat4v3half %uint
    %uint_16 = OpConstant %uint 16
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %131 = OpTypeFunction %_arr_mat4v3half_uint_4 %uint
%_ptr_Function__arr_mat4v3half_uint_4 = OpTypePointer Function %_arr_mat4v3half_uint_4
        %135 = OpConstantNull %_arr_mat4v3half_uint_4
%_ptr_Function_mat4v3half = OpTypePointer Function %mat4v3half
     %uint_1 = OpConstant %uint 1
          %a = OpFunction %half None %18
        %a_0 = OpFunctionParameter %_arr_mat4v3half_uint_4
         %19 = OpLabel
         %20 = OpCompositeExtract %half %a_0 0 0 0
               OpReturnValue %20
               OpFunctionEnd
          %b = OpFunction %half None %23
          %m = OpFunctionParameter %mat4v3half
         %24 = OpLabel
         %25 = OpCompositeExtract %half %m 0 0
               OpReturnValue %25
               OpFunctionEnd
          %c = OpFunction %half None %28
          %v = OpFunctionParameter %v3half
         %29 = OpLabel
         %30 = OpCompositeExtract %half %v 0
               OpReturnValue %30
               OpFunctionEnd
          %d = OpFunction %half None %33
          %f = OpFunctionParameter %half
         %34 = OpLabel
               OpReturnValue %f
               OpFunctionEnd
        %f_0 = OpFunction %void None %37
         %38 = OpLabel
         %39 = OpFunctionCall %_arr_mat4v3half_uint_4 %40 %uint_0
         %42 = OpFunctionCall %half %a %39
         %43 = OpFunctionCall %mat4v3half %44 %uint_32
         %46 = OpFunctionCall %half %b %43
         %47 = OpFAdd %half %42 %46
         %48 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %51 = OpLoad %v4uint %48 None
         %52 = OpVectorShuffle %v2uint %51 %51 0 1
         %55 = OpBitcast %v4half %52
         %56 = OpVectorShuffle %v3half %55 %55 0 1 2
         %57 = OpVectorShuffle %v3half %56 %56 2 0 1
         %58 = OpFunctionCall %half %c %57
         %59 = OpFAdd %half %47 %58
         %60 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_2
         %61 = OpLoad %v4uint %60 None
         %62 = OpVectorShuffle %v2uint %61 %61 0 1
         %63 = OpBitcast %v4half %62
         %64 = OpVectorShuffle %v3half %63 %63 0 1 2
         %65 = OpVectorShuffle %v3half %64 %64 2 0 1
         %66 = OpCompositeExtract %half %65 0
         %67 = OpFunctionCall %half %d %66
         %68 = OpFAdd %half %59 %67
         %69 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %69 %68 None
               OpReturn
               OpFunctionEnd
         %44 = OpFunction %mat4v3half None %72
%start_byte_offset = OpFunctionParameter %uint
         %73 = OpLabel
         %74 = OpUDiv %uint %start_byte_offset %uint_16
         %76 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %74
         %77 = OpUMod %uint %start_byte_offset %uint_16
         %78 = OpUDiv %uint %77 %uint_4
         %79 = OpLoad %v4uint %76 None
         %80 = OpVectorShuffle %v2uint %79 %79 2 3
         %81 = OpVectorShuffle %v2uint %79 %79 0 1
         %82 = OpIEqual %bool %78 %uint_2
         %85 = OpCompositeConstruct %v2bool %82 %82
         %86 = OpSelect %v2uint %85 %80 %81
         %87 = OpBitcast %v4half %86
         %88 = OpVectorShuffle %v3half %87 %87 0 1 2
         %89 = OpIAdd %uint %uint_8 %start_byte_offset
         %90 = OpUDiv %uint %89 %uint_16
         %91 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %90
         %92 = OpUMod %uint %89 %uint_16
         %93 = OpUDiv %uint %92 %uint_4
         %94 = OpLoad %v4uint %91 None
         %95 = OpVectorShuffle %v2uint %94 %94 2 3
         %96 = OpVectorShuffle %v2uint %94 %94 0 1
         %97 = OpIEqual %bool %93 %uint_2
         %98 = OpCompositeConstruct %v2bool %97 %97
         %99 = OpSelect %v2uint %98 %95 %96
        %100 = OpBitcast %v4half %99
        %101 = OpVectorShuffle %v3half %100 %100 0 1 2
        %102 = OpIAdd %uint %uint_16 %start_byte_offset
        %103 = OpUDiv %uint %102 %uint_16
        %104 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %103
        %105 = OpUMod %uint %102 %uint_16
        %106 = OpUDiv %uint %105 %uint_4
        %107 = OpLoad %v4uint %104 None
        %108 = OpVectorShuffle %v2uint %107 %107 2 3
        %109 = OpVectorShuffle %v2uint %107 %107 0 1
        %110 = OpIEqual %bool %106 %uint_2
        %111 = OpCompositeConstruct %v2bool %110 %110
        %112 = OpSelect %v2uint %111 %108 %109
        %113 = OpBitcast %v4half %112
        %114 = OpVectorShuffle %v3half %113 %113 0 1 2
        %115 = OpIAdd %uint %uint_24 %start_byte_offset
        %117 = OpUDiv %uint %115 %uint_16
        %118 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %117
        %119 = OpUMod %uint %115 %uint_16
        %120 = OpUDiv %uint %119 %uint_4
        %121 = OpLoad %v4uint %118 None
        %122 = OpVectorShuffle %v2uint %121 %121 2 3
        %123 = OpVectorShuffle %v2uint %121 %121 0 1
        %124 = OpIEqual %bool %120 %uint_2
        %125 = OpCompositeConstruct %v2bool %124 %124
        %126 = OpSelect %v2uint %125 %122 %123
        %127 = OpBitcast %v4half %126
        %128 = OpVectorShuffle %v3half %127 %127 0 1 2
        %129 = OpCompositeConstruct %mat4v3half %88 %101 %114 %128
               OpReturnValue %129
               OpFunctionEnd
         %40 = OpFunction %_arr_mat4v3half_uint_4 None %131
%start_byte_offset_0 = OpFunctionParameter %uint
        %132 = OpLabel
        %a_1 = OpVariable %_ptr_Function__arr_mat4v3half_uint_4 Function
               OpStore %a_1 %135
               OpBranch %136
        %136 = OpLabel
               OpBranch %139
        %139 = OpLabel
        %141 = OpPhi %uint %uint_0 %136 %142 %138
               OpLoopMerge %140 %138 None
               OpBranch %137
        %137 = OpLabel
        %144 = OpUGreaterThanEqual %bool %141 %uint_4
               OpSelectionMerge %145 None
               OpBranchConditional %144 %146 %145
        %146 = OpLabel
               OpBranch %140
        %145 = OpLabel
        %147 = OpIMul %uint %141 %uint_32
        %148 = OpIAdd %uint %start_byte_offset_0 %147
        %149 = OpAccessChain %_ptr_Function_mat4v3half %a_1 %141
        %151 = OpFunctionCall %mat4v3half %44 %148
               OpStore %149 %151 None
               OpBranch %138
        %138 = OpLabel
        %142 = OpIAdd %uint %141 %uint_1
               OpBranch %139
        %140 = OpLabel
        %143 = OpLoad %_arr_mat4v3half_uint_4 %a_1 None
               OpReturnValue %143
               OpFunctionEnd
