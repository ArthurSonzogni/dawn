; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 170
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block_tint_explicit_layout 0 "inner"
               OpName %s_block_tint_explicit_layout "s_block_tint_explicit_layout"
               OpName %f "f"
               OpName %tint_store_and_preserve_padding "tint_store_and_preserve_padding"
               OpName %value_param "value_param"
               OpName %tint_store_and_preserve_padding_0 "tint_store_and_preserve_padding"
               OpName %target_indices "target_indices"
               OpName %value_param_0 "value_param"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a "a"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpDecorate %_arr_mat4v3half_uint_4 ArrayStride 32
               OpMemberDecorate %s_block_tint_explicit_layout 0 Offset 0
               OpMemberDecorate %s_block_tint_explicit_layout 0 ColMajor
               OpMemberDecorate %s_block_tint_explicit_layout 0 MatrixStride 8
               OpDecorate %s_block_tint_explicit_layout Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat4v3half = OpTypeMatrix %v3half 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v3half_uint_4 = OpTypeArray %mat4v3half %uint_4
%s_block_tint_explicit_layout = OpTypeStruct %_arr_mat4v3half_uint_4
%_ptr_StorageBuffer_s_block_tint_explicit_layout = OpTypePointer StorageBuffer %s_block_tint_explicit_layout
          %8 = OpVariable %_ptr_StorageBuffer_s_block_tint_explicit_layout StorageBuffer
       %void = OpTypeVoid
         %18 = OpTypeFunction %void
%_arr_mat4v3half_uint_4_0 = OpTypeArray %mat4v3half %uint_4
     %uint_0 = OpConstant %uint 0
    %uint_64 = OpConstant %uint 64
     %uint_1 = OpConstant %uint 1
%_arr_uint_uint_1 = OpTypeArray %uint %uint_1
%_ptr_StorageBuffer_v3half = OpTypePointer StorageBuffer %v3half
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v2uint = OpTypeVector %uint 2
     %v4half = OpTypeVector %half 4
     %v2half = OpTypeVector %half 2
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %55 = OpTypeFunction %void %_arr_mat4v3half_uint_4_0
%_ptr_Function__arr_mat4v3half_uint_4_0 = OpTypePointer Function %_arr_mat4v3half_uint_4_0
       %bool = OpTypeBool
%_ptr_Function_mat4v3half = OpTypePointer Function %mat4v3half
         %77 = OpTypeFunction %void %_arr_uint_uint_1 %mat4v3half
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
         %91 = OpTypeFunction %mat4v3half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
        %150 = OpTypeFunction %_arr_mat4v3half_uint_4_0 %uint
        %153 = OpConstantNull %_arr_mat4v3half_uint_4_0
    %uint_32 = OpConstant %uint 32
          %f = OpFunction %void None %18
         %19 = OpLabel
         %20 = OpFunctionCall %_arr_mat4v3half_uint_4_0 %22 %uint_0
         %24 = OpFunctionCall %void %tint_store_and_preserve_padding %20
         %26 = OpFunctionCall %mat4v3half %27 %uint_64
         %31 = OpCompositeConstruct %_arr_uint_uint_1 %uint_1
         %32 = OpFunctionCall %void %tint_store_and_preserve_padding_0 %31 %26
         %34 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_1 %uint_0
         %36 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %38 = OpLoad %v4uint %36 None
         %39 = OpVectorShuffle %v2uint %38 %38 2 3
         %42 = OpBitcast %v4half %39
         %43 = OpVectorShuffle %v3half %42 %42 0 1 2
         %44 = OpVectorShuffle %v3half %43 %43 2 0 1
               OpStore %34 %44 None
         %45 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_1 %uint_0
         %46 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %47 = OpLoad %v4uint %46 None
         %48 = OpCompositeExtract %uint %47 2
         %50 = OpBitcast %v2half %48
         %51 = OpCompositeExtract %half %50 0
         %52 = OpAccessChain %_ptr_StorageBuffer_half %45 %uint_0
               OpStore %52 %51 None
               OpReturn
               OpFunctionEnd
%tint_store_and_preserve_padding = OpFunction %void None %55
%value_param = OpFunctionParameter %_arr_mat4v3half_uint_4_0
         %56 = OpLabel
         %57 = OpVariable %_ptr_Function__arr_mat4v3half_uint_4_0 Function
               OpStore %57 %value_param
               OpBranch %59
         %59 = OpLabel
               OpBranch %62
         %62 = OpLabel
         %64 = OpPhi %uint %uint_0 %59 %65 %61
               OpLoopMerge %63 %61 None
               OpBranch %60
         %60 = OpLabel
         %66 = OpUGreaterThanEqual %bool %64 %uint_4
               OpSelectionMerge %68 None
               OpBranchConditional %66 %69 %68
         %69 = OpLabel
               OpBranch %63
         %68 = OpLabel
         %70 = OpAccessChain %_ptr_Function_mat4v3half %57 %64
         %72 = OpLoad %mat4v3half %70 None
         %73 = OpCompositeConstruct %_arr_uint_uint_1 %64
         %74 = OpFunctionCall %void %tint_store_and_preserve_padding_0 %73 %72
               OpBranch %61
         %61 = OpLabel
         %65 = OpIAdd %uint %64 %uint_1
               OpBranch %62
         %63 = OpLabel
               OpReturn
               OpFunctionEnd
%tint_store_and_preserve_padding_0 = OpFunction %void None %77
%target_indices = OpFunctionParameter %_arr_uint_uint_1
%value_param_0 = OpFunctionParameter %mat4v3half
         %78 = OpLabel
         %79 = OpCompositeExtract %uint %target_indices 0
         %80 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %79 %uint_0
         %81 = OpCompositeExtract %v3half %value_param_0 0
               OpStore %80 %81 None
         %82 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %79 %uint_1
         %83 = OpCompositeExtract %v3half %value_param_0 1
               OpStore %82 %83 None
         %84 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %79 %uint_2
         %86 = OpCompositeExtract %v3half %value_param_0 2
               OpStore %84 %86 None
         %87 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %79 %uint_3
         %89 = OpCompositeExtract %v3half %value_param_0 3
               OpStore %87 %89 None
               OpReturn
               OpFunctionEnd
         %27 = OpFunction %mat4v3half None %91
%start_byte_offset = OpFunctionParameter %uint
         %92 = OpLabel
         %93 = OpUDiv %uint %start_byte_offset %uint_16
         %95 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %93
         %96 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %98 = OpShiftRightLogical %uint %96 %uint_2
         %99 = OpLoad %v4uint %95 None
        %100 = OpVectorShuffle %v2uint %99 %99 2 3
        %101 = OpVectorShuffle %v2uint %99 %99 0 1
        %102 = OpIEqual %bool %98 %uint_2
        %104 = OpCompositeConstruct %v2bool %102 %102
        %105 = OpSelect %v2uint %104 %100 %101
        %106 = OpBitcast %v4half %105
        %107 = OpVectorShuffle %v3half %106 %106 0 1 2
        %108 = OpIAdd %uint %uint_8 %start_byte_offset
        %109 = OpUDiv %uint %108 %uint_16
        %110 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %109
        %111 = OpBitwiseAnd %uint %108 %uint_15
        %112 = OpShiftRightLogical %uint %111 %uint_2
        %113 = OpLoad %v4uint %110 None
        %114 = OpVectorShuffle %v2uint %113 %113 2 3
        %115 = OpVectorShuffle %v2uint %113 %113 0 1
        %116 = OpIEqual %bool %112 %uint_2
        %117 = OpCompositeConstruct %v2bool %116 %116
        %118 = OpSelect %v2uint %117 %114 %115
        %119 = OpBitcast %v4half %118
        %120 = OpVectorShuffle %v3half %119 %119 0 1 2
        %121 = OpIAdd %uint %uint_16 %start_byte_offset
        %122 = OpUDiv %uint %121 %uint_16
        %123 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %122
        %124 = OpBitwiseAnd %uint %121 %uint_15
        %125 = OpShiftRightLogical %uint %124 %uint_2
        %126 = OpLoad %v4uint %123 None
        %127 = OpVectorShuffle %v2uint %126 %126 2 3
        %128 = OpVectorShuffle %v2uint %126 %126 0 1
        %129 = OpIEqual %bool %125 %uint_2
        %130 = OpCompositeConstruct %v2bool %129 %129
        %131 = OpSelect %v2uint %130 %127 %128
        %132 = OpBitcast %v4half %131
        %133 = OpVectorShuffle %v3half %132 %132 0 1 2
        %134 = OpIAdd %uint %uint_24 %start_byte_offset
        %136 = OpUDiv %uint %134 %uint_16
        %137 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %136
        %138 = OpBitwiseAnd %uint %134 %uint_15
        %139 = OpShiftRightLogical %uint %138 %uint_2
        %140 = OpLoad %v4uint %137 None
        %141 = OpVectorShuffle %v2uint %140 %140 2 3
        %142 = OpVectorShuffle %v2uint %140 %140 0 1
        %143 = OpIEqual %bool %139 %uint_2
        %144 = OpCompositeConstruct %v2bool %143 %143
        %145 = OpSelect %v2uint %144 %141 %142
        %146 = OpBitcast %v4half %145
        %147 = OpVectorShuffle %v3half %146 %146 0 1 2
        %148 = OpCompositeConstruct %mat4v3half %107 %120 %133 %147
               OpReturnValue %148
               OpFunctionEnd
         %22 = OpFunction %_arr_mat4v3half_uint_4_0 None %150
%start_byte_offset_0 = OpFunctionParameter %uint
        %151 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v3half_uint_4_0 Function
               OpStore %a %153
               OpBranch %154
        %154 = OpLabel
               OpBranch %157
        %157 = OpLabel
        %159 = OpPhi %uint %uint_0 %154 %160 %156
               OpLoopMerge %158 %156 None
               OpBranch %155
        %155 = OpLabel
        %162 = OpUGreaterThanEqual %bool %159 %uint_4
               OpSelectionMerge %163 None
               OpBranchConditional %162 %164 %163
        %164 = OpLabel
               OpBranch %158
        %163 = OpLabel
        %165 = OpIMul %uint %159 %uint_32
        %167 = OpIAdd %uint %start_byte_offset_0 %165
        %168 = OpAccessChain %_ptr_Function_mat4v3half %a %159
        %169 = OpFunctionCall %mat4v3half %27 %167
               OpStore %168 %169 None
               OpBranch %156
        %156 = OpLabel
        %160 = OpIAdd %uint %159 %uint_1
               OpBranch %157
        %158 = OpLabel
        %161 = OpLoad %_arr_mat4v3half_uint_4_0 %a None
               OpReturnValue %161
               OpFunctionEnd
