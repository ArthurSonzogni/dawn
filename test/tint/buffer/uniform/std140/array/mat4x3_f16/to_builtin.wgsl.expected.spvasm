; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 109
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %34 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f "f"
               OpExecutionMode %f LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %f "f"
               OpName %t "t"
               OpName %l "l"
               OpName %a "a"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_8 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_8 = OpConstant %uint 8
%_arr_v4uint_uint_8 = OpTypeArray %v4uint %uint_8
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_8
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
    %s_block = OpTypeStruct %half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %14 = OpTypeFunction %void
     %v3half = OpTypeVector %half 3
 %mat4v3half = OpTypeMatrix %v3half 4
    %uint_64 = OpConstant %uint 64
     %v4half = OpTypeVector %half 4
 %mat3v4half = OpTypeMatrix %v4half 3
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
     %v2uint = OpTypeVector %uint 2
%_ptr_StorageBuffer_half = OpTypePointer StorageBuffer %half
         %49 = OpTypeFunction %mat4v3half %uint
    %uint_16 = OpConstant %uint 16
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %uint_24 = OpConstant %uint 24
          %f = OpFunction %void None %14
         %15 = OpLabel
         %16 = OpFunctionCall %mat4v3half %19 %uint_64
          %t = OpTranspose %mat3v4half %16
         %24 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %27 = OpLoad %v4uint %24 None
         %28 = OpVectorShuffle %v2uint %27 %27 2 3
         %30 = OpBitcast %v4half %28
         %31 = OpVectorShuffle %v3half %30 %30 0 1 2
         %32 = OpVectorShuffle %v3half %31 %31 2 0 1
          %l = OpExtInst %half %34 Length %32
         %35 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_0
         %36 = OpLoad %v4uint %35 None
         %37 = OpVectorShuffle %v2uint %36 %36 2 3
         %38 = OpBitcast %v4half %37
         %39 = OpVectorShuffle %v3half %38 %38 0 1 2
         %40 = OpVectorShuffle %v3half %39 %39 2 0 1
         %41 = OpCompositeExtract %half %40 0
          %a = OpExtInst %half %34 FAbs %41
         %43 = OpCompositeExtract %half %t 0 0
         %44 = OpFAdd %half %43 %l
         %45 = OpFAdd %half %44 %a
         %46 = OpAccessChain %_ptr_StorageBuffer_half %8 %uint_0
               OpStore %46 %45 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat4v3half None %49
%start_byte_offset = OpFunctionParameter %uint
         %50 = OpLabel
         %51 = OpUDiv %uint %start_byte_offset %uint_16
         %53 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %51
         %54 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %56 = OpShiftRightLogical %uint %54 %uint_2
         %58 = OpLoad %v4uint %53 None
         %59 = OpVectorShuffle %v2uint %58 %58 2 3
         %60 = OpVectorShuffle %v2uint %58 %58 0 1
         %61 = OpIEqual %bool %56 %uint_2
         %64 = OpCompositeConstruct %v2bool %61 %61
         %65 = OpSelect %v2uint %64 %59 %60
         %66 = OpBitcast %v4half %65
         %67 = OpVectorShuffle %v3half %66 %66 0 1 2
         %68 = OpIAdd %uint %uint_8 %start_byte_offset
         %69 = OpUDiv %uint %68 %uint_16
         %70 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %69
         %71 = OpBitwiseAnd %uint %68 %uint_15
         %72 = OpShiftRightLogical %uint %71 %uint_2
         %73 = OpLoad %v4uint %70 None
         %74 = OpVectorShuffle %v2uint %73 %73 2 3
         %75 = OpVectorShuffle %v2uint %73 %73 0 1
         %76 = OpIEqual %bool %72 %uint_2
         %77 = OpCompositeConstruct %v2bool %76 %76
         %78 = OpSelect %v2uint %77 %74 %75
         %79 = OpBitcast %v4half %78
         %80 = OpVectorShuffle %v3half %79 %79 0 1 2
         %81 = OpIAdd %uint %uint_16 %start_byte_offset
         %82 = OpUDiv %uint %81 %uint_16
         %83 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %82
         %84 = OpBitwiseAnd %uint %81 %uint_15
         %85 = OpShiftRightLogical %uint %84 %uint_2
         %86 = OpLoad %v4uint %83 None
         %87 = OpVectorShuffle %v2uint %86 %86 2 3
         %88 = OpVectorShuffle %v2uint %86 %86 0 1
         %89 = OpIEqual %bool %85 %uint_2
         %90 = OpCompositeConstruct %v2bool %89 %89
         %91 = OpSelect %v2uint %90 %87 %88
         %92 = OpBitcast %v4half %91
         %93 = OpVectorShuffle %v3half %92 %92 0 1 2
         %94 = OpIAdd %uint %uint_24 %start_byte_offset
         %96 = OpUDiv %uint %94 %uint_16
         %97 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %96
         %98 = OpBitwiseAnd %uint %94 %uint_15
         %99 = OpShiftRightLogical %uint %98 %uint_2
        %100 = OpLoad %v4uint %97 None
        %101 = OpVectorShuffle %v2uint %100 %100 2 3
        %102 = OpVectorShuffle %v2uint %100 %100 0 1
        %103 = OpIEqual %bool %99 %uint_2
        %104 = OpCompositeConstruct %v2bool %103 %103
        %105 = OpSelect %v2uint %104 %101 %102
        %106 = OpBitcast %v4half %105
        %107 = OpVectorShuffle %v3half %106 %106 0 1 2
        %108 = OpCompositeConstruct %mat4v3half %67 %80 %93 %107
               OpReturnValue %108
               OpFunctionEnd
