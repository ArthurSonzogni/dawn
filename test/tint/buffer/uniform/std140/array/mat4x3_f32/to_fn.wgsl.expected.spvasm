; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 120
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %f_0 "f"
               OpExecutionMode %f_0 LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %a "a"
               OpName %a_0 "a"
               OpName %b "b"
               OpName %m "m"
               OpName %c "c"
               OpName %v "v"
               OpName %d "d"
               OpName %f "f"
               OpName %f_0 "f"
               OpName %start_byte_offset "start_byte_offset"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %a_1 "a"
               OpDecorate %_arr_v4uint_uint_16 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
    %uint_16 = OpConstant %uint 16
%_arr_v4uint_uint_16 = OpTypeArray %v4uint %uint_16
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_16
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
      %float = OpTypeFloat 32
    %s_block = OpTypeStruct %float
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
    %v3float = OpTypeVector %float 3
%mat4v3float = OpTypeMatrix %v3float 4
     %uint_4 = OpConstant %uint 4
%_arr_mat4v3float_uint_4 = OpTypeArray %mat4v3float %uint_4
         %18 = OpTypeFunction %float %_arr_mat4v3float_uint_4
         %23 = OpTypeFunction %float %mat4v3float
         %28 = OpTypeFunction %float %v3float
         %33 = OpTypeFunction %float %float
       %void = OpTypeVoid
         %37 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
    %uint_64 = OpConstant %uint 64
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %v3uint = OpTypeVector %uint 3
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %68 = OpTypeFunction %mat4v3float %uint
    %uint_32 = OpConstant %uint 32
    %uint_48 = OpConstant %uint 48
         %97 = OpTypeFunction %_arr_mat4v3float_uint_4 %uint
%_ptr_Function__arr_mat4v3float_uint_4 = OpTypePointer Function %_arr_mat4v3float_uint_4
        %101 = OpConstantNull %_arr_mat4v3float_uint_4
       %bool = OpTypeBool
%_ptr_Function_mat4v3float = OpTypePointer Function %mat4v3float
     %uint_1 = OpConstant %uint 1
          %a = OpFunction %float None %18
        %a_0 = OpFunctionParameter %_arr_mat4v3float_uint_4
         %19 = OpLabel
         %20 = OpCompositeExtract %float %a_0 0 0 0
               OpReturnValue %20
               OpFunctionEnd
          %b = OpFunction %float None %23
          %m = OpFunctionParameter %mat4v3float
         %24 = OpLabel
         %25 = OpCompositeExtract %float %m 0 0
               OpReturnValue %25
               OpFunctionEnd
          %c = OpFunction %float None %28
          %v = OpFunctionParameter %v3float
         %29 = OpLabel
         %30 = OpCompositeExtract %float %v 0
               OpReturnValue %30
               OpFunctionEnd
          %d = OpFunction %float None %33
          %f = OpFunctionParameter %float
         %34 = OpLabel
               OpReturnValue %f
               OpFunctionEnd
        %f_0 = OpFunction %void None %37
         %38 = OpLabel
         %39 = OpFunctionCall %_arr_mat4v3float_uint_4 %40 %uint_0
         %42 = OpFunctionCall %float %a %39
         %43 = OpFunctionCall %mat4v3float %44 %uint_64
         %46 = OpFunctionCall %float %b %43
         %47 = OpFAdd %float %42 %46
         %48 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_4
         %50 = OpLoad %v4uint %48 None
         %51 = OpVectorShuffle %v3uint %50 %50 0 1 2
         %53 = OpBitcast %v3float %51
         %54 = OpVectorShuffle %v3float %53 %53 2 0 1
         %55 = OpFunctionCall %float %c %54
         %56 = OpFAdd %float %47 %55
         %57 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %uint_4
         %58 = OpLoad %v4uint %57 None
         %59 = OpVectorShuffle %v3uint %58 %58 0 1 2
         %60 = OpBitcast %v3float %59
         %61 = OpVectorShuffle %v3float %60 %60 2 0 1
         %62 = OpCompositeExtract %float %61 0
         %63 = OpFunctionCall %float %d %62
         %64 = OpFAdd %float %56 %63
         %65 = OpAccessChain %_ptr_StorageBuffer_float %8 %uint_0
               OpStore %65 %64 None
               OpReturn
               OpFunctionEnd
         %44 = OpFunction %mat4v3float None %68
%start_byte_offset = OpFunctionParameter %uint
         %69 = OpLabel
         %70 = OpUDiv %uint %start_byte_offset %uint_16
         %71 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %70
         %72 = OpLoad %v4uint %71 None
         %73 = OpVectorShuffle %v3uint %72 %72 0 1 2
         %74 = OpBitcast %v3float %73
         %75 = OpIAdd %uint %uint_16 %start_byte_offset
         %76 = OpUDiv %uint %75 %uint_16
         %77 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %76
         %78 = OpLoad %v4uint %77 None
         %79 = OpVectorShuffle %v3uint %78 %78 0 1 2
         %80 = OpBitcast %v3float %79
         %81 = OpIAdd %uint %uint_32 %start_byte_offset
         %83 = OpUDiv %uint %81 %uint_16
         %84 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %83
         %85 = OpLoad %v4uint %84 None
         %86 = OpVectorShuffle %v3uint %85 %85 0 1 2
         %87 = OpBitcast %v3float %86
         %88 = OpIAdd %uint %uint_48 %start_byte_offset
         %90 = OpUDiv %uint %88 %uint_16
         %91 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %90
         %92 = OpLoad %v4uint %91 None
         %93 = OpVectorShuffle %v3uint %92 %92 0 1 2
         %94 = OpBitcast %v3float %93
         %95 = OpCompositeConstruct %mat4v3float %74 %80 %87 %94
               OpReturnValue %95
               OpFunctionEnd
         %40 = OpFunction %_arr_mat4v3float_uint_4 None %97
%start_byte_offset_0 = OpFunctionParameter %uint
         %98 = OpLabel
        %a_1 = OpVariable %_ptr_Function__arr_mat4v3float_uint_4 Function
               OpStore %a_1 %101
               OpBranch %102
        %102 = OpLabel
               OpBranch %105
        %105 = OpLabel
        %107 = OpPhi %uint %uint_0 %102 %108 %104
               OpLoopMerge %106 %104 None
               OpBranch %103
        %103 = OpLabel
        %110 = OpUGreaterThanEqual %bool %107 %uint_4
               OpSelectionMerge %112 None
               OpBranchConditional %110 %113 %112
        %113 = OpLabel
               OpBranch %106
        %112 = OpLabel
        %114 = OpIMul %uint %107 %uint_64
        %115 = OpIAdd %uint %start_byte_offset_0 %114
        %116 = OpAccessChain %_ptr_Function_mat4v3float %a_1 %107
        %118 = OpFunctionCall %mat4v3float %44 %115
               OpStore %116 %118 None
               OpBranch %104
        %104 = OpLabel
        %108 = OpIAdd %uint %107 %uint_1
               OpBranch %105
        %106 = OpLabel
        %109 = OpLoad %_arr_mat4v3float_uint_4 %a_1 None
               OpReturnValue %109
               OpFunctionEnd
