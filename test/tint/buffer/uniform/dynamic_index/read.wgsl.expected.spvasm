; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 627
; Schema: 0
               OpCapability Shader
         %20 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %main_local_invocation_index_Input
               OpExecutionMode %main LocalSize 1 1 1
               OpMemberName %ub_block_tint_explicit_layout 0 "inner"
               OpName %ub_block_tint_explicit_layout "ub_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %main_local_invocation_index_Input "main_local_invocation_index_Input"
               OpName %main_inner "main_inner"
               OpName %idx "idx"
               OpName %scalar_f32 "scalar_f32"
               OpName %scalar_i32 "scalar_i32"
               OpName %scalar_u32 "scalar_u32"
               OpName %vec2_f32 "vec2_f32"
               OpName %vec2_i32 "vec2_i32"
               OpName %vec2_u32 "vec2_u32"
               OpName %vec3_f32 "vec3_f32"
               OpName %vec3_i32 "vec3_i32"
               OpName %vec3_u32 "vec3_u32"
               OpName %vec4_f32 "vec4_f32"
               OpName %vec4_i32 "vec4_i32"
               OpName %vec4_u32 "vec4_u32"
               OpName %mat2x2_f32 "mat2x2_f32"
               OpName %mat2x3_f32 "mat2x3_f32"
               OpName %mat2x4_f32 "mat2x4_f32"
               OpName %mat3x2_f32 "mat3x2_f32"
               OpName %mat3x3_f32 "mat3x3_f32"
               OpName %mat3x4_f32 "mat3x4_f32"
               OpName %mat4x2_f32 "mat4x2_f32"
               OpName %mat4x3_f32 "mat4x3_f32"
               OpName %mat4x4_f32 "mat4x4_f32"
               OpName %arr2_vec3_f32 "arr2_vec3_f32"
               OpName %tint_f32_to_i32 "tint_f32_to_i32"
               OpName %value "value"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpName %start_byte_offset_4 "start_byte_offset"
               OpName %start_byte_offset_5 "start_byte_offset"
               OpName %start_byte_offset_6 "start_byte_offset"
               OpName %start_byte_offset_7 "start_byte_offset"
               OpName %start_byte_offset_8 "start_byte_offset"
               OpName %main "main"
               OpDecorate %_arr_v4uint_uint_272 ArrayStride 16
               OpMemberDecorate %ub_block_tint_explicit_layout 0 Offset 0
               OpDecorate %ub_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
               OpDecorate %main_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
   %uint_272 = OpConstant %uint 272
%_arr_v4uint_uint_272 = OpTypeArray %v4uint %uint_272
%ub_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_272
%_ptr_Uniform_ub_block_tint_explicit_layout = OpTypePointer Uniform %ub_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_ub_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
    %s_block = OpTypeStruct %int
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
%_ptr_Input_uint = OpTypePointer Input %uint
%main_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %17 = OpTypeFunction %void %uint
     %uint_7 = OpConstant %uint 7
   %uint_544 = OpConstant %uint 544
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
      %float = OpTypeFloat 32
     %uint_4 = OpConstant %uint 4
     %uint_8 = OpConstant %uint 8
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %v2float = OpTypeVector %float 2
    %uint_24 = OpConstant %uint 24
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
    %uint_48 = OpConstant %uint 48
     %v3uint = OpTypeVector %uint 3
    %v3float = OpTypeVector %float 3
    %uint_64 = OpConstant %uint 64
      %v3int = OpTypeVector %int 3
    %uint_80 = OpConstant %uint 80
    %uint_96 = OpConstant %uint 96
    %v4float = OpTypeVector %float 4
   %uint_112 = OpConstant %uint 112
      %v4int = OpTypeVector %int 4
   %uint_128 = OpConstant %uint 128
   %uint_144 = OpConstant %uint 144
%mat2v2float = OpTypeMatrix %v2float 2
   %uint_160 = OpConstant %uint 160
%mat2v3float = OpTypeMatrix %v3float 2
   %uint_192 = OpConstant %uint 192
%mat2v4float = OpTypeMatrix %v4float 2
   %uint_224 = OpConstant %uint 224
%mat3v2float = OpTypeMatrix %v2float 3
   %uint_256 = OpConstant %uint 256
%mat3v3float = OpTypeMatrix %v3float 3
   %uint_304 = OpConstant %uint 304
%mat3v4float = OpTypeMatrix %v4float 3
   %uint_352 = OpConstant %uint 352
%mat4v2float = OpTypeMatrix %v2float 4
   %uint_384 = OpConstant %uint 384
%mat4v3float = OpTypeMatrix %v3float 4
   %uint_448 = OpConstant %uint 448
%mat4v4float = OpTypeMatrix %v4float 4
   %uint_512 = OpConstant %uint 512
%_arr_v3float_uint_2 = OpTypeArray %v3float %uint_2
%_ptr_StorageBuffer_int = OpTypePointer StorageBuffer %int
        %355 = OpTypeFunction %int %float
%float_n2_14748365e_09 = OpConstant %float -2.14748365e+09
%float_2_14748352e_09 = OpConstant %float 2.14748352e+09
        %362 = OpTypeFunction %_arr_v3float_uint_2 %uint
%_ptr_Function__arr_v3float_uint_2 = OpTypePointer Function %_arr_v3float_uint_2
        %366 = OpConstantNull %_arr_v3float_uint_2
%_ptr_Function_v3float = OpTypePointer Function %v3float
     %uint_1 = OpConstant %uint 1
        %389 = OpTypeFunction %mat4v4float %uint
        %412 = OpTypeFunction %mat4v3float %uint
        %439 = OpTypeFunction %mat4v2float %uint
        %490 = OpTypeFunction %mat3v4float %uint
        %508 = OpTypeFunction %mat3v3float %uint
        %529 = OpTypeFunction %mat3v2float %uint
        %568 = OpTypeFunction %mat2v4float %uint
        %581 = OpTypeFunction %mat2v3float %uint
        %596 = OpTypeFunction %mat2v2float %uint
        %623 = OpTypeFunction %void
 %main_inner = OpFunction %void None %17
        %idx = OpFunctionParameter %uint
         %18 = OpLabel
         %19 = OpExtInst %uint %20 UMin %idx %uint_7
         %22 = OpIMul %uint %uint_544 %19
         %24 = OpUDiv %uint %22 %uint_16
         %26 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %24
         %29 = OpBitwiseAnd %uint %22 %uint_15
         %31 = OpShiftRightLogical %uint %29 %uint_2
         %33 = OpLoad %v4uint %26 None
         %34 = OpVectorExtractDynamic %uint %33 %31
 %scalar_f32 = OpBitcast %float %34
         %37 = OpExtInst %uint %20 UMin %idx %uint_7
         %38 = OpIMul %uint %uint_544 %37
         %39 = OpIAdd %uint %uint_4 %38
         %41 = OpUDiv %uint %39 %uint_16
         %42 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %41
         %43 = OpBitwiseAnd %uint %39 %uint_15
         %44 = OpShiftRightLogical %uint %43 %uint_2
         %45 = OpLoad %v4uint %42 None
         %46 = OpVectorExtractDynamic %uint %45 %44
 %scalar_i32 = OpBitcast %int %46
         %48 = OpExtInst %uint %20 UMin %idx %uint_7
         %49 = OpIMul %uint %uint_544 %48
         %50 = OpIAdd %uint %uint_8 %49
         %52 = OpUDiv %uint %50 %uint_16
         %53 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %52
         %54 = OpBitwiseAnd %uint %50 %uint_15
         %55 = OpShiftRightLogical %uint %54 %uint_2
         %56 = OpLoad %v4uint %53 None
 %scalar_u32 = OpVectorExtractDynamic %uint %56 %55
         %58 = OpExtInst %uint %20 UMin %idx %uint_7
         %59 = OpIMul %uint %uint_544 %58
         %60 = OpIAdd %uint %uint_16 %59
         %61 = OpUDiv %uint %60 %uint_16
         %62 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %61
         %63 = OpBitwiseAnd %uint %60 %uint_15
         %64 = OpShiftRightLogical %uint %63 %uint_2
         %65 = OpLoad %v4uint %62 None
         %66 = OpVectorShuffle %v2uint %65 %65 2 3
         %68 = OpVectorShuffle %v2uint %65 %65 0 1
         %69 = OpIEqual %bool %64 %uint_2
         %72 = OpCompositeConstruct %v2bool %69 %69
         %73 = OpSelect %v2uint %72 %66 %68
   %vec2_f32 = OpBitcast %v2float %73
         %76 = OpExtInst %uint %20 UMin %idx %uint_7
         %77 = OpIMul %uint %uint_544 %76
         %78 = OpIAdd %uint %uint_24 %77
         %80 = OpUDiv %uint %78 %uint_16
         %81 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %80
         %82 = OpBitwiseAnd %uint %78 %uint_15
         %83 = OpShiftRightLogical %uint %82 %uint_2
         %84 = OpLoad %v4uint %81 None
         %85 = OpVectorShuffle %v2uint %84 %84 2 3
         %86 = OpVectorShuffle %v2uint %84 %84 0 1
         %87 = OpIEqual %bool %83 %uint_2
         %88 = OpCompositeConstruct %v2bool %87 %87
         %89 = OpSelect %v2uint %88 %85 %86
   %vec2_i32 = OpBitcast %v2int %89
         %92 = OpExtInst %uint %20 UMin %idx %uint_7
         %93 = OpIMul %uint %uint_544 %92
         %94 = OpIAdd %uint %uint_32 %93
         %96 = OpUDiv %uint %94 %uint_16
         %97 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %96
         %98 = OpBitwiseAnd %uint %94 %uint_15
         %99 = OpShiftRightLogical %uint %98 %uint_2
        %100 = OpLoad %v4uint %97 None
        %101 = OpVectorShuffle %v2uint %100 %100 2 3
        %102 = OpVectorShuffle %v2uint %100 %100 0 1
        %103 = OpIEqual %bool %99 %uint_2
        %104 = OpCompositeConstruct %v2bool %103 %103
   %vec2_u32 = OpSelect %v2uint %104 %101 %102
        %106 = OpExtInst %uint %20 UMin %idx %uint_7
        %107 = OpIMul %uint %uint_544 %106
        %108 = OpIAdd %uint %uint_48 %107
        %110 = OpUDiv %uint %108 %uint_16
        %111 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %110
        %112 = OpLoad %v4uint %111 None
        %113 = OpVectorShuffle %v3uint %112 %112 0 1 2
   %vec3_f32 = OpBitcast %v3float %113
        %117 = OpExtInst %uint %20 UMin %idx %uint_7
        %118 = OpIMul %uint %uint_544 %117
        %119 = OpIAdd %uint %uint_64 %118
        %121 = OpUDiv %uint %119 %uint_16
        %122 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %121
        %123 = OpLoad %v4uint %122 None
        %124 = OpVectorShuffle %v3uint %123 %123 0 1 2
   %vec3_i32 = OpBitcast %v3int %124
        %127 = OpExtInst %uint %20 UMin %idx %uint_7
        %128 = OpIMul %uint %uint_544 %127
        %129 = OpIAdd %uint %uint_80 %128
        %131 = OpUDiv %uint %129 %uint_16
        %132 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %131
        %133 = OpLoad %v4uint %132 None
   %vec3_u32 = OpVectorShuffle %v3uint %133 %133 0 1 2
        %135 = OpExtInst %uint %20 UMin %idx %uint_7
        %136 = OpIMul %uint %uint_544 %135
        %137 = OpIAdd %uint %uint_96 %136
        %139 = OpUDiv %uint %137 %uint_16
        %140 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %139
        %141 = OpLoad %v4uint %140 None
   %vec4_f32 = OpBitcast %v4float %141
        %144 = OpExtInst %uint %20 UMin %idx %uint_7
        %145 = OpIMul %uint %uint_544 %144
        %146 = OpIAdd %uint %uint_112 %145
        %148 = OpUDiv %uint %146 %uint_16
        %149 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %148
        %150 = OpLoad %v4uint %149 None
   %vec4_i32 = OpBitcast %v4int %150
        %153 = OpExtInst %uint %20 UMin %idx %uint_7
        %154 = OpIMul %uint %uint_544 %153
        %155 = OpIAdd %uint %uint_128 %154
        %157 = OpUDiv %uint %155 %uint_16
        %158 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %157
   %vec4_u32 = OpLoad %v4uint %158 None
        %160 = OpExtInst %uint %20 UMin %idx %uint_7
        %161 = OpIMul %uint %uint_544 %160
        %162 = OpIAdd %uint %uint_144 %161
 %mat2x2_f32 = OpFunctionCall %mat2v2float %166 %162
        %167 = OpExtInst %uint %20 UMin %idx %uint_7
        %168 = OpIMul %uint %uint_544 %167
        %169 = OpIAdd %uint %uint_160 %168
 %mat2x3_f32 = OpFunctionCall %mat2v3float %173 %169
        %174 = OpExtInst %uint %20 UMin %idx %uint_7
        %175 = OpIMul %uint %uint_544 %174
        %176 = OpIAdd %uint %uint_192 %175
 %mat2x4_f32 = OpFunctionCall %mat2v4float %180 %176
        %181 = OpExtInst %uint %20 UMin %idx %uint_7
        %182 = OpIMul %uint %uint_544 %181
        %183 = OpIAdd %uint %uint_224 %182
 %mat3x2_f32 = OpFunctionCall %mat3v2float %187 %183
        %188 = OpExtInst %uint %20 UMin %idx %uint_7
        %189 = OpIMul %uint %uint_544 %188
        %190 = OpIAdd %uint %uint_256 %189
 %mat3x3_f32 = OpFunctionCall %mat3v3float %194 %190
        %195 = OpExtInst %uint %20 UMin %idx %uint_7
        %196 = OpIMul %uint %uint_544 %195
        %197 = OpIAdd %uint %uint_304 %196
 %mat3x4_f32 = OpFunctionCall %mat3v4float %201 %197
        %202 = OpExtInst %uint %20 UMin %idx %uint_7
        %203 = OpIMul %uint %uint_544 %202
        %204 = OpIAdd %uint %uint_352 %203
 %mat4x2_f32 = OpFunctionCall %mat4v2float %208 %204
        %209 = OpExtInst %uint %20 UMin %idx %uint_7
        %210 = OpIMul %uint %uint_544 %209
        %211 = OpIAdd %uint %uint_384 %210
 %mat4x3_f32 = OpFunctionCall %mat4v3float %215 %211
        %216 = OpExtInst %uint %20 UMin %idx %uint_7
        %217 = OpIMul %uint %uint_544 %216
        %218 = OpIAdd %uint %uint_448 %217
 %mat4x4_f32 = OpFunctionCall %mat4v4float %222 %218
        %223 = OpExtInst %uint %20 UMin %idx %uint_7
        %224 = OpIMul %uint %uint_544 %223
        %225 = OpIAdd %uint %uint_512 %224
%arr2_vec3_f32 = OpFunctionCall %_arr_v3float_uint_2 %229 %225
        %230 = OpFunctionCall %int %tint_f32_to_i32 %scalar_f32
        %232 = OpBitcast %uint %230
        %233 = OpBitcast %uint %scalar_i32
        %234 = OpIAdd %uint %232 %233
        %235 = OpBitcast %int %234
        %236 = OpBitcast %int %scalar_u32
        %237 = OpBitcast %uint %235
        %238 = OpBitcast %uint %236
        %239 = OpIAdd %uint %237 %238
        %240 = OpBitcast %int %239
        %241 = OpCompositeExtract %float %vec2_f32 0
        %242 = OpFunctionCall %int %tint_f32_to_i32 %241
        %243 = OpBitcast %uint %240
        %244 = OpBitcast %uint %242
        %245 = OpIAdd %uint %243 %244
        %246 = OpBitcast %int %245
        %247 = OpCompositeExtract %int %vec2_i32 0
        %248 = OpBitcast %uint %246
        %249 = OpBitcast %uint %247
        %250 = OpIAdd %uint %248 %249
        %251 = OpBitcast %int %250
        %252 = OpCompositeExtract %uint %vec2_u32 0
        %253 = OpBitcast %int %252
        %254 = OpBitcast %uint %251
        %255 = OpBitcast %uint %253
        %256 = OpIAdd %uint %254 %255
        %257 = OpBitcast %int %256
        %258 = OpCompositeExtract %float %vec3_f32 1
        %259 = OpFunctionCall %int %tint_f32_to_i32 %258
        %260 = OpBitcast %uint %257
        %261 = OpBitcast %uint %259
        %262 = OpIAdd %uint %260 %261
        %263 = OpBitcast %int %262
        %264 = OpCompositeExtract %int %vec3_i32 1
        %265 = OpBitcast %uint %263
        %266 = OpBitcast %uint %264
        %267 = OpIAdd %uint %265 %266
        %268 = OpBitcast %int %267
        %269 = OpCompositeExtract %uint %vec3_u32 1
        %270 = OpBitcast %int %269
        %271 = OpBitcast %uint %268
        %272 = OpBitcast %uint %270
        %273 = OpIAdd %uint %271 %272
        %274 = OpBitcast %int %273
        %275 = OpCompositeExtract %float %vec4_f32 2
        %276 = OpFunctionCall %int %tint_f32_to_i32 %275
        %277 = OpBitcast %uint %274
        %278 = OpBitcast %uint %276
        %279 = OpIAdd %uint %277 %278
        %280 = OpBitcast %int %279
        %281 = OpCompositeExtract %int %vec4_i32 2
        %282 = OpBitcast %uint %280
        %283 = OpBitcast %uint %281
        %284 = OpIAdd %uint %282 %283
        %285 = OpBitcast %int %284
        %286 = OpCompositeExtract %uint %vec4_u32 2
        %287 = OpBitcast %int %286
        %288 = OpBitcast %uint %285
        %289 = OpBitcast %uint %287
        %290 = OpIAdd %uint %288 %289
        %291 = OpBitcast %int %290
        %292 = OpCompositeExtract %float %mat2x2_f32 0 0
        %293 = OpFunctionCall %int %tint_f32_to_i32 %292
        %294 = OpBitcast %uint %291
        %295 = OpBitcast %uint %293
        %296 = OpIAdd %uint %294 %295
        %297 = OpBitcast %int %296
        %298 = OpCompositeExtract %float %mat2x3_f32 0 0
        %299 = OpFunctionCall %int %tint_f32_to_i32 %298
        %300 = OpBitcast %uint %297
        %301 = OpBitcast %uint %299
        %302 = OpIAdd %uint %300 %301
        %303 = OpBitcast %int %302
        %304 = OpCompositeExtract %float %mat2x4_f32 0 0
        %305 = OpFunctionCall %int %tint_f32_to_i32 %304
        %306 = OpBitcast %uint %303
        %307 = OpBitcast %uint %305
        %308 = OpIAdd %uint %306 %307
        %309 = OpBitcast %int %308
        %310 = OpCompositeExtract %float %mat3x2_f32 0 0
        %311 = OpFunctionCall %int %tint_f32_to_i32 %310
        %312 = OpBitcast %uint %309
        %313 = OpBitcast %uint %311
        %314 = OpIAdd %uint %312 %313
        %315 = OpBitcast %int %314
        %316 = OpCompositeExtract %float %mat3x3_f32 0 0
        %317 = OpFunctionCall %int %tint_f32_to_i32 %316
        %318 = OpBitcast %uint %315
        %319 = OpBitcast %uint %317
        %320 = OpIAdd %uint %318 %319
        %321 = OpBitcast %int %320
        %322 = OpCompositeExtract %float %mat3x4_f32 0 0
        %323 = OpFunctionCall %int %tint_f32_to_i32 %322
        %324 = OpBitcast %uint %321
        %325 = OpBitcast %uint %323
        %326 = OpIAdd %uint %324 %325
        %327 = OpBitcast %int %326
        %328 = OpCompositeExtract %float %mat4x2_f32 0 0
        %329 = OpFunctionCall %int %tint_f32_to_i32 %328
        %330 = OpBitcast %uint %327
        %331 = OpBitcast %uint %329
        %332 = OpIAdd %uint %330 %331
        %333 = OpBitcast %int %332
        %334 = OpCompositeExtract %float %mat4x3_f32 0 0
        %335 = OpFunctionCall %int %tint_f32_to_i32 %334
        %336 = OpBitcast %uint %333
        %337 = OpBitcast %uint %335
        %338 = OpIAdd %uint %336 %337
        %339 = OpBitcast %int %338
        %340 = OpCompositeExtract %float %mat4x4_f32 0 0
        %341 = OpFunctionCall %int %tint_f32_to_i32 %340
        %342 = OpBitcast %uint %339
        %343 = OpBitcast %uint %341
        %344 = OpIAdd %uint %342 %343
        %345 = OpBitcast %int %344
        %346 = OpCompositeExtract %float %arr2_vec3_f32 0 0
        %347 = OpFunctionCall %int %tint_f32_to_i32 %346
        %348 = OpBitcast %uint %345
        %349 = OpBitcast %uint %347
        %350 = OpIAdd %uint %348 %349
        %351 = OpBitcast %int %350
        %352 = OpAccessChain %_ptr_StorageBuffer_int %8 %uint_0
               OpStore %352 %351 None
               OpReturn
               OpFunctionEnd
%tint_f32_to_i32 = OpFunction %int None %355
      %value = OpFunctionParameter %float
        %356 = OpLabel
        %357 = OpExtInst %float %20 NClamp %value %float_n2_14748365e_09 %float_2_14748352e_09
        %360 = OpConvertFToS %int %357
               OpReturnValue %360
               OpFunctionEnd
        %229 = OpFunction %_arr_v3float_uint_2 None %362
%start_byte_offset = OpFunctionParameter %uint
        %363 = OpLabel
          %a = OpVariable %_ptr_Function__arr_v3float_uint_2 Function
               OpStore %a %366
               OpBranch %367
        %367 = OpLabel
               OpBranch %370
        %370 = OpLabel
        %372 = OpPhi %uint %uint_0 %367 %373 %369
               OpLoopMerge %371 %369 None
               OpBranch %368
        %368 = OpLabel
        %375 = OpUGreaterThanEqual %bool %372 %uint_2
               OpSelectionMerge %376 None
               OpBranchConditional %375 %377 %376
        %377 = OpLabel
               OpBranch %371
        %376 = OpLabel
        %378 = OpIMul %uint %372 %uint_16
        %379 = OpIAdd %uint %start_byte_offset %378
        %380 = OpAccessChain %_ptr_Function_v3float %a %372
        %382 = OpUDiv %uint %379 %uint_16
        %383 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %382
        %384 = OpLoad %v4uint %383 None
        %385 = OpVectorShuffle %v3uint %384 %384 0 1 2
        %386 = OpBitcast %v3float %385
               OpStore %380 %386 None
               OpBranch %369
        %369 = OpLabel
        %373 = OpIAdd %uint %372 %uint_1
               OpBranch %370
        %371 = OpLabel
        %374 = OpLoad %_arr_v3float_uint_2 %a None
               OpReturnValue %374
               OpFunctionEnd
        %222 = OpFunction %mat4v4float None %389
%start_byte_offset_0 = OpFunctionParameter %uint
        %390 = OpLabel
        %391 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %392 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %391
        %393 = OpLoad %v4uint %392 None
        %394 = OpBitcast %v4float %393
        %395 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %396 = OpUDiv %uint %395 %uint_16
        %397 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %396
        %398 = OpLoad %v4uint %397 None
        %399 = OpBitcast %v4float %398
        %400 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %401 = OpUDiv %uint %400 %uint_16
        %402 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %401
        %403 = OpLoad %v4uint %402 None
        %404 = OpBitcast %v4float %403
        %405 = OpIAdd %uint %uint_48 %start_byte_offset_0
        %406 = OpUDiv %uint %405 %uint_16
        %407 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %406
        %408 = OpLoad %v4uint %407 None
        %409 = OpBitcast %v4float %408
        %410 = OpCompositeConstruct %mat4v4float %394 %399 %404 %409
               OpReturnValue %410
               OpFunctionEnd
        %215 = OpFunction %mat4v3float None %412
%start_byte_offset_1 = OpFunctionParameter %uint
        %413 = OpLabel
        %414 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %415 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %414
        %416 = OpLoad %v4uint %415 None
        %417 = OpVectorShuffle %v3uint %416 %416 0 1 2
        %418 = OpBitcast %v3float %417
        %419 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %420 = OpUDiv %uint %419 %uint_16
        %421 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %420
        %422 = OpLoad %v4uint %421 None
        %423 = OpVectorShuffle %v3uint %422 %422 0 1 2
        %424 = OpBitcast %v3float %423
        %425 = OpIAdd %uint %uint_32 %start_byte_offset_1
        %426 = OpUDiv %uint %425 %uint_16
        %427 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %426
        %428 = OpLoad %v4uint %427 None
        %429 = OpVectorShuffle %v3uint %428 %428 0 1 2
        %430 = OpBitcast %v3float %429
        %431 = OpIAdd %uint %uint_48 %start_byte_offset_1
        %432 = OpUDiv %uint %431 %uint_16
        %433 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %432
        %434 = OpLoad %v4uint %433 None
        %435 = OpVectorShuffle %v3uint %434 %434 0 1 2
        %436 = OpBitcast %v3float %435
        %437 = OpCompositeConstruct %mat4v3float %418 %424 %430 %436
               OpReturnValue %437
               OpFunctionEnd
        %208 = OpFunction %mat4v2float None %439
%start_byte_offset_2 = OpFunctionParameter %uint
        %440 = OpLabel
        %441 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %442 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %441
        %443 = OpBitwiseAnd %uint %start_byte_offset_2 %uint_15
        %444 = OpShiftRightLogical %uint %443 %uint_2
        %445 = OpLoad %v4uint %442 None
        %446 = OpVectorShuffle %v2uint %445 %445 2 3
        %447 = OpVectorShuffle %v2uint %445 %445 0 1
        %448 = OpIEqual %bool %444 %uint_2
        %449 = OpCompositeConstruct %v2bool %448 %448
        %450 = OpSelect %v2uint %449 %446 %447
        %451 = OpBitcast %v2float %450
        %452 = OpIAdd %uint %uint_8 %start_byte_offset_2
        %453 = OpUDiv %uint %452 %uint_16
        %454 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %453
        %455 = OpBitwiseAnd %uint %452 %uint_15
        %456 = OpShiftRightLogical %uint %455 %uint_2
        %457 = OpLoad %v4uint %454 None
        %458 = OpVectorShuffle %v2uint %457 %457 2 3
        %459 = OpVectorShuffle %v2uint %457 %457 0 1
        %460 = OpIEqual %bool %456 %uint_2
        %461 = OpCompositeConstruct %v2bool %460 %460
        %462 = OpSelect %v2uint %461 %458 %459
        %463 = OpBitcast %v2float %462
        %464 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %465 = OpUDiv %uint %464 %uint_16
        %466 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %465
        %467 = OpBitwiseAnd %uint %464 %uint_15
        %468 = OpShiftRightLogical %uint %467 %uint_2
        %469 = OpLoad %v4uint %466 None
        %470 = OpVectorShuffle %v2uint %469 %469 2 3
        %471 = OpVectorShuffle %v2uint %469 %469 0 1
        %472 = OpIEqual %bool %468 %uint_2
        %473 = OpCompositeConstruct %v2bool %472 %472
        %474 = OpSelect %v2uint %473 %470 %471
        %475 = OpBitcast %v2float %474
        %476 = OpIAdd %uint %uint_24 %start_byte_offset_2
        %477 = OpUDiv %uint %476 %uint_16
        %478 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %477
        %479 = OpBitwiseAnd %uint %476 %uint_15
        %480 = OpShiftRightLogical %uint %479 %uint_2
        %481 = OpLoad %v4uint %478 None
        %482 = OpVectorShuffle %v2uint %481 %481 2 3
        %483 = OpVectorShuffle %v2uint %481 %481 0 1
        %484 = OpIEqual %bool %480 %uint_2
        %485 = OpCompositeConstruct %v2bool %484 %484
        %486 = OpSelect %v2uint %485 %482 %483
        %487 = OpBitcast %v2float %486
        %488 = OpCompositeConstruct %mat4v2float %451 %463 %475 %487
               OpReturnValue %488
               OpFunctionEnd
        %201 = OpFunction %mat3v4float None %490
%start_byte_offset_3 = OpFunctionParameter %uint
        %491 = OpLabel
        %492 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %493 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %492
        %494 = OpLoad %v4uint %493 None
        %495 = OpBitcast %v4float %494
        %496 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %497 = OpUDiv %uint %496 %uint_16
        %498 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %497
        %499 = OpLoad %v4uint %498 None
        %500 = OpBitcast %v4float %499
        %501 = OpIAdd %uint %uint_32 %start_byte_offset_3
        %502 = OpUDiv %uint %501 %uint_16
        %503 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %502
        %504 = OpLoad %v4uint %503 None
        %505 = OpBitcast %v4float %504
        %506 = OpCompositeConstruct %mat3v4float %495 %500 %505
               OpReturnValue %506
               OpFunctionEnd
        %194 = OpFunction %mat3v3float None %508
%start_byte_offset_4 = OpFunctionParameter %uint
        %509 = OpLabel
        %510 = OpUDiv %uint %start_byte_offset_4 %uint_16
        %511 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %510
        %512 = OpLoad %v4uint %511 None
        %513 = OpVectorShuffle %v3uint %512 %512 0 1 2
        %514 = OpBitcast %v3float %513
        %515 = OpIAdd %uint %uint_16 %start_byte_offset_4
        %516 = OpUDiv %uint %515 %uint_16
        %517 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %516
        %518 = OpLoad %v4uint %517 None
        %519 = OpVectorShuffle %v3uint %518 %518 0 1 2
        %520 = OpBitcast %v3float %519
        %521 = OpIAdd %uint %uint_32 %start_byte_offset_4
        %522 = OpUDiv %uint %521 %uint_16
        %523 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %522
        %524 = OpLoad %v4uint %523 None
        %525 = OpVectorShuffle %v3uint %524 %524 0 1 2
        %526 = OpBitcast %v3float %525
        %527 = OpCompositeConstruct %mat3v3float %514 %520 %526
               OpReturnValue %527
               OpFunctionEnd
        %187 = OpFunction %mat3v2float None %529
%start_byte_offset_5 = OpFunctionParameter %uint
        %530 = OpLabel
        %531 = OpUDiv %uint %start_byte_offset_5 %uint_16
        %532 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %531
        %533 = OpBitwiseAnd %uint %start_byte_offset_5 %uint_15
        %534 = OpShiftRightLogical %uint %533 %uint_2
        %535 = OpLoad %v4uint %532 None
        %536 = OpVectorShuffle %v2uint %535 %535 2 3
        %537 = OpVectorShuffle %v2uint %535 %535 0 1
        %538 = OpIEqual %bool %534 %uint_2
        %539 = OpCompositeConstruct %v2bool %538 %538
        %540 = OpSelect %v2uint %539 %536 %537
        %541 = OpBitcast %v2float %540
        %542 = OpIAdd %uint %uint_8 %start_byte_offset_5
        %543 = OpUDiv %uint %542 %uint_16
        %544 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %543
        %545 = OpBitwiseAnd %uint %542 %uint_15
        %546 = OpShiftRightLogical %uint %545 %uint_2
        %547 = OpLoad %v4uint %544 None
        %548 = OpVectorShuffle %v2uint %547 %547 2 3
        %549 = OpVectorShuffle %v2uint %547 %547 0 1
        %550 = OpIEqual %bool %546 %uint_2
        %551 = OpCompositeConstruct %v2bool %550 %550
        %552 = OpSelect %v2uint %551 %548 %549
        %553 = OpBitcast %v2float %552
        %554 = OpIAdd %uint %uint_16 %start_byte_offset_5
        %555 = OpUDiv %uint %554 %uint_16
        %556 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %555
        %557 = OpBitwiseAnd %uint %554 %uint_15
        %558 = OpShiftRightLogical %uint %557 %uint_2
        %559 = OpLoad %v4uint %556 None
        %560 = OpVectorShuffle %v2uint %559 %559 2 3
        %561 = OpVectorShuffle %v2uint %559 %559 0 1
        %562 = OpIEqual %bool %558 %uint_2
        %563 = OpCompositeConstruct %v2bool %562 %562
        %564 = OpSelect %v2uint %563 %560 %561
        %565 = OpBitcast %v2float %564
        %566 = OpCompositeConstruct %mat3v2float %541 %553 %565
               OpReturnValue %566
               OpFunctionEnd
        %180 = OpFunction %mat2v4float None %568
%start_byte_offset_6 = OpFunctionParameter %uint
        %569 = OpLabel
        %570 = OpUDiv %uint %start_byte_offset_6 %uint_16
        %571 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %570
        %572 = OpLoad %v4uint %571 None
        %573 = OpBitcast %v4float %572
        %574 = OpIAdd %uint %uint_16 %start_byte_offset_6
        %575 = OpUDiv %uint %574 %uint_16
        %576 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %575
        %577 = OpLoad %v4uint %576 None
        %578 = OpBitcast %v4float %577
        %579 = OpCompositeConstruct %mat2v4float %573 %578
               OpReturnValue %579
               OpFunctionEnd
        %173 = OpFunction %mat2v3float None %581
%start_byte_offset_7 = OpFunctionParameter %uint
        %582 = OpLabel
        %583 = OpUDiv %uint %start_byte_offset_7 %uint_16
        %584 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %583
        %585 = OpLoad %v4uint %584 None
        %586 = OpVectorShuffle %v3uint %585 %585 0 1 2
        %587 = OpBitcast %v3float %586
        %588 = OpIAdd %uint %uint_16 %start_byte_offset_7
        %589 = OpUDiv %uint %588 %uint_16
        %590 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %589
        %591 = OpLoad %v4uint %590 None
        %592 = OpVectorShuffle %v3uint %591 %591 0 1 2
        %593 = OpBitcast %v3float %592
        %594 = OpCompositeConstruct %mat2v3float %587 %593
               OpReturnValue %594
               OpFunctionEnd
        %166 = OpFunction %mat2v2float None %596
%start_byte_offset_8 = OpFunctionParameter %uint
        %597 = OpLabel
        %598 = OpUDiv %uint %start_byte_offset_8 %uint_16
        %599 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %598
        %600 = OpBitwiseAnd %uint %start_byte_offset_8 %uint_15
        %601 = OpShiftRightLogical %uint %600 %uint_2
        %602 = OpLoad %v4uint %599 None
        %603 = OpVectorShuffle %v2uint %602 %602 2 3
        %604 = OpVectorShuffle %v2uint %602 %602 0 1
        %605 = OpIEqual %bool %601 %uint_2
        %606 = OpCompositeConstruct %v2bool %605 %605
        %607 = OpSelect %v2uint %606 %603 %604
        %608 = OpBitcast %v2float %607
        %609 = OpIAdd %uint %uint_8 %start_byte_offset_8
        %610 = OpUDiv %uint %609 %uint_16
        %611 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %610
        %612 = OpBitwiseAnd %uint %609 %uint_15
        %613 = OpShiftRightLogical %uint %612 %uint_2
        %614 = OpLoad %v4uint %611 None
        %615 = OpVectorShuffle %v2uint %614 %614 2 3
        %616 = OpVectorShuffle %v2uint %614 %614 0 1
        %617 = OpIEqual %bool %613 %uint_2
        %618 = OpCompositeConstruct %v2bool %617 %617
        %619 = OpSelect %v2uint %618 %615 %616
        %620 = OpBitcast %v2float %619
        %621 = OpCompositeConstruct %mat2v2float %608 %620
               OpReturnValue %621
               OpFunctionEnd
       %main = OpFunction %void None %623
        %624 = OpLabel
        %625 = OpLoad %uint %main_local_invocation_index_Input None
        %626 = OpFunctionCall %void %main_inner %625
               OpReturn
               OpFunctionEnd
