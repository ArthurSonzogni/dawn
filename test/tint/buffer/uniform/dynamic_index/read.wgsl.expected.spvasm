; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 626
; Schema: 0
               OpCapability Shader
         %20 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %main_local_invocation_index_Input
               OpExecutionMode %main LocalSize 1 1 1
               OpMemberName %ub_block_tint_explicit_layout 0 "inner"
               OpName %ub_block_tint_explicit_layout "ub_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %main_local_invocation_index_Input "main_local_invocation_index_Input"
               OpName %main_inner "main_inner"
               OpName %idx "idx"
               OpName %scalar_f32 "scalar_f32"
               OpName %scalar_i32 "scalar_i32"
               OpName %scalar_u32 "scalar_u32"
               OpName %vec2_f32 "vec2_f32"
               OpName %vec2_i32 "vec2_i32"
               OpName %vec2_u32 "vec2_u32"
               OpName %vec3_f32 "vec3_f32"
               OpName %vec3_i32 "vec3_i32"
               OpName %vec3_u32 "vec3_u32"
               OpName %vec4_f32 "vec4_f32"
               OpName %vec4_i32 "vec4_i32"
               OpName %vec4_u32 "vec4_u32"
               OpName %mat2x2_f32 "mat2x2_f32"
               OpName %mat2x3_f32 "mat2x3_f32"
               OpName %mat2x4_f32 "mat2x4_f32"
               OpName %mat3x2_f32 "mat3x2_f32"
               OpName %mat3x3_f32 "mat3x3_f32"
               OpName %mat3x4_f32 "mat3x4_f32"
               OpName %mat4x2_f32 "mat4x2_f32"
               OpName %mat4x3_f32 "mat4x3_f32"
               OpName %mat4x4_f32 "mat4x4_f32"
               OpName %arr2_vec3_f32 "arr2_vec3_f32"
               OpName %tint_f32_to_i32 "tint_f32_to_i32"
               OpName %value "value"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpName %start_byte_offset_4 "start_byte_offset"
               OpName %start_byte_offset_5 "start_byte_offset"
               OpName %start_byte_offset_6 "start_byte_offset"
               OpName %start_byte_offset_7 "start_byte_offset"
               OpName %start_byte_offset_8 "start_byte_offset"
               OpName %main "main"
               OpDecorate %_arr_v4uint_uint_272 ArrayStride 16
               OpMemberDecorate %ub_block_tint_explicit_layout 0 Offset 0
               OpDecorate %ub_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
               OpDecorate %main_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
   %uint_272 = OpConstant %uint 272
%_arr_v4uint_uint_272 = OpTypeArray %v4uint %uint_272
%ub_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_272
%_ptr_Uniform_ub_block_tint_explicit_layout = OpTypePointer Uniform %ub_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_ub_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
    %s_block = OpTypeStruct %int
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
%_ptr_Input_uint = OpTypePointer Input %uint
%main_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %17 = OpTypeFunction %void %uint
     %uint_7 = OpConstant %uint 7
   %uint_544 = OpConstant %uint 544
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
     %uint_4 = OpConstant %uint 4
      %float = OpTypeFloat 32
     %uint_8 = OpConstant %uint 8
     %v2uint = OpTypeVector %uint 2
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
    %v2float = OpTypeVector %float 2
    %uint_24 = OpConstant %uint 24
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
    %uint_48 = OpConstant %uint 48
     %v3uint = OpTypeVector %uint 3
    %v3float = OpTypeVector %float 3
    %uint_64 = OpConstant %uint 64
      %v3int = OpTypeVector %int 3
    %uint_80 = OpConstant %uint 80
    %uint_96 = OpConstant %uint 96
    %v4float = OpTypeVector %float 4
   %uint_112 = OpConstant %uint 112
      %v4int = OpTypeVector %int 4
   %uint_128 = OpConstant %uint 128
   %uint_144 = OpConstant %uint 144
%mat2v2float = OpTypeMatrix %v2float 2
   %uint_160 = OpConstant %uint 160
%mat2v3float = OpTypeMatrix %v3float 2
   %uint_192 = OpConstant %uint 192
%mat2v4float = OpTypeMatrix %v4float 2
   %uint_224 = OpConstant %uint 224
%mat3v2float = OpTypeMatrix %v2float 3
   %uint_256 = OpConstant %uint 256
%mat3v3float = OpTypeMatrix %v3float 3
   %uint_304 = OpConstant %uint 304
%mat3v4float = OpTypeMatrix %v4float 3
   %uint_352 = OpConstant %uint 352
%mat4v2float = OpTypeMatrix %v2float 4
   %uint_384 = OpConstant %uint 384
%mat4v3float = OpTypeMatrix %v3float 4
   %uint_448 = OpConstant %uint 448
%mat4v4float = OpTypeMatrix %v4float 4
   %uint_512 = OpConstant %uint 512
%_arr_v3float_uint_2 = OpTypeArray %v3float %uint_2
%_ptr_StorageBuffer_int = OpTypePointer StorageBuffer %int
        %354 = OpTypeFunction %int %float
%float_n2_14748365e_09 = OpConstant %float -2.14748365e+09
%float_2_14748352e_09 = OpConstant %float 2.14748352e+09
        %361 = OpTypeFunction %_arr_v3float_uint_2 %uint
%_ptr_Function__arr_v3float_uint_2 = OpTypePointer Function %_arr_v3float_uint_2
        %365 = OpConstantNull %_arr_v3float_uint_2
%_ptr_Function_v3float = OpTypePointer Function %v3float
     %uint_1 = OpConstant %uint 1
        %388 = OpTypeFunction %mat4v4float %uint
        %411 = OpTypeFunction %mat4v3float %uint
        %438 = OpTypeFunction %mat4v2float %uint
        %489 = OpTypeFunction %mat3v4float %uint
        %507 = OpTypeFunction %mat3v3float %uint
        %528 = OpTypeFunction %mat3v2float %uint
        %567 = OpTypeFunction %mat2v4float %uint
        %580 = OpTypeFunction %mat2v3float %uint
        %595 = OpTypeFunction %mat2v2float %uint
        %622 = OpTypeFunction %void
 %main_inner = OpFunction %void None %17
        %idx = OpFunctionParameter %uint
         %18 = OpLabel
         %19 = OpExtInst %uint %20 UMin %idx %uint_7
         %22 = OpIMul %uint %uint_544 %19
         %24 = OpUDiv %uint %22 %uint_16
         %26 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %24
         %29 = OpUMod %uint %22 %uint_16
         %30 = OpUDiv %uint %29 %uint_4
         %32 = OpLoad %v4uint %26 None
         %33 = OpVectorExtractDynamic %uint %32 %30
 %scalar_f32 = OpBitcast %float %33
         %36 = OpExtInst %uint %20 UMin %idx %uint_7
         %37 = OpIMul %uint %uint_544 %36
         %38 = OpIAdd %uint %uint_4 %37
         %39 = OpUDiv %uint %38 %uint_16
         %40 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %39
         %41 = OpUMod %uint %38 %uint_16
         %42 = OpUDiv %uint %41 %uint_4
         %43 = OpLoad %v4uint %40 None
         %44 = OpVectorExtractDynamic %uint %43 %42
 %scalar_i32 = OpBitcast %int %44
         %46 = OpExtInst %uint %20 UMin %idx %uint_7
         %47 = OpIMul %uint %uint_544 %46
         %48 = OpIAdd %uint %uint_8 %47
         %50 = OpUDiv %uint %48 %uint_16
         %51 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %50
         %52 = OpUMod %uint %48 %uint_16
         %53 = OpUDiv %uint %52 %uint_4
         %54 = OpLoad %v4uint %51 None
 %scalar_u32 = OpVectorExtractDynamic %uint %54 %53
         %56 = OpExtInst %uint %20 UMin %idx %uint_7
         %57 = OpIMul %uint %uint_544 %56
         %58 = OpIAdd %uint %uint_16 %57
         %59 = OpUDiv %uint %58 %uint_16
         %60 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %59
         %61 = OpUMod %uint %58 %uint_16
         %62 = OpUDiv %uint %61 %uint_4
         %63 = OpLoad %v4uint %60 None
         %64 = OpVectorShuffle %v2uint %63 %63 2 3
         %66 = OpVectorShuffle %v2uint %63 %63 0 1
         %67 = OpIEqual %bool %62 %uint_2
         %71 = OpCompositeConstruct %v2bool %67 %67
         %72 = OpSelect %v2uint %71 %64 %66
   %vec2_f32 = OpBitcast %v2float %72
         %75 = OpExtInst %uint %20 UMin %idx %uint_7
         %76 = OpIMul %uint %uint_544 %75
         %77 = OpIAdd %uint %uint_24 %76
         %79 = OpUDiv %uint %77 %uint_16
         %80 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %79
         %81 = OpUMod %uint %77 %uint_16
         %82 = OpUDiv %uint %81 %uint_4
         %83 = OpLoad %v4uint %80 None
         %84 = OpVectorShuffle %v2uint %83 %83 2 3
         %85 = OpVectorShuffle %v2uint %83 %83 0 1
         %86 = OpIEqual %bool %82 %uint_2
         %87 = OpCompositeConstruct %v2bool %86 %86
         %88 = OpSelect %v2uint %87 %84 %85
   %vec2_i32 = OpBitcast %v2int %88
         %91 = OpExtInst %uint %20 UMin %idx %uint_7
         %92 = OpIMul %uint %uint_544 %91
         %93 = OpIAdd %uint %uint_32 %92
         %95 = OpUDiv %uint %93 %uint_16
         %96 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %95
         %97 = OpUMod %uint %93 %uint_16
         %98 = OpUDiv %uint %97 %uint_4
         %99 = OpLoad %v4uint %96 None
        %100 = OpVectorShuffle %v2uint %99 %99 2 3
        %101 = OpVectorShuffle %v2uint %99 %99 0 1
        %102 = OpIEqual %bool %98 %uint_2
        %103 = OpCompositeConstruct %v2bool %102 %102
   %vec2_u32 = OpSelect %v2uint %103 %100 %101
        %105 = OpExtInst %uint %20 UMin %idx %uint_7
        %106 = OpIMul %uint %uint_544 %105
        %107 = OpIAdd %uint %uint_48 %106
        %109 = OpUDiv %uint %107 %uint_16
        %110 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %109
        %111 = OpLoad %v4uint %110 None
        %112 = OpVectorShuffle %v3uint %111 %111 0 1 2
   %vec3_f32 = OpBitcast %v3float %112
        %116 = OpExtInst %uint %20 UMin %idx %uint_7
        %117 = OpIMul %uint %uint_544 %116
        %118 = OpIAdd %uint %uint_64 %117
        %120 = OpUDiv %uint %118 %uint_16
        %121 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %120
        %122 = OpLoad %v4uint %121 None
        %123 = OpVectorShuffle %v3uint %122 %122 0 1 2
   %vec3_i32 = OpBitcast %v3int %123
        %126 = OpExtInst %uint %20 UMin %idx %uint_7
        %127 = OpIMul %uint %uint_544 %126
        %128 = OpIAdd %uint %uint_80 %127
        %130 = OpUDiv %uint %128 %uint_16
        %131 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %130
        %132 = OpLoad %v4uint %131 None
   %vec3_u32 = OpVectorShuffle %v3uint %132 %132 0 1 2
        %134 = OpExtInst %uint %20 UMin %idx %uint_7
        %135 = OpIMul %uint %uint_544 %134
        %136 = OpIAdd %uint %uint_96 %135
        %138 = OpUDiv %uint %136 %uint_16
        %139 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %138
        %140 = OpLoad %v4uint %139 None
   %vec4_f32 = OpBitcast %v4float %140
        %143 = OpExtInst %uint %20 UMin %idx %uint_7
        %144 = OpIMul %uint %uint_544 %143
        %145 = OpIAdd %uint %uint_112 %144
        %147 = OpUDiv %uint %145 %uint_16
        %148 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %147
        %149 = OpLoad %v4uint %148 None
   %vec4_i32 = OpBitcast %v4int %149
        %152 = OpExtInst %uint %20 UMin %idx %uint_7
        %153 = OpIMul %uint %uint_544 %152
        %154 = OpIAdd %uint %uint_128 %153
        %156 = OpUDiv %uint %154 %uint_16
        %157 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %156
   %vec4_u32 = OpLoad %v4uint %157 None
        %159 = OpExtInst %uint %20 UMin %idx %uint_7
        %160 = OpIMul %uint %uint_544 %159
        %161 = OpIAdd %uint %uint_144 %160
 %mat2x2_f32 = OpFunctionCall %mat2v2float %165 %161
        %166 = OpExtInst %uint %20 UMin %idx %uint_7
        %167 = OpIMul %uint %uint_544 %166
        %168 = OpIAdd %uint %uint_160 %167
 %mat2x3_f32 = OpFunctionCall %mat2v3float %172 %168
        %173 = OpExtInst %uint %20 UMin %idx %uint_7
        %174 = OpIMul %uint %uint_544 %173
        %175 = OpIAdd %uint %uint_192 %174
 %mat2x4_f32 = OpFunctionCall %mat2v4float %179 %175
        %180 = OpExtInst %uint %20 UMin %idx %uint_7
        %181 = OpIMul %uint %uint_544 %180
        %182 = OpIAdd %uint %uint_224 %181
 %mat3x2_f32 = OpFunctionCall %mat3v2float %186 %182
        %187 = OpExtInst %uint %20 UMin %idx %uint_7
        %188 = OpIMul %uint %uint_544 %187
        %189 = OpIAdd %uint %uint_256 %188
 %mat3x3_f32 = OpFunctionCall %mat3v3float %193 %189
        %194 = OpExtInst %uint %20 UMin %idx %uint_7
        %195 = OpIMul %uint %uint_544 %194
        %196 = OpIAdd %uint %uint_304 %195
 %mat3x4_f32 = OpFunctionCall %mat3v4float %200 %196
        %201 = OpExtInst %uint %20 UMin %idx %uint_7
        %202 = OpIMul %uint %uint_544 %201
        %203 = OpIAdd %uint %uint_352 %202
 %mat4x2_f32 = OpFunctionCall %mat4v2float %207 %203
        %208 = OpExtInst %uint %20 UMin %idx %uint_7
        %209 = OpIMul %uint %uint_544 %208
        %210 = OpIAdd %uint %uint_384 %209
 %mat4x3_f32 = OpFunctionCall %mat4v3float %214 %210
        %215 = OpExtInst %uint %20 UMin %idx %uint_7
        %216 = OpIMul %uint %uint_544 %215
        %217 = OpIAdd %uint %uint_448 %216
 %mat4x4_f32 = OpFunctionCall %mat4v4float %221 %217
        %222 = OpExtInst %uint %20 UMin %idx %uint_7
        %223 = OpIMul %uint %uint_544 %222
        %224 = OpIAdd %uint %uint_512 %223
%arr2_vec3_f32 = OpFunctionCall %_arr_v3float_uint_2 %228 %224
        %229 = OpFunctionCall %int %tint_f32_to_i32 %scalar_f32
        %231 = OpBitcast %uint %229
        %232 = OpBitcast %uint %scalar_i32
        %233 = OpIAdd %uint %231 %232
        %234 = OpBitcast %int %233
        %235 = OpBitcast %int %scalar_u32
        %236 = OpBitcast %uint %234
        %237 = OpBitcast %uint %235
        %238 = OpIAdd %uint %236 %237
        %239 = OpBitcast %int %238
        %240 = OpCompositeExtract %float %vec2_f32 0
        %241 = OpFunctionCall %int %tint_f32_to_i32 %240
        %242 = OpBitcast %uint %239
        %243 = OpBitcast %uint %241
        %244 = OpIAdd %uint %242 %243
        %245 = OpBitcast %int %244
        %246 = OpCompositeExtract %int %vec2_i32 0
        %247 = OpBitcast %uint %245
        %248 = OpBitcast %uint %246
        %249 = OpIAdd %uint %247 %248
        %250 = OpBitcast %int %249
        %251 = OpCompositeExtract %uint %vec2_u32 0
        %252 = OpBitcast %int %251
        %253 = OpBitcast %uint %250
        %254 = OpBitcast %uint %252
        %255 = OpIAdd %uint %253 %254
        %256 = OpBitcast %int %255
        %257 = OpCompositeExtract %float %vec3_f32 1
        %258 = OpFunctionCall %int %tint_f32_to_i32 %257
        %259 = OpBitcast %uint %256
        %260 = OpBitcast %uint %258
        %261 = OpIAdd %uint %259 %260
        %262 = OpBitcast %int %261
        %263 = OpCompositeExtract %int %vec3_i32 1
        %264 = OpBitcast %uint %262
        %265 = OpBitcast %uint %263
        %266 = OpIAdd %uint %264 %265
        %267 = OpBitcast %int %266
        %268 = OpCompositeExtract %uint %vec3_u32 1
        %269 = OpBitcast %int %268
        %270 = OpBitcast %uint %267
        %271 = OpBitcast %uint %269
        %272 = OpIAdd %uint %270 %271
        %273 = OpBitcast %int %272
        %274 = OpCompositeExtract %float %vec4_f32 2
        %275 = OpFunctionCall %int %tint_f32_to_i32 %274
        %276 = OpBitcast %uint %273
        %277 = OpBitcast %uint %275
        %278 = OpIAdd %uint %276 %277
        %279 = OpBitcast %int %278
        %280 = OpCompositeExtract %int %vec4_i32 2
        %281 = OpBitcast %uint %279
        %282 = OpBitcast %uint %280
        %283 = OpIAdd %uint %281 %282
        %284 = OpBitcast %int %283
        %285 = OpCompositeExtract %uint %vec4_u32 2
        %286 = OpBitcast %int %285
        %287 = OpBitcast %uint %284
        %288 = OpBitcast %uint %286
        %289 = OpIAdd %uint %287 %288
        %290 = OpBitcast %int %289
        %291 = OpCompositeExtract %float %mat2x2_f32 0 0
        %292 = OpFunctionCall %int %tint_f32_to_i32 %291
        %293 = OpBitcast %uint %290
        %294 = OpBitcast %uint %292
        %295 = OpIAdd %uint %293 %294
        %296 = OpBitcast %int %295
        %297 = OpCompositeExtract %float %mat2x3_f32 0 0
        %298 = OpFunctionCall %int %tint_f32_to_i32 %297
        %299 = OpBitcast %uint %296
        %300 = OpBitcast %uint %298
        %301 = OpIAdd %uint %299 %300
        %302 = OpBitcast %int %301
        %303 = OpCompositeExtract %float %mat2x4_f32 0 0
        %304 = OpFunctionCall %int %tint_f32_to_i32 %303
        %305 = OpBitcast %uint %302
        %306 = OpBitcast %uint %304
        %307 = OpIAdd %uint %305 %306
        %308 = OpBitcast %int %307
        %309 = OpCompositeExtract %float %mat3x2_f32 0 0
        %310 = OpFunctionCall %int %tint_f32_to_i32 %309
        %311 = OpBitcast %uint %308
        %312 = OpBitcast %uint %310
        %313 = OpIAdd %uint %311 %312
        %314 = OpBitcast %int %313
        %315 = OpCompositeExtract %float %mat3x3_f32 0 0
        %316 = OpFunctionCall %int %tint_f32_to_i32 %315
        %317 = OpBitcast %uint %314
        %318 = OpBitcast %uint %316
        %319 = OpIAdd %uint %317 %318
        %320 = OpBitcast %int %319
        %321 = OpCompositeExtract %float %mat3x4_f32 0 0
        %322 = OpFunctionCall %int %tint_f32_to_i32 %321
        %323 = OpBitcast %uint %320
        %324 = OpBitcast %uint %322
        %325 = OpIAdd %uint %323 %324
        %326 = OpBitcast %int %325
        %327 = OpCompositeExtract %float %mat4x2_f32 0 0
        %328 = OpFunctionCall %int %tint_f32_to_i32 %327
        %329 = OpBitcast %uint %326
        %330 = OpBitcast %uint %328
        %331 = OpIAdd %uint %329 %330
        %332 = OpBitcast %int %331
        %333 = OpCompositeExtract %float %mat4x3_f32 0 0
        %334 = OpFunctionCall %int %tint_f32_to_i32 %333
        %335 = OpBitcast %uint %332
        %336 = OpBitcast %uint %334
        %337 = OpIAdd %uint %335 %336
        %338 = OpBitcast %int %337
        %339 = OpCompositeExtract %float %mat4x4_f32 0 0
        %340 = OpFunctionCall %int %tint_f32_to_i32 %339
        %341 = OpBitcast %uint %338
        %342 = OpBitcast %uint %340
        %343 = OpIAdd %uint %341 %342
        %344 = OpBitcast %int %343
        %345 = OpCompositeExtract %float %arr2_vec3_f32 0 0
        %346 = OpFunctionCall %int %tint_f32_to_i32 %345
        %347 = OpBitcast %uint %344
        %348 = OpBitcast %uint %346
        %349 = OpIAdd %uint %347 %348
        %350 = OpBitcast %int %349
        %351 = OpAccessChain %_ptr_StorageBuffer_int %8 %uint_0
               OpStore %351 %350 None
               OpReturn
               OpFunctionEnd
%tint_f32_to_i32 = OpFunction %int None %354
      %value = OpFunctionParameter %float
        %355 = OpLabel
        %356 = OpExtInst %float %20 NClamp %value %float_n2_14748365e_09 %float_2_14748352e_09
        %359 = OpConvertFToS %int %356
               OpReturnValue %359
               OpFunctionEnd
        %228 = OpFunction %_arr_v3float_uint_2 None %361
%start_byte_offset = OpFunctionParameter %uint
        %362 = OpLabel
          %a = OpVariable %_ptr_Function__arr_v3float_uint_2 Function
               OpStore %a %365
               OpBranch %366
        %366 = OpLabel
               OpBranch %369
        %369 = OpLabel
        %371 = OpPhi %uint %uint_0 %366 %372 %368
               OpLoopMerge %370 %368 None
               OpBranch %367
        %367 = OpLabel
        %374 = OpUGreaterThanEqual %bool %371 %uint_2
               OpSelectionMerge %375 None
               OpBranchConditional %374 %376 %375
        %376 = OpLabel
               OpBranch %370
        %375 = OpLabel
        %377 = OpIMul %uint %371 %uint_16
        %378 = OpIAdd %uint %start_byte_offset %377
        %379 = OpAccessChain %_ptr_Function_v3float %a %371
        %381 = OpUDiv %uint %378 %uint_16
        %382 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %381
        %383 = OpLoad %v4uint %382 None
        %384 = OpVectorShuffle %v3uint %383 %383 0 1 2
        %385 = OpBitcast %v3float %384
               OpStore %379 %385 None
               OpBranch %368
        %368 = OpLabel
        %372 = OpIAdd %uint %371 %uint_1
               OpBranch %369
        %370 = OpLabel
        %373 = OpLoad %_arr_v3float_uint_2 %a None
               OpReturnValue %373
               OpFunctionEnd
        %221 = OpFunction %mat4v4float None %388
%start_byte_offset_0 = OpFunctionParameter %uint
        %389 = OpLabel
        %390 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %391 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %390
        %392 = OpLoad %v4uint %391 None
        %393 = OpBitcast %v4float %392
        %394 = OpIAdd %uint %uint_16 %start_byte_offset_0
        %395 = OpUDiv %uint %394 %uint_16
        %396 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %395
        %397 = OpLoad %v4uint %396 None
        %398 = OpBitcast %v4float %397
        %399 = OpIAdd %uint %uint_32 %start_byte_offset_0
        %400 = OpUDiv %uint %399 %uint_16
        %401 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %400
        %402 = OpLoad %v4uint %401 None
        %403 = OpBitcast %v4float %402
        %404 = OpIAdd %uint %uint_48 %start_byte_offset_0
        %405 = OpUDiv %uint %404 %uint_16
        %406 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %405
        %407 = OpLoad %v4uint %406 None
        %408 = OpBitcast %v4float %407
        %409 = OpCompositeConstruct %mat4v4float %393 %398 %403 %408
               OpReturnValue %409
               OpFunctionEnd
        %214 = OpFunction %mat4v3float None %411
%start_byte_offset_1 = OpFunctionParameter %uint
        %412 = OpLabel
        %413 = OpUDiv %uint %start_byte_offset_1 %uint_16
        %414 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %413
        %415 = OpLoad %v4uint %414 None
        %416 = OpVectorShuffle %v3uint %415 %415 0 1 2
        %417 = OpBitcast %v3float %416
        %418 = OpIAdd %uint %uint_16 %start_byte_offset_1
        %419 = OpUDiv %uint %418 %uint_16
        %420 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %419
        %421 = OpLoad %v4uint %420 None
        %422 = OpVectorShuffle %v3uint %421 %421 0 1 2
        %423 = OpBitcast %v3float %422
        %424 = OpIAdd %uint %uint_32 %start_byte_offset_1
        %425 = OpUDiv %uint %424 %uint_16
        %426 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %425
        %427 = OpLoad %v4uint %426 None
        %428 = OpVectorShuffle %v3uint %427 %427 0 1 2
        %429 = OpBitcast %v3float %428
        %430 = OpIAdd %uint %uint_48 %start_byte_offset_1
        %431 = OpUDiv %uint %430 %uint_16
        %432 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %431
        %433 = OpLoad %v4uint %432 None
        %434 = OpVectorShuffle %v3uint %433 %433 0 1 2
        %435 = OpBitcast %v3float %434
        %436 = OpCompositeConstruct %mat4v3float %417 %423 %429 %435
               OpReturnValue %436
               OpFunctionEnd
        %207 = OpFunction %mat4v2float None %438
%start_byte_offset_2 = OpFunctionParameter %uint
        %439 = OpLabel
        %440 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %441 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %440
        %442 = OpUMod %uint %start_byte_offset_2 %uint_16
        %443 = OpUDiv %uint %442 %uint_4
        %444 = OpLoad %v4uint %441 None
        %445 = OpVectorShuffle %v2uint %444 %444 2 3
        %446 = OpVectorShuffle %v2uint %444 %444 0 1
        %447 = OpIEqual %bool %443 %uint_2
        %448 = OpCompositeConstruct %v2bool %447 %447
        %449 = OpSelect %v2uint %448 %445 %446
        %450 = OpBitcast %v2float %449
        %451 = OpIAdd %uint %uint_8 %start_byte_offset_2
        %452 = OpUDiv %uint %451 %uint_16
        %453 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %452
        %454 = OpUMod %uint %451 %uint_16
        %455 = OpUDiv %uint %454 %uint_4
        %456 = OpLoad %v4uint %453 None
        %457 = OpVectorShuffle %v2uint %456 %456 2 3
        %458 = OpVectorShuffle %v2uint %456 %456 0 1
        %459 = OpIEqual %bool %455 %uint_2
        %460 = OpCompositeConstruct %v2bool %459 %459
        %461 = OpSelect %v2uint %460 %457 %458
        %462 = OpBitcast %v2float %461
        %463 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %464 = OpUDiv %uint %463 %uint_16
        %465 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %464
        %466 = OpUMod %uint %463 %uint_16
        %467 = OpUDiv %uint %466 %uint_4
        %468 = OpLoad %v4uint %465 None
        %469 = OpVectorShuffle %v2uint %468 %468 2 3
        %470 = OpVectorShuffle %v2uint %468 %468 0 1
        %471 = OpIEqual %bool %467 %uint_2
        %472 = OpCompositeConstruct %v2bool %471 %471
        %473 = OpSelect %v2uint %472 %469 %470
        %474 = OpBitcast %v2float %473
        %475 = OpIAdd %uint %uint_24 %start_byte_offset_2
        %476 = OpUDiv %uint %475 %uint_16
        %477 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %476
        %478 = OpUMod %uint %475 %uint_16
        %479 = OpUDiv %uint %478 %uint_4
        %480 = OpLoad %v4uint %477 None
        %481 = OpVectorShuffle %v2uint %480 %480 2 3
        %482 = OpVectorShuffle %v2uint %480 %480 0 1
        %483 = OpIEqual %bool %479 %uint_2
        %484 = OpCompositeConstruct %v2bool %483 %483
        %485 = OpSelect %v2uint %484 %481 %482
        %486 = OpBitcast %v2float %485
        %487 = OpCompositeConstruct %mat4v2float %450 %462 %474 %486
               OpReturnValue %487
               OpFunctionEnd
        %200 = OpFunction %mat3v4float None %489
%start_byte_offset_3 = OpFunctionParameter %uint
        %490 = OpLabel
        %491 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %492 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %491
        %493 = OpLoad %v4uint %492 None
        %494 = OpBitcast %v4float %493
        %495 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %496 = OpUDiv %uint %495 %uint_16
        %497 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %496
        %498 = OpLoad %v4uint %497 None
        %499 = OpBitcast %v4float %498
        %500 = OpIAdd %uint %uint_32 %start_byte_offset_3
        %501 = OpUDiv %uint %500 %uint_16
        %502 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %501
        %503 = OpLoad %v4uint %502 None
        %504 = OpBitcast %v4float %503
        %505 = OpCompositeConstruct %mat3v4float %494 %499 %504
               OpReturnValue %505
               OpFunctionEnd
        %193 = OpFunction %mat3v3float None %507
%start_byte_offset_4 = OpFunctionParameter %uint
        %508 = OpLabel
        %509 = OpUDiv %uint %start_byte_offset_4 %uint_16
        %510 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %509
        %511 = OpLoad %v4uint %510 None
        %512 = OpVectorShuffle %v3uint %511 %511 0 1 2
        %513 = OpBitcast %v3float %512
        %514 = OpIAdd %uint %uint_16 %start_byte_offset_4
        %515 = OpUDiv %uint %514 %uint_16
        %516 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %515
        %517 = OpLoad %v4uint %516 None
        %518 = OpVectorShuffle %v3uint %517 %517 0 1 2
        %519 = OpBitcast %v3float %518
        %520 = OpIAdd %uint %uint_32 %start_byte_offset_4
        %521 = OpUDiv %uint %520 %uint_16
        %522 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %521
        %523 = OpLoad %v4uint %522 None
        %524 = OpVectorShuffle %v3uint %523 %523 0 1 2
        %525 = OpBitcast %v3float %524
        %526 = OpCompositeConstruct %mat3v3float %513 %519 %525
               OpReturnValue %526
               OpFunctionEnd
        %186 = OpFunction %mat3v2float None %528
%start_byte_offset_5 = OpFunctionParameter %uint
        %529 = OpLabel
        %530 = OpUDiv %uint %start_byte_offset_5 %uint_16
        %531 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %530
        %532 = OpUMod %uint %start_byte_offset_5 %uint_16
        %533 = OpUDiv %uint %532 %uint_4
        %534 = OpLoad %v4uint %531 None
        %535 = OpVectorShuffle %v2uint %534 %534 2 3
        %536 = OpVectorShuffle %v2uint %534 %534 0 1
        %537 = OpIEqual %bool %533 %uint_2
        %538 = OpCompositeConstruct %v2bool %537 %537
        %539 = OpSelect %v2uint %538 %535 %536
        %540 = OpBitcast %v2float %539
        %541 = OpIAdd %uint %uint_8 %start_byte_offset_5
        %542 = OpUDiv %uint %541 %uint_16
        %543 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %542
        %544 = OpUMod %uint %541 %uint_16
        %545 = OpUDiv %uint %544 %uint_4
        %546 = OpLoad %v4uint %543 None
        %547 = OpVectorShuffle %v2uint %546 %546 2 3
        %548 = OpVectorShuffle %v2uint %546 %546 0 1
        %549 = OpIEqual %bool %545 %uint_2
        %550 = OpCompositeConstruct %v2bool %549 %549
        %551 = OpSelect %v2uint %550 %547 %548
        %552 = OpBitcast %v2float %551
        %553 = OpIAdd %uint %uint_16 %start_byte_offset_5
        %554 = OpUDiv %uint %553 %uint_16
        %555 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %554
        %556 = OpUMod %uint %553 %uint_16
        %557 = OpUDiv %uint %556 %uint_4
        %558 = OpLoad %v4uint %555 None
        %559 = OpVectorShuffle %v2uint %558 %558 2 3
        %560 = OpVectorShuffle %v2uint %558 %558 0 1
        %561 = OpIEqual %bool %557 %uint_2
        %562 = OpCompositeConstruct %v2bool %561 %561
        %563 = OpSelect %v2uint %562 %559 %560
        %564 = OpBitcast %v2float %563
        %565 = OpCompositeConstruct %mat3v2float %540 %552 %564
               OpReturnValue %565
               OpFunctionEnd
        %179 = OpFunction %mat2v4float None %567
%start_byte_offset_6 = OpFunctionParameter %uint
        %568 = OpLabel
        %569 = OpUDiv %uint %start_byte_offset_6 %uint_16
        %570 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %569
        %571 = OpLoad %v4uint %570 None
        %572 = OpBitcast %v4float %571
        %573 = OpIAdd %uint %uint_16 %start_byte_offset_6
        %574 = OpUDiv %uint %573 %uint_16
        %575 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %574
        %576 = OpLoad %v4uint %575 None
        %577 = OpBitcast %v4float %576
        %578 = OpCompositeConstruct %mat2v4float %572 %577
               OpReturnValue %578
               OpFunctionEnd
        %172 = OpFunction %mat2v3float None %580
%start_byte_offset_7 = OpFunctionParameter %uint
        %581 = OpLabel
        %582 = OpUDiv %uint %start_byte_offset_7 %uint_16
        %583 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %582
        %584 = OpLoad %v4uint %583 None
        %585 = OpVectorShuffle %v3uint %584 %584 0 1 2
        %586 = OpBitcast %v3float %585
        %587 = OpIAdd %uint %uint_16 %start_byte_offset_7
        %588 = OpUDiv %uint %587 %uint_16
        %589 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %588
        %590 = OpLoad %v4uint %589 None
        %591 = OpVectorShuffle %v3uint %590 %590 0 1 2
        %592 = OpBitcast %v3float %591
        %593 = OpCompositeConstruct %mat2v3float %586 %592
               OpReturnValue %593
               OpFunctionEnd
        %165 = OpFunction %mat2v2float None %595
%start_byte_offset_8 = OpFunctionParameter %uint
        %596 = OpLabel
        %597 = OpUDiv %uint %start_byte_offset_8 %uint_16
        %598 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %597
        %599 = OpUMod %uint %start_byte_offset_8 %uint_16
        %600 = OpUDiv %uint %599 %uint_4
        %601 = OpLoad %v4uint %598 None
        %602 = OpVectorShuffle %v2uint %601 %601 2 3
        %603 = OpVectorShuffle %v2uint %601 %601 0 1
        %604 = OpIEqual %bool %600 %uint_2
        %605 = OpCompositeConstruct %v2bool %604 %604
        %606 = OpSelect %v2uint %605 %602 %603
        %607 = OpBitcast %v2float %606
        %608 = OpIAdd %uint %uint_8 %start_byte_offset_8
        %609 = OpUDiv %uint %608 %uint_16
        %610 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %609
        %611 = OpUMod %uint %608 %uint_16
        %612 = OpUDiv %uint %611 %uint_4
        %613 = OpLoad %v4uint %610 None
        %614 = OpVectorShuffle %v2uint %613 %613 2 3
        %615 = OpVectorShuffle %v2uint %613 %613 0 1
        %616 = OpIEqual %bool %612 %uint_2
        %617 = OpCompositeConstruct %v2bool %616 %616
        %618 = OpSelect %v2uint %617 %614 %615
        %619 = OpBitcast %v2float %618
        %620 = OpCompositeConstruct %mat2v2float %607 %619
               OpReturnValue %620
               OpFunctionEnd
       %main = OpFunction %void None %622
        %623 = OpLabel
        %624 = OpLoad %uint %main_local_invocation_index_Input None
        %625 = OpFunctionCall %void %main_inner %624
               OpReturn
               OpFunctionEnd
