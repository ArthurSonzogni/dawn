; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 1195
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
         %20 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %main_local_invocation_index_Input
               OpExecutionMode %main LocalSize 1 1 1
               OpMemberName %ub_block_tint_explicit_layout 0 "inner"
               OpName %ub_block_tint_explicit_layout "ub_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %main_local_invocation_index_Input "main_local_invocation_index_Input"
               OpName %main_inner "main_inner"
               OpName %idx "idx"
               OpName %scalar_f32 "scalar_f32"
               OpName %scalar_i32 "scalar_i32"
               OpName %scalar_u32 "scalar_u32"
               OpName %scalar_f16 "scalar_f16"
               OpName %vec2_f32 "vec2_f32"
               OpName %vec2_i32 "vec2_i32"
               OpName %vec2_u32 "vec2_u32"
               OpName %vec2_f16 "vec2_f16"
               OpName %vec3_f32 "vec3_f32"
               OpName %vec3_i32 "vec3_i32"
               OpName %vec3_u32 "vec3_u32"
               OpName %vec3_f16 "vec3_f16"
               OpName %vec4_f32 "vec4_f32"
               OpName %vec4_i32 "vec4_i32"
               OpName %vec4_u32 "vec4_u32"
               OpName %vec4_f16 "vec4_f16"
               OpName %mat2x2_f32 "mat2x2_f32"
               OpName %mat2x3_f32 "mat2x3_f32"
               OpName %mat2x4_f32 "mat2x4_f32"
               OpName %mat3x2_f32 "mat3x2_f32"
               OpName %mat3x3_f32 "mat3x3_f32"
               OpName %mat3x4_f32 "mat3x4_f32"
               OpName %mat4x2_f32 "mat4x2_f32"
               OpName %mat4x3_f32 "mat4x3_f32"
               OpName %mat4x4_f32 "mat4x4_f32"
               OpName %mat2x2_f16 "mat2x2_f16"
               OpName %mat2x3_f16 "mat2x3_f16"
               OpName %mat2x4_f16 "mat2x4_f16"
               OpName %mat3x2_f16 "mat3x2_f16"
               OpName %mat3x3_f16 "mat3x3_f16"
               OpName %mat3x4_f16 "mat3x4_f16"
               OpName %mat4x2_f16 "mat4x2_f16"
               OpName %mat4x3_f16 "mat4x3_f16"
               OpName %mat4x4_f16 "mat4x4_f16"
               OpName %arr2_vec3_f32 "arr2_vec3_f32"
               OpName %arr2_mat4x2_f16 "arr2_mat4x2_f16"
               OpName %tint_f32_to_i32 "tint_f32_to_i32"
               OpName %value "value"
               OpName %tint_f16_to_i32 "tint_f16_to_i32"
               OpName %value_0 "value"
               OpName %start_byte_offset "start_byte_offset"
               OpName %a "a"
               OpName %start_byte_offset_0 "start_byte_offset"
               OpName %start_byte_offset_1 "start_byte_offset"
               OpName %a_0 "a"
               OpName %start_byte_offset_2 "start_byte_offset"
               OpName %start_byte_offset_3 "start_byte_offset"
               OpName %start_byte_offset_4 "start_byte_offset"
               OpName %start_byte_offset_5 "start_byte_offset"
               OpName %start_byte_offset_6 "start_byte_offset"
               OpName %start_byte_offset_7 "start_byte_offset"
               OpName %start_byte_offset_8 "start_byte_offset"
               OpName %start_byte_offset_9 "start_byte_offset"
               OpName %start_byte_offset_10 "start_byte_offset"
               OpName %start_byte_offset_11 "start_byte_offset"
               OpName %start_byte_offset_12 "start_byte_offset"
               OpName %start_byte_offset_13 "start_byte_offset"
               OpName %start_byte_offset_14 "start_byte_offset"
               OpName %start_byte_offset_15 "start_byte_offset"
               OpName %start_byte_offset_16 "start_byte_offset"
               OpName %start_byte_offset_17 "start_byte_offset"
               OpName %start_byte_offset_18 "start_byte_offset"
               OpName %main "main"
               OpDecorate %_arr_v4uint_uint_400 ArrayStride 16
               OpMemberDecorate %ub_block_tint_explicit_layout 0 Offset 0
               OpDecorate %ub_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
               OpDecorate %main_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
   %uint_400 = OpConstant %uint 400
%_arr_v4uint_uint_400 = OpTypeArray %v4uint %uint_400
%ub_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_400
%_ptr_Uniform_ub_block_tint_explicit_layout = OpTypePointer Uniform %ub_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_ub_block_tint_explicit_layout Uniform
        %int = OpTypeInt 32 1
    %s_block = OpTypeStruct %int
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
%_ptr_Input_uint = OpTypePointer Input %uint
%main_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %17 = OpTypeFunction %void %uint
     %uint_7 = OpConstant %uint 7
   %uint_800 = OpConstant %uint 800
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_0 = OpConstant %uint 0
    %uint_15 = OpConstant %uint 15
     %uint_2 = OpConstant %uint 2
      %float = OpTypeFloat 32
     %uint_4 = OpConstant %uint 4
     %uint_8 = OpConstant %uint 8
    %uint_12 = OpConstant %uint 12
       %bool = OpTypeBool
     %uint_1 = OpConstant %uint 1
       %half = OpTypeFloat 16
     %v2half = OpTypeVector %half 2
     %v2uint = OpTypeVector %uint 2
     %v2bool = OpTypeVector %bool 2
    %v2float = OpTypeVector %float 2
    %uint_24 = OpConstant %uint 24
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
    %uint_40 = OpConstant %uint 40
    %uint_48 = OpConstant %uint 48
     %v3uint = OpTypeVector %uint 3
    %v3float = OpTypeVector %float 3
    %uint_64 = OpConstant %uint 64
      %v3int = OpTypeVector %int 3
    %uint_80 = OpConstant %uint 80
    %uint_96 = OpConstant %uint 96
     %v4half = OpTypeVector %half 4
     %v3half = OpTypeVector %half 3
   %uint_112 = OpConstant %uint 112
    %v4float = OpTypeVector %float 4
   %uint_128 = OpConstant %uint 128
      %v4int = OpTypeVector %int 4
   %uint_144 = OpConstant %uint 144
   %uint_160 = OpConstant %uint 160
   %uint_168 = OpConstant %uint 168
%mat2v2float = OpTypeMatrix %v2float 2
   %uint_192 = OpConstant %uint 192
%mat2v3float = OpTypeMatrix %v3float 2
   %uint_224 = OpConstant %uint 224
%mat2v4float = OpTypeMatrix %v4float 2
   %uint_256 = OpConstant %uint 256
%mat3v2float = OpTypeMatrix %v2float 3
   %uint_288 = OpConstant %uint 288
%mat3v3float = OpTypeMatrix %v3float 3
   %uint_336 = OpConstant %uint 336
%mat3v4float = OpTypeMatrix %v4float 3
   %uint_384 = OpConstant %uint 384
%mat4v2float = OpTypeMatrix %v2float 4
   %uint_416 = OpConstant %uint 416
%mat4v3float = OpTypeMatrix %v3float 4
   %uint_480 = OpConstant %uint 480
%mat4v4float = OpTypeMatrix %v4float 4
   %uint_544 = OpConstant %uint 544
 %mat2v2half = OpTypeMatrix %v2half 2
   %uint_552 = OpConstant %uint 552
 %mat2v3half = OpTypeMatrix %v3half 2
   %uint_568 = OpConstant %uint 568
 %mat2v4half = OpTypeMatrix %v4half 2
   %uint_584 = OpConstant %uint 584
 %mat3v2half = OpTypeMatrix %v2half 3
   %uint_600 = OpConstant %uint 600
 %mat3v3half = OpTypeMatrix %v3half 3
   %uint_624 = OpConstant %uint 624
 %mat3v4half = OpTypeMatrix %v4half 3
   %uint_648 = OpConstant %uint 648
 %mat4v2half = OpTypeMatrix %v2half 4
   %uint_664 = OpConstant %uint 664
 %mat4v3half = OpTypeMatrix %v3half 4
   %uint_696 = OpConstant %uint 696
 %mat4v4half = OpTypeMatrix %v4half 4
   %uint_736 = OpConstant %uint 736
%_arr_v3float_uint_2 = OpTypeArray %v3float %uint_2
   %uint_768 = OpConstant %uint 768
%_arr_mat4v2half_uint_2 = OpTypeArray %mat4v2half %uint_2
%_ptr_StorageBuffer_int = OpTypePointer StorageBuffer %int
        %571 = OpTypeFunction %int %float
%float_n2_14748365e_09 = OpConstant %float -2.14748365e+09
%float_2_14748352e_09 = OpConstant %float 2.14748352e+09
        %578 = OpTypeFunction %int %half
%half_n0x1_ffcp_15 = OpConstant %half -0x1.ffcp+15
%half_0x1_ffcp_15 = OpConstant %half 0x1.ffcp+15
        %585 = OpTypeFunction %_arr_mat4v2half_uint_2 %uint
%_ptr_Function__arr_mat4v2half_uint_2 = OpTypePointer Function %_arr_mat4v2half_uint_2
        %589 = OpConstantNull %_arr_mat4v2half_uint_2
%_ptr_Function_mat4v2half = OpTypePointer Function %mat4v2half
        %607 = OpTypeFunction %mat4v2half %uint
        %642 = OpTypeFunction %_arr_v3float_uint_2 %uint
%_ptr_Function__arr_v3float_uint_2 = OpTypePointer Function %_arr_v3float_uint_2
        %646 = OpConstantNull %_arr_v3float_uint_2
%_ptr_Function_v3float = OpTypePointer Function %v3float
        %668 = OpTypeFunction %mat4v4half %uint
        %719 = OpTypeFunction %mat4v3half %uint
        %774 = OpTypeFunction %mat3v4half %uint
        %813 = OpTypeFunction %mat3v3half %uint
        %855 = OpTypeFunction %mat3v2half %uint
        %882 = OpTypeFunction %mat2v4half %uint
        %909 = OpTypeFunction %mat2v3half %uint
        %938 = OpTypeFunction %mat2v2half %uint
        %957 = OpTypeFunction %mat4v4float %uint
        %980 = OpTypeFunction %mat4v3float %uint
       %1007 = OpTypeFunction %mat4v2float %uint
       %1058 = OpTypeFunction %mat3v4float %uint
       %1076 = OpTypeFunction %mat3v3float %uint
       %1097 = OpTypeFunction %mat3v2float %uint
       %1136 = OpTypeFunction %mat2v4float %uint
       %1149 = OpTypeFunction %mat2v3float %uint
       %1164 = OpTypeFunction %mat2v2float %uint
       %1191 = OpTypeFunction %void
 %main_inner = OpFunction %void None %17
        %idx = OpFunctionParameter %uint
         %18 = OpLabel
         %19 = OpExtInst %uint %20 UMin %idx %uint_7
         %22 = OpIMul %uint %uint_800 %19
         %24 = OpUDiv %uint %22 %uint_16
         %26 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %24
         %29 = OpBitwiseAnd %uint %22 %uint_15
         %31 = OpShiftRightLogical %uint %29 %uint_2
         %33 = OpLoad %v4uint %26 None
         %34 = OpVectorExtractDynamic %uint %33 %31
 %scalar_f32 = OpBitcast %float %34
         %37 = OpExtInst %uint %20 UMin %idx %uint_7
         %38 = OpIMul %uint %uint_800 %37
         %39 = OpIAdd %uint %uint_4 %38
         %41 = OpUDiv %uint %39 %uint_16
         %42 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %41
         %43 = OpBitwiseAnd %uint %39 %uint_15
         %44 = OpShiftRightLogical %uint %43 %uint_2
         %45 = OpLoad %v4uint %42 None
         %46 = OpVectorExtractDynamic %uint %45 %44
 %scalar_i32 = OpBitcast %int %46
         %48 = OpExtInst %uint %20 UMin %idx %uint_7
         %49 = OpIMul %uint %uint_800 %48
         %50 = OpIAdd %uint %uint_8 %49
         %52 = OpUDiv %uint %50 %uint_16
         %53 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %52
         %54 = OpBitwiseAnd %uint %50 %uint_15
         %55 = OpShiftRightLogical %uint %54 %uint_2
         %56 = OpLoad %v4uint %53 None
 %scalar_u32 = OpVectorExtractDynamic %uint %56 %55
         %58 = OpExtInst %uint %20 UMin %idx %uint_7
         %59 = OpIMul %uint %uint_800 %58
         %60 = OpIAdd %uint %uint_12 %59
         %62 = OpUDiv %uint %60 %uint_16
         %63 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %62
         %64 = OpBitwiseAnd %uint %60 %uint_15
         %65 = OpShiftRightLogical %uint %64 %uint_2
         %66 = OpLoad %v4uint %63 None
         %67 = OpVectorExtractDynamic %uint %66 %65
         %68 = OpUMod %uint %60 %uint_4
         %69 = OpIEqual %bool %68 %uint_0
         %71 = OpSelect %uint %69 %uint_0 %uint_1
         %75 = OpBitcast %v2half %67
 %scalar_f16 = OpVectorExtractDynamic %half %75 %71
         %77 = OpExtInst %uint %20 UMin %idx %uint_7
         %78 = OpIMul %uint %uint_800 %77
         %79 = OpIAdd %uint %uint_16 %78
         %80 = OpUDiv %uint %79 %uint_16
         %81 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %80
         %82 = OpBitwiseAnd %uint %79 %uint_15
         %83 = OpShiftRightLogical %uint %82 %uint_2
         %84 = OpLoad %v4uint %81 None
         %85 = OpVectorShuffle %v2uint %84 %84 2 3
         %87 = OpVectorShuffle %v2uint %84 %84 0 1
         %88 = OpIEqual %bool %83 %uint_2
         %90 = OpCompositeConstruct %v2bool %88 %88
         %91 = OpSelect %v2uint %90 %85 %87
   %vec2_f32 = OpBitcast %v2float %91
         %94 = OpExtInst %uint %20 UMin %idx %uint_7
         %95 = OpIMul %uint %uint_800 %94
         %96 = OpIAdd %uint %uint_24 %95
         %98 = OpUDiv %uint %96 %uint_16
         %99 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %98
        %100 = OpBitwiseAnd %uint %96 %uint_15
        %101 = OpShiftRightLogical %uint %100 %uint_2
        %102 = OpLoad %v4uint %99 None
        %103 = OpVectorShuffle %v2uint %102 %102 2 3
        %104 = OpVectorShuffle %v2uint %102 %102 0 1
        %105 = OpIEqual %bool %101 %uint_2
        %106 = OpCompositeConstruct %v2bool %105 %105
        %107 = OpSelect %v2uint %106 %103 %104
   %vec2_i32 = OpBitcast %v2int %107
        %110 = OpExtInst %uint %20 UMin %idx %uint_7
        %111 = OpIMul %uint %uint_800 %110
        %112 = OpIAdd %uint %uint_32 %111
        %114 = OpUDiv %uint %112 %uint_16
        %115 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %114
        %116 = OpBitwiseAnd %uint %112 %uint_15
        %117 = OpShiftRightLogical %uint %116 %uint_2
        %118 = OpLoad %v4uint %115 None
        %119 = OpVectorShuffle %v2uint %118 %118 2 3
        %120 = OpVectorShuffle %v2uint %118 %118 0 1
        %121 = OpIEqual %bool %117 %uint_2
        %122 = OpCompositeConstruct %v2bool %121 %121
   %vec2_u32 = OpSelect %v2uint %122 %119 %120
        %124 = OpExtInst %uint %20 UMin %idx %uint_7
        %125 = OpIMul %uint %uint_800 %124
        %126 = OpIAdd %uint %uint_40 %125
        %128 = OpUDiv %uint %126 %uint_16
        %129 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %128
        %130 = OpBitwiseAnd %uint %126 %uint_15
        %131 = OpShiftRightLogical %uint %130 %uint_2
        %132 = OpLoad %v4uint %129 None
        %133 = OpVectorExtractDynamic %uint %132 %131
   %vec2_f16 = OpBitcast %v2half %133
        %135 = OpExtInst %uint %20 UMin %idx %uint_7
        %136 = OpIMul %uint %uint_800 %135
        %137 = OpIAdd %uint %uint_48 %136
        %139 = OpUDiv %uint %137 %uint_16
        %140 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %139
        %141 = OpLoad %v4uint %140 None
        %142 = OpVectorShuffle %v3uint %141 %141 0 1 2
   %vec3_f32 = OpBitcast %v3float %142
        %146 = OpExtInst %uint %20 UMin %idx %uint_7
        %147 = OpIMul %uint %uint_800 %146
        %148 = OpIAdd %uint %uint_64 %147
        %150 = OpUDiv %uint %148 %uint_16
        %151 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %150
        %152 = OpLoad %v4uint %151 None
        %153 = OpVectorShuffle %v3uint %152 %152 0 1 2
   %vec3_i32 = OpBitcast %v3int %153
        %156 = OpExtInst %uint %20 UMin %idx %uint_7
        %157 = OpIMul %uint %uint_800 %156
        %158 = OpIAdd %uint %uint_80 %157
        %160 = OpUDiv %uint %158 %uint_16
        %161 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %160
        %162 = OpLoad %v4uint %161 None
   %vec3_u32 = OpVectorShuffle %v3uint %162 %162 0 1 2
        %164 = OpExtInst %uint %20 UMin %idx %uint_7
        %165 = OpIMul %uint %uint_800 %164
        %166 = OpIAdd %uint %uint_96 %165
        %168 = OpUDiv %uint %166 %uint_16
        %169 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %168
        %170 = OpBitwiseAnd %uint %166 %uint_15
        %171 = OpShiftRightLogical %uint %170 %uint_2
        %172 = OpLoad %v4uint %169 None
        %173 = OpVectorShuffle %v2uint %172 %172 2 3
        %174 = OpVectorShuffle %v2uint %172 %172 0 1
        %175 = OpIEqual %bool %171 %uint_2
        %176 = OpCompositeConstruct %v2bool %175 %175
        %177 = OpSelect %v2uint %176 %173 %174
        %179 = OpBitcast %v4half %177
   %vec3_f16 = OpVectorShuffle %v3half %179 %179 0 1 2
        %182 = OpExtInst %uint %20 UMin %idx %uint_7
        %183 = OpIMul %uint %uint_800 %182
        %184 = OpIAdd %uint %uint_112 %183
        %186 = OpUDiv %uint %184 %uint_16
        %187 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %186
        %188 = OpLoad %v4uint %187 None
   %vec4_f32 = OpBitcast %v4float %188
        %191 = OpExtInst %uint %20 UMin %idx %uint_7
        %192 = OpIMul %uint %uint_800 %191
        %193 = OpIAdd %uint %uint_128 %192
        %195 = OpUDiv %uint %193 %uint_16
        %196 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %195
        %197 = OpLoad %v4uint %196 None
   %vec4_i32 = OpBitcast %v4int %197
        %200 = OpExtInst %uint %20 UMin %idx %uint_7
        %201 = OpIMul %uint %uint_800 %200
        %202 = OpIAdd %uint %uint_144 %201
        %204 = OpUDiv %uint %202 %uint_16
        %205 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %204
   %vec4_u32 = OpLoad %v4uint %205 None
        %207 = OpExtInst %uint %20 UMin %idx %uint_7
        %208 = OpIMul %uint %uint_800 %207
        %209 = OpIAdd %uint %uint_160 %208
        %211 = OpUDiv %uint %209 %uint_16
        %212 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %211
        %213 = OpBitwiseAnd %uint %209 %uint_15
        %214 = OpShiftRightLogical %uint %213 %uint_2
        %215 = OpLoad %v4uint %212 None
        %216 = OpVectorShuffle %v2uint %215 %215 2 3
        %217 = OpVectorShuffle %v2uint %215 %215 0 1
        %218 = OpIEqual %bool %214 %uint_2
        %219 = OpCompositeConstruct %v2bool %218 %218
        %220 = OpSelect %v2uint %219 %216 %217
   %vec4_f16 = OpBitcast %v4half %220
        %222 = OpExtInst %uint %20 UMin %idx %uint_7
        %223 = OpIMul %uint %uint_800 %222
        %224 = OpIAdd %uint %uint_168 %223
 %mat2x2_f32 = OpFunctionCall %mat2v2float %228 %224
        %229 = OpExtInst %uint %20 UMin %idx %uint_7
        %230 = OpIMul %uint %uint_800 %229
        %231 = OpIAdd %uint %uint_192 %230
 %mat2x3_f32 = OpFunctionCall %mat2v3float %235 %231
        %236 = OpExtInst %uint %20 UMin %idx %uint_7
        %237 = OpIMul %uint %uint_800 %236
        %238 = OpIAdd %uint %uint_224 %237
 %mat2x4_f32 = OpFunctionCall %mat2v4float %242 %238
        %243 = OpExtInst %uint %20 UMin %idx %uint_7
        %244 = OpIMul %uint %uint_800 %243
        %245 = OpIAdd %uint %uint_256 %244
 %mat3x2_f32 = OpFunctionCall %mat3v2float %249 %245
        %250 = OpExtInst %uint %20 UMin %idx %uint_7
        %251 = OpIMul %uint %uint_800 %250
        %252 = OpIAdd %uint %uint_288 %251
 %mat3x3_f32 = OpFunctionCall %mat3v3float %256 %252
        %257 = OpExtInst %uint %20 UMin %idx %uint_7
        %258 = OpIMul %uint %uint_800 %257
        %259 = OpIAdd %uint %uint_336 %258
 %mat3x4_f32 = OpFunctionCall %mat3v4float %263 %259
        %264 = OpExtInst %uint %20 UMin %idx %uint_7
        %265 = OpIMul %uint %uint_800 %264
        %266 = OpIAdd %uint %uint_384 %265
 %mat4x2_f32 = OpFunctionCall %mat4v2float %270 %266
        %271 = OpExtInst %uint %20 UMin %idx %uint_7
        %272 = OpIMul %uint %uint_800 %271
        %273 = OpIAdd %uint %uint_416 %272
 %mat4x3_f32 = OpFunctionCall %mat4v3float %277 %273
        %278 = OpExtInst %uint %20 UMin %idx %uint_7
        %279 = OpIMul %uint %uint_800 %278
        %280 = OpIAdd %uint %uint_480 %279
 %mat4x4_f32 = OpFunctionCall %mat4v4float %284 %280
        %285 = OpExtInst %uint %20 UMin %idx %uint_7
        %286 = OpIMul %uint %uint_800 %285
        %287 = OpIAdd %uint %uint_544 %286
 %mat2x2_f16 = OpFunctionCall %mat2v2half %291 %287
        %292 = OpExtInst %uint %20 UMin %idx %uint_7
        %293 = OpIMul %uint %uint_800 %292
        %294 = OpIAdd %uint %uint_552 %293
 %mat2x3_f16 = OpFunctionCall %mat2v3half %298 %294
        %299 = OpExtInst %uint %20 UMin %idx %uint_7
        %300 = OpIMul %uint %uint_800 %299
        %301 = OpIAdd %uint %uint_568 %300
 %mat2x4_f16 = OpFunctionCall %mat2v4half %305 %301
        %306 = OpExtInst %uint %20 UMin %idx %uint_7
        %307 = OpIMul %uint %uint_800 %306
        %308 = OpIAdd %uint %uint_584 %307
 %mat3x2_f16 = OpFunctionCall %mat3v2half %312 %308
        %313 = OpExtInst %uint %20 UMin %idx %uint_7
        %314 = OpIMul %uint %uint_800 %313
        %315 = OpIAdd %uint %uint_600 %314
 %mat3x3_f16 = OpFunctionCall %mat3v3half %319 %315
        %320 = OpExtInst %uint %20 UMin %idx %uint_7
        %321 = OpIMul %uint %uint_800 %320
        %322 = OpIAdd %uint %uint_624 %321
 %mat3x4_f16 = OpFunctionCall %mat3v4half %326 %322
        %327 = OpExtInst %uint %20 UMin %idx %uint_7
        %328 = OpIMul %uint %uint_800 %327
        %329 = OpIAdd %uint %uint_648 %328
 %mat4x2_f16 = OpFunctionCall %mat4v2half %333 %329
        %334 = OpExtInst %uint %20 UMin %idx %uint_7
        %335 = OpIMul %uint %uint_800 %334
        %336 = OpIAdd %uint %uint_664 %335
 %mat4x3_f16 = OpFunctionCall %mat4v3half %340 %336
        %341 = OpExtInst %uint %20 UMin %idx %uint_7
        %342 = OpIMul %uint %uint_800 %341
        %343 = OpIAdd %uint %uint_696 %342
 %mat4x4_f16 = OpFunctionCall %mat4v4half %347 %343
        %348 = OpExtInst %uint %20 UMin %idx %uint_7
        %349 = OpIMul %uint %uint_800 %348
        %350 = OpIAdd %uint %uint_736 %349
%arr2_vec3_f32 = OpFunctionCall %_arr_v3float_uint_2 %354 %350
        %355 = OpExtInst %uint %20 UMin %idx %uint_7
        %356 = OpIMul %uint %uint_800 %355
        %357 = OpIAdd %uint %uint_768 %356
%arr2_mat4x2_f16 = OpFunctionCall %_arr_mat4v2half_uint_2 %361 %357
        %362 = OpFunctionCall %int %tint_f32_to_i32 %scalar_f32
        %364 = OpBitcast %uint %362
        %365 = OpBitcast %uint %scalar_i32
        %366 = OpIAdd %uint %364 %365
        %367 = OpBitcast %int %366
        %368 = OpBitcast %int %scalar_u32
        %369 = OpBitcast %uint %367
        %370 = OpBitcast %uint %368
        %371 = OpIAdd %uint %369 %370
        %372 = OpBitcast %int %371
        %373 = OpFunctionCall %int %tint_f16_to_i32 %scalar_f16
        %375 = OpBitcast %uint %372
        %376 = OpBitcast %uint %373
        %377 = OpIAdd %uint %375 %376
        %378 = OpBitcast %int %377
        %379 = OpCompositeExtract %float %vec2_f32 0
        %380 = OpFunctionCall %int %tint_f32_to_i32 %379
        %381 = OpBitcast %uint %378
        %382 = OpBitcast %uint %380
        %383 = OpIAdd %uint %381 %382
        %384 = OpBitcast %int %383
        %385 = OpCompositeExtract %int %vec2_i32 0
        %386 = OpBitcast %uint %384
        %387 = OpBitcast %uint %385
        %388 = OpIAdd %uint %386 %387
        %389 = OpBitcast %int %388
        %390 = OpCompositeExtract %uint %vec2_u32 0
        %391 = OpBitcast %int %390
        %392 = OpBitcast %uint %389
        %393 = OpBitcast %uint %391
        %394 = OpIAdd %uint %392 %393
        %395 = OpBitcast %int %394
        %396 = OpCompositeExtract %half %vec2_f16 0
        %397 = OpFunctionCall %int %tint_f16_to_i32 %396
        %398 = OpBitcast %uint %395
        %399 = OpBitcast %uint %397
        %400 = OpIAdd %uint %398 %399
        %401 = OpBitcast %int %400
        %402 = OpCompositeExtract %float %vec3_f32 1
        %403 = OpFunctionCall %int %tint_f32_to_i32 %402
        %404 = OpBitcast %uint %401
        %405 = OpBitcast %uint %403
        %406 = OpIAdd %uint %404 %405
        %407 = OpBitcast %int %406
        %408 = OpCompositeExtract %int %vec3_i32 1
        %409 = OpBitcast %uint %407
        %410 = OpBitcast %uint %408
        %411 = OpIAdd %uint %409 %410
        %412 = OpBitcast %int %411
        %413 = OpCompositeExtract %uint %vec3_u32 1
        %414 = OpBitcast %int %413
        %415 = OpBitcast %uint %412
        %416 = OpBitcast %uint %414
        %417 = OpIAdd %uint %415 %416
        %418 = OpBitcast %int %417
        %419 = OpCompositeExtract %half %vec3_f16 1
        %420 = OpFunctionCall %int %tint_f16_to_i32 %419
        %421 = OpBitcast %uint %418
        %422 = OpBitcast %uint %420
        %423 = OpIAdd %uint %421 %422
        %424 = OpBitcast %int %423
        %425 = OpCompositeExtract %float %vec4_f32 2
        %426 = OpFunctionCall %int %tint_f32_to_i32 %425
        %427 = OpBitcast %uint %424
        %428 = OpBitcast %uint %426
        %429 = OpIAdd %uint %427 %428
        %430 = OpBitcast %int %429
        %431 = OpCompositeExtract %int %vec4_i32 2
        %432 = OpBitcast %uint %430
        %433 = OpBitcast %uint %431
        %434 = OpIAdd %uint %432 %433
        %435 = OpBitcast %int %434
        %436 = OpCompositeExtract %uint %vec4_u32 2
        %437 = OpBitcast %int %436
        %438 = OpBitcast %uint %435
        %439 = OpBitcast %uint %437
        %440 = OpIAdd %uint %438 %439
        %441 = OpBitcast %int %440
        %442 = OpCompositeExtract %half %vec4_f16 2
        %443 = OpFunctionCall %int %tint_f16_to_i32 %442
        %444 = OpBitcast %uint %441
        %445 = OpBitcast %uint %443
        %446 = OpIAdd %uint %444 %445
        %447 = OpBitcast %int %446
        %448 = OpCompositeExtract %float %mat2x2_f32 0 0
        %449 = OpFunctionCall %int %tint_f32_to_i32 %448
        %450 = OpBitcast %uint %447
        %451 = OpBitcast %uint %449
        %452 = OpIAdd %uint %450 %451
        %453 = OpBitcast %int %452
        %454 = OpCompositeExtract %float %mat2x3_f32 0 0
        %455 = OpFunctionCall %int %tint_f32_to_i32 %454
        %456 = OpBitcast %uint %453
        %457 = OpBitcast %uint %455
        %458 = OpIAdd %uint %456 %457
        %459 = OpBitcast %int %458
        %460 = OpCompositeExtract %float %mat2x4_f32 0 0
        %461 = OpFunctionCall %int %tint_f32_to_i32 %460
        %462 = OpBitcast %uint %459
        %463 = OpBitcast %uint %461
        %464 = OpIAdd %uint %462 %463
        %465 = OpBitcast %int %464
        %466 = OpCompositeExtract %float %mat3x2_f32 0 0
        %467 = OpFunctionCall %int %tint_f32_to_i32 %466
        %468 = OpBitcast %uint %465
        %469 = OpBitcast %uint %467
        %470 = OpIAdd %uint %468 %469
        %471 = OpBitcast %int %470
        %472 = OpCompositeExtract %float %mat3x3_f32 0 0
        %473 = OpFunctionCall %int %tint_f32_to_i32 %472
        %474 = OpBitcast %uint %471
        %475 = OpBitcast %uint %473
        %476 = OpIAdd %uint %474 %475
        %477 = OpBitcast %int %476
        %478 = OpCompositeExtract %float %mat3x4_f32 0 0
        %479 = OpFunctionCall %int %tint_f32_to_i32 %478
        %480 = OpBitcast %uint %477
        %481 = OpBitcast %uint %479
        %482 = OpIAdd %uint %480 %481
        %483 = OpBitcast %int %482
        %484 = OpCompositeExtract %float %mat4x2_f32 0 0
        %485 = OpFunctionCall %int %tint_f32_to_i32 %484
        %486 = OpBitcast %uint %483
        %487 = OpBitcast %uint %485
        %488 = OpIAdd %uint %486 %487
        %489 = OpBitcast %int %488
        %490 = OpCompositeExtract %float %mat4x3_f32 0 0
        %491 = OpFunctionCall %int %tint_f32_to_i32 %490
        %492 = OpBitcast %uint %489
        %493 = OpBitcast %uint %491
        %494 = OpIAdd %uint %492 %493
        %495 = OpBitcast %int %494
        %496 = OpCompositeExtract %float %mat4x4_f32 0 0
        %497 = OpFunctionCall %int %tint_f32_to_i32 %496
        %498 = OpBitcast %uint %495
        %499 = OpBitcast %uint %497
        %500 = OpIAdd %uint %498 %499
        %501 = OpBitcast %int %500
        %502 = OpCompositeExtract %half %mat2x2_f16 0 0
        %503 = OpFunctionCall %int %tint_f16_to_i32 %502
        %504 = OpBitcast %uint %501
        %505 = OpBitcast %uint %503
        %506 = OpIAdd %uint %504 %505
        %507 = OpBitcast %int %506
        %508 = OpCompositeExtract %half %mat2x3_f16 0 0
        %509 = OpFunctionCall %int %tint_f16_to_i32 %508
        %510 = OpBitcast %uint %507
        %511 = OpBitcast %uint %509
        %512 = OpIAdd %uint %510 %511
        %513 = OpBitcast %int %512
        %514 = OpCompositeExtract %half %mat2x4_f16 0 0
        %515 = OpFunctionCall %int %tint_f16_to_i32 %514
        %516 = OpBitcast %uint %513
        %517 = OpBitcast %uint %515
        %518 = OpIAdd %uint %516 %517
        %519 = OpBitcast %int %518
        %520 = OpCompositeExtract %half %mat3x2_f16 0 0
        %521 = OpFunctionCall %int %tint_f16_to_i32 %520
        %522 = OpBitcast %uint %519
        %523 = OpBitcast %uint %521
        %524 = OpIAdd %uint %522 %523
        %525 = OpBitcast %int %524
        %526 = OpCompositeExtract %half %mat3x3_f16 0 0
        %527 = OpFunctionCall %int %tint_f16_to_i32 %526
        %528 = OpBitcast %uint %525
        %529 = OpBitcast %uint %527
        %530 = OpIAdd %uint %528 %529
        %531 = OpBitcast %int %530
        %532 = OpCompositeExtract %half %mat3x4_f16 0 0
        %533 = OpFunctionCall %int %tint_f16_to_i32 %532
        %534 = OpBitcast %uint %531
        %535 = OpBitcast %uint %533
        %536 = OpIAdd %uint %534 %535
        %537 = OpBitcast %int %536
        %538 = OpCompositeExtract %half %mat4x2_f16 0 0
        %539 = OpFunctionCall %int %tint_f16_to_i32 %538
        %540 = OpBitcast %uint %537
        %541 = OpBitcast %uint %539
        %542 = OpIAdd %uint %540 %541
        %543 = OpBitcast %int %542
        %544 = OpCompositeExtract %half %mat4x3_f16 0 0
        %545 = OpFunctionCall %int %tint_f16_to_i32 %544
        %546 = OpBitcast %uint %543
        %547 = OpBitcast %uint %545
        %548 = OpIAdd %uint %546 %547
        %549 = OpBitcast %int %548
        %550 = OpCompositeExtract %half %mat4x4_f16 0 0
        %551 = OpFunctionCall %int %tint_f16_to_i32 %550
        %552 = OpBitcast %uint %549
        %553 = OpBitcast %uint %551
        %554 = OpIAdd %uint %552 %553
        %555 = OpBitcast %int %554
        %556 = OpCompositeExtract %float %arr2_vec3_f32 0 0
        %557 = OpFunctionCall %int %tint_f32_to_i32 %556
        %558 = OpBitcast %uint %555
        %559 = OpBitcast %uint %557
        %560 = OpIAdd %uint %558 %559
        %561 = OpBitcast %int %560
        %562 = OpCompositeExtract %half %arr2_mat4x2_f16 0 0 0
        %563 = OpFunctionCall %int %tint_f16_to_i32 %562
        %564 = OpBitcast %uint %561
        %565 = OpBitcast %uint %563
        %566 = OpIAdd %uint %564 %565
        %567 = OpBitcast %int %566
        %568 = OpAccessChain %_ptr_StorageBuffer_int %8 %uint_0
               OpStore %568 %567 None
               OpReturn
               OpFunctionEnd
%tint_f32_to_i32 = OpFunction %int None %571
      %value = OpFunctionParameter %float
        %572 = OpLabel
        %573 = OpExtInst %float %20 NClamp %value %float_n2_14748365e_09 %float_2_14748352e_09
        %576 = OpConvertFToS %int %573
               OpReturnValue %576
               OpFunctionEnd
%tint_f16_to_i32 = OpFunction %int None %578
    %value_0 = OpFunctionParameter %half
        %579 = OpLabel
        %580 = OpExtInst %half %20 NClamp %value_0 %half_n0x1_ffcp_15 %half_0x1_ffcp_15
        %583 = OpConvertFToS %int %580
               OpReturnValue %583
               OpFunctionEnd
        %361 = OpFunction %_arr_mat4v2half_uint_2 None %585
%start_byte_offset = OpFunctionParameter %uint
        %586 = OpLabel
          %a = OpVariable %_ptr_Function__arr_mat4v2half_uint_2 Function
               OpStore %a %589
               OpBranch %590
        %590 = OpLabel
               OpBranch %593
        %593 = OpLabel
        %595 = OpPhi %uint %uint_0 %590 %596 %592
               OpLoopMerge %594 %592 None
               OpBranch %591
        %591 = OpLabel
        %598 = OpUGreaterThanEqual %bool %595 %uint_2
               OpSelectionMerge %599 None
               OpBranchConditional %598 %600 %599
        %600 = OpLabel
               OpBranch %594
        %599 = OpLabel
        %601 = OpIMul %uint %595 %uint_16
        %602 = OpIAdd %uint %start_byte_offset %601
        %603 = OpAccessChain %_ptr_Function_mat4v2half %a %595
        %605 = OpFunctionCall %mat4v2half %333 %602
               OpStore %603 %605 None
               OpBranch %592
        %592 = OpLabel
        %596 = OpIAdd %uint %595 %uint_1
               OpBranch %593
        %594 = OpLabel
        %597 = OpLoad %_arr_mat4v2half_uint_2 %a None
               OpReturnValue %597
               OpFunctionEnd
        %333 = OpFunction %mat4v2half None %607
%start_byte_offset_0 = OpFunctionParameter %uint
        %608 = OpLabel
        %609 = OpUDiv %uint %start_byte_offset_0 %uint_16
        %610 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %609
        %611 = OpBitwiseAnd %uint %start_byte_offset_0 %uint_15
        %612 = OpShiftRightLogical %uint %611 %uint_2
        %613 = OpLoad %v4uint %610 None
        %614 = OpVectorExtractDynamic %uint %613 %612
        %615 = OpBitcast %v2half %614
        %616 = OpIAdd %uint %uint_4 %start_byte_offset_0
        %617 = OpUDiv %uint %616 %uint_16
        %618 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %617
        %619 = OpBitwiseAnd %uint %616 %uint_15
        %620 = OpShiftRightLogical %uint %619 %uint_2
        %621 = OpLoad %v4uint %618 None
        %622 = OpVectorExtractDynamic %uint %621 %620
        %623 = OpBitcast %v2half %622
        %624 = OpIAdd %uint %uint_8 %start_byte_offset_0
        %625 = OpUDiv %uint %624 %uint_16
        %626 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %625
        %627 = OpBitwiseAnd %uint %624 %uint_15
        %628 = OpShiftRightLogical %uint %627 %uint_2
        %629 = OpLoad %v4uint %626 None
        %630 = OpVectorExtractDynamic %uint %629 %628
        %631 = OpBitcast %v2half %630
        %632 = OpIAdd %uint %uint_12 %start_byte_offset_0
        %633 = OpUDiv %uint %632 %uint_16
        %634 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %633
        %635 = OpBitwiseAnd %uint %632 %uint_15
        %636 = OpShiftRightLogical %uint %635 %uint_2
        %637 = OpLoad %v4uint %634 None
        %638 = OpVectorExtractDynamic %uint %637 %636
        %639 = OpBitcast %v2half %638
        %640 = OpCompositeConstruct %mat4v2half %615 %623 %631 %639
               OpReturnValue %640
               OpFunctionEnd
        %354 = OpFunction %_arr_v3float_uint_2 None %642
%start_byte_offset_1 = OpFunctionParameter %uint
        %643 = OpLabel
        %a_0 = OpVariable %_ptr_Function__arr_v3float_uint_2 Function
               OpStore %a_0 %646
               OpBranch %647
        %647 = OpLabel
               OpBranch %650
        %650 = OpLabel
        %652 = OpPhi %uint %uint_0 %647 %653 %649
               OpLoopMerge %651 %649 None
               OpBranch %648
        %648 = OpLabel
        %655 = OpUGreaterThanEqual %bool %652 %uint_2
               OpSelectionMerge %656 None
               OpBranchConditional %655 %657 %656
        %657 = OpLabel
               OpBranch %651
        %656 = OpLabel
        %658 = OpIMul %uint %652 %uint_16
        %659 = OpIAdd %uint %start_byte_offset_1 %658
        %660 = OpAccessChain %_ptr_Function_v3float %a_0 %652
        %662 = OpUDiv %uint %659 %uint_16
        %663 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %662
        %664 = OpLoad %v4uint %663 None
        %665 = OpVectorShuffle %v3uint %664 %664 0 1 2
        %666 = OpBitcast %v3float %665
               OpStore %660 %666 None
               OpBranch %649
        %649 = OpLabel
        %653 = OpIAdd %uint %652 %uint_1
               OpBranch %650
        %651 = OpLabel
        %654 = OpLoad %_arr_v3float_uint_2 %a_0 None
               OpReturnValue %654
               OpFunctionEnd
        %347 = OpFunction %mat4v4half None %668
%start_byte_offset_2 = OpFunctionParameter %uint
        %669 = OpLabel
        %670 = OpUDiv %uint %start_byte_offset_2 %uint_16
        %671 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %670
        %672 = OpBitwiseAnd %uint %start_byte_offset_2 %uint_15
        %673 = OpShiftRightLogical %uint %672 %uint_2
        %674 = OpLoad %v4uint %671 None
        %675 = OpVectorShuffle %v2uint %674 %674 2 3
        %676 = OpVectorShuffle %v2uint %674 %674 0 1
        %677 = OpIEqual %bool %673 %uint_2
        %678 = OpCompositeConstruct %v2bool %677 %677
        %679 = OpSelect %v2uint %678 %675 %676
        %680 = OpBitcast %v4half %679
        %681 = OpIAdd %uint %uint_8 %start_byte_offset_2
        %682 = OpUDiv %uint %681 %uint_16
        %683 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %682
        %684 = OpBitwiseAnd %uint %681 %uint_15
        %685 = OpShiftRightLogical %uint %684 %uint_2
        %686 = OpLoad %v4uint %683 None
        %687 = OpVectorShuffle %v2uint %686 %686 2 3
        %688 = OpVectorShuffle %v2uint %686 %686 0 1
        %689 = OpIEqual %bool %685 %uint_2
        %690 = OpCompositeConstruct %v2bool %689 %689
        %691 = OpSelect %v2uint %690 %687 %688
        %692 = OpBitcast %v4half %691
        %693 = OpIAdd %uint %uint_16 %start_byte_offset_2
        %694 = OpUDiv %uint %693 %uint_16
        %695 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %694
        %696 = OpBitwiseAnd %uint %693 %uint_15
        %697 = OpShiftRightLogical %uint %696 %uint_2
        %698 = OpLoad %v4uint %695 None
        %699 = OpVectorShuffle %v2uint %698 %698 2 3
        %700 = OpVectorShuffle %v2uint %698 %698 0 1
        %701 = OpIEqual %bool %697 %uint_2
        %702 = OpCompositeConstruct %v2bool %701 %701
        %703 = OpSelect %v2uint %702 %699 %700
        %704 = OpBitcast %v4half %703
        %705 = OpIAdd %uint %uint_24 %start_byte_offset_2
        %706 = OpUDiv %uint %705 %uint_16
        %707 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %706
        %708 = OpBitwiseAnd %uint %705 %uint_15
        %709 = OpShiftRightLogical %uint %708 %uint_2
        %710 = OpLoad %v4uint %707 None
        %711 = OpVectorShuffle %v2uint %710 %710 2 3
        %712 = OpVectorShuffle %v2uint %710 %710 0 1
        %713 = OpIEqual %bool %709 %uint_2
        %714 = OpCompositeConstruct %v2bool %713 %713
        %715 = OpSelect %v2uint %714 %711 %712
        %716 = OpBitcast %v4half %715
        %717 = OpCompositeConstruct %mat4v4half %680 %692 %704 %716
               OpReturnValue %717
               OpFunctionEnd
        %340 = OpFunction %mat4v3half None %719
%start_byte_offset_3 = OpFunctionParameter %uint
        %720 = OpLabel
        %721 = OpUDiv %uint %start_byte_offset_3 %uint_16
        %722 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %721
        %723 = OpBitwiseAnd %uint %start_byte_offset_3 %uint_15
        %724 = OpShiftRightLogical %uint %723 %uint_2
        %725 = OpLoad %v4uint %722 None
        %726 = OpVectorShuffle %v2uint %725 %725 2 3
        %727 = OpVectorShuffle %v2uint %725 %725 0 1
        %728 = OpIEqual %bool %724 %uint_2
        %729 = OpCompositeConstruct %v2bool %728 %728
        %730 = OpSelect %v2uint %729 %726 %727
        %731 = OpBitcast %v4half %730
        %732 = OpVectorShuffle %v3half %731 %731 0 1 2
        %733 = OpIAdd %uint %uint_8 %start_byte_offset_3
        %734 = OpUDiv %uint %733 %uint_16
        %735 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %734
        %736 = OpBitwiseAnd %uint %733 %uint_15
        %737 = OpShiftRightLogical %uint %736 %uint_2
        %738 = OpLoad %v4uint %735 None
        %739 = OpVectorShuffle %v2uint %738 %738 2 3
        %740 = OpVectorShuffle %v2uint %738 %738 0 1
        %741 = OpIEqual %bool %737 %uint_2
        %742 = OpCompositeConstruct %v2bool %741 %741
        %743 = OpSelect %v2uint %742 %739 %740
        %744 = OpBitcast %v4half %743
        %745 = OpVectorShuffle %v3half %744 %744 0 1 2
        %746 = OpIAdd %uint %uint_16 %start_byte_offset_3
        %747 = OpUDiv %uint %746 %uint_16
        %748 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %747
        %749 = OpBitwiseAnd %uint %746 %uint_15
        %750 = OpShiftRightLogical %uint %749 %uint_2
        %751 = OpLoad %v4uint %748 None
        %752 = OpVectorShuffle %v2uint %751 %751 2 3
        %753 = OpVectorShuffle %v2uint %751 %751 0 1
        %754 = OpIEqual %bool %750 %uint_2
        %755 = OpCompositeConstruct %v2bool %754 %754
        %756 = OpSelect %v2uint %755 %752 %753
        %757 = OpBitcast %v4half %756
        %758 = OpVectorShuffle %v3half %757 %757 0 1 2
        %759 = OpIAdd %uint %uint_24 %start_byte_offset_3
        %760 = OpUDiv %uint %759 %uint_16
        %761 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %760
        %762 = OpBitwiseAnd %uint %759 %uint_15
        %763 = OpShiftRightLogical %uint %762 %uint_2
        %764 = OpLoad %v4uint %761 None
        %765 = OpVectorShuffle %v2uint %764 %764 2 3
        %766 = OpVectorShuffle %v2uint %764 %764 0 1
        %767 = OpIEqual %bool %763 %uint_2
        %768 = OpCompositeConstruct %v2bool %767 %767
        %769 = OpSelect %v2uint %768 %765 %766
        %770 = OpBitcast %v4half %769
        %771 = OpVectorShuffle %v3half %770 %770 0 1 2
        %772 = OpCompositeConstruct %mat4v3half %732 %745 %758 %771
               OpReturnValue %772
               OpFunctionEnd
        %326 = OpFunction %mat3v4half None %774
%start_byte_offset_4 = OpFunctionParameter %uint
        %775 = OpLabel
        %776 = OpUDiv %uint %start_byte_offset_4 %uint_16
        %777 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %776
        %778 = OpBitwiseAnd %uint %start_byte_offset_4 %uint_15
        %779 = OpShiftRightLogical %uint %778 %uint_2
        %780 = OpLoad %v4uint %777 None
        %781 = OpVectorShuffle %v2uint %780 %780 2 3
        %782 = OpVectorShuffle %v2uint %780 %780 0 1
        %783 = OpIEqual %bool %779 %uint_2
        %784 = OpCompositeConstruct %v2bool %783 %783
        %785 = OpSelect %v2uint %784 %781 %782
        %786 = OpBitcast %v4half %785
        %787 = OpIAdd %uint %uint_8 %start_byte_offset_4
        %788 = OpUDiv %uint %787 %uint_16
        %789 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %788
        %790 = OpBitwiseAnd %uint %787 %uint_15
        %791 = OpShiftRightLogical %uint %790 %uint_2
        %792 = OpLoad %v4uint %789 None
        %793 = OpVectorShuffle %v2uint %792 %792 2 3
        %794 = OpVectorShuffle %v2uint %792 %792 0 1
        %795 = OpIEqual %bool %791 %uint_2
        %796 = OpCompositeConstruct %v2bool %795 %795
        %797 = OpSelect %v2uint %796 %793 %794
        %798 = OpBitcast %v4half %797
        %799 = OpIAdd %uint %uint_16 %start_byte_offset_4
        %800 = OpUDiv %uint %799 %uint_16
        %801 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %800
        %802 = OpBitwiseAnd %uint %799 %uint_15
        %803 = OpShiftRightLogical %uint %802 %uint_2
        %804 = OpLoad %v4uint %801 None
        %805 = OpVectorShuffle %v2uint %804 %804 2 3
        %806 = OpVectorShuffle %v2uint %804 %804 0 1
        %807 = OpIEqual %bool %803 %uint_2
        %808 = OpCompositeConstruct %v2bool %807 %807
        %809 = OpSelect %v2uint %808 %805 %806
        %810 = OpBitcast %v4half %809
        %811 = OpCompositeConstruct %mat3v4half %786 %798 %810
               OpReturnValue %811
               OpFunctionEnd
        %319 = OpFunction %mat3v3half None %813
%start_byte_offset_5 = OpFunctionParameter %uint
        %814 = OpLabel
        %815 = OpUDiv %uint %start_byte_offset_5 %uint_16
        %816 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %815
        %817 = OpBitwiseAnd %uint %start_byte_offset_5 %uint_15
        %818 = OpShiftRightLogical %uint %817 %uint_2
        %819 = OpLoad %v4uint %816 None
        %820 = OpVectorShuffle %v2uint %819 %819 2 3
        %821 = OpVectorShuffle %v2uint %819 %819 0 1
        %822 = OpIEqual %bool %818 %uint_2
        %823 = OpCompositeConstruct %v2bool %822 %822
        %824 = OpSelect %v2uint %823 %820 %821
        %825 = OpBitcast %v4half %824
        %826 = OpVectorShuffle %v3half %825 %825 0 1 2
        %827 = OpIAdd %uint %uint_8 %start_byte_offset_5
        %828 = OpUDiv %uint %827 %uint_16
        %829 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %828
        %830 = OpBitwiseAnd %uint %827 %uint_15
        %831 = OpShiftRightLogical %uint %830 %uint_2
        %832 = OpLoad %v4uint %829 None
        %833 = OpVectorShuffle %v2uint %832 %832 2 3
        %834 = OpVectorShuffle %v2uint %832 %832 0 1
        %835 = OpIEqual %bool %831 %uint_2
        %836 = OpCompositeConstruct %v2bool %835 %835
        %837 = OpSelect %v2uint %836 %833 %834
        %838 = OpBitcast %v4half %837
        %839 = OpVectorShuffle %v3half %838 %838 0 1 2
        %840 = OpIAdd %uint %uint_16 %start_byte_offset_5
        %841 = OpUDiv %uint %840 %uint_16
        %842 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %841
        %843 = OpBitwiseAnd %uint %840 %uint_15
        %844 = OpShiftRightLogical %uint %843 %uint_2
        %845 = OpLoad %v4uint %842 None
        %846 = OpVectorShuffle %v2uint %845 %845 2 3
        %847 = OpVectorShuffle %v2uint %845 %845 0 1
        %848 = OpIEqual %bool %844 %uint_2
        %849 = OpCompositeConstruct %v2bool %848 %848
        %850 = OpSelect %v2uint %849 %846 %847
        %851 = OpBitcast %v4half %850
        %852 = OpVectorShuffle %v3half %851 %851 0 1 2
        %853 = OpCompositeConstruct %mat3v3half %826 %839 %852
               OpReturnValue %853
               OpFunctionEnd
        %312 = OpFunction %mat3v2half None %855
%start_byte_offset_6 = OpFunctionParameter %uint
        %856 = OpLabel
        %857 = OpUDiv %uint %start_byte_offset_6 %uint_16
        %858 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %857
        %859 = OpBitwiseAnd %uint %start_byte_offset_6 %uint_15
        %860 = OpShiftRightLogical %uint %859 %uint_2
        %861 = OpLoad %v4uint %858 None
        %862 = OpVectorExtractDynamic %uint %861 %860
        %863 = OpBitcast %v2half %862
        %864 = OpIAdd %uint %uint_4 %start_byte_offset_6
        %865 = OpUDiv %uint %864 %uint_16
        %866 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %865
        %867 = OpBitwiseAnd %uint %864 %uint_15
        %868 = OpShiftRightLogical %uint %867 %uint_2
        %869 = OpLoad %v4uint %866 None
        %870 = OpVectorExtractDynamic %uint %869 %868
        %871 = OpBitcast %v2half %870
        %872 = OpIAdd %uint %uint_8 %start_byte_offset_6
        %873 = OpUDiv %uint %872 %uint_16
        %874 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %873
        %875 = OpBitwiseAnd %uint %872 %uint_15
        %876 = OpShiftRightLogical %uint %875 %uint_2
        %877 = OpLoad %v4uint %874 None
        %878 = OpVectorExtractDynamic %uint %877 %876
        %879 = OpBitcast %v2half %878
        %880 = OpCompositeConstruct %mat3v2half %863 %871 %879
               OpReturnValue %880
               OpFunctionEnd
        %305 = OpFunction %mat2v4half None %882
%start_byte_offset_7 = OpFunctionParameter %uint
        %883 = OpLabel
        %884 = OpUDiv %uint %start_byte_offset_7 %uint_16
        %885 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %884
        %886 = OpBitwiseAnd %uint %start_byte_offset_7 %uint_15
        %887 = OpShiftRightLogical %uint %886 %uint_2
        %888 = OpLoad %v4uint %885 None
        %889 = OpVectorShuffle %v2uint %888 %888 2 3
        %890 = OpVectorShuffle %v2uint %888 %888 0 1
        %891 = OpIEqual %bool %887 %uint_2
        %892 = OpCompositeConstruct %v2bool %891 %891
        %893 = OpSelect %v2uint %892 %889 %890
        %894 = OpBitcast %v4half %893
        %895 = OpIAdd %uint %uint_8 %start_byte_offset_7
        %896 = OpUDiv %uint %895 %uint_16
        %897 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %896
        %898 = OpBitwiseAnd %uint %895 %uint_15
        %899 = OpShiftRightLogical %uint %898 %uint_2
        %900 = OpLoad %v4uint %897 None
        %901 = OpVectorShuffle %v2uint %900 %900 2 3
        %902 = OpVectorShuffle %v2uint %900 %900 0 1
        %903 = OpIEqual %bool %899 %uint_2
        %904 = OpCompositeConstruct %v2bool %903 %903
        %905 = OpSelect %v2uint %904 %901 %902
        %906 = OpBitcast %v4half %905
        %907 = OpCompositeConstruct %mat2v4half %894 %906
               OpReturnValue %907
               OpFunctionEnd
        %298 = OpFunction %mat2v3half None %909
%start_byte_offset_8 = OpFunctionParameter %uint
        %910 = OpLabel
        %911 = OpUDiv %uint %start_byte_offset_8 %uint_16
        %912 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %911
        %913 = OpBitwiseAnd %uint %start_byte_offset_8 %uint_15
        %914 = OpShiftRightLogical %uint %913 %uint_2
        %915 = OpLoad %v4uint %912 None
        %916 = OpVectorShuffle %v2uint %915 %915 2 3
        %917 = OpVectorShuffle %v2uint %915 %915 0 1
        %918 = OpIEqual %bool %914 %uint_2
        %919 = OpCompositeConstruct %v2bool %918 %918
        %920 = OpSelect %v2uint %919 %916 %917
        %921 = OpBitcast %v4half %920
        %922 = OpVectorShuffle %v3half %921 %921 0 1 2
        %923 = OpIAdd %uint %uint_8 %start_byte_offset_8
        %924 = OpUDiv %uint %923 %uint_16
        %925 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %924
        %926 = OpBitwiseAnd %uint %923 %uint_15
        %927 = OpShiftRightLogical %uint %926 %uint_2
        %928 = OpLoad %v4uint %925 None
        %929 = OpVectorShuffle %v2uint %928 %928 2 3
        %930 = OpVectorShuffle %v2uint %928 %928 0 1
        %931 = OpIEqual %bool %927 %uint_2
        %932 = OpCompositeConstruct %v2bool %931 %931
        %933 = OpSelect %v2uint %932 %929 %930
        %934 = OpBitcast %v4half %933
        %935 = OpVectorShuffle %v3half %934 %934 0 1 2
        %936 = OpCompositeConstruct %mat2v3half %922 %935
               OpReturnValue %936
               OpFunctionEnd
        %291 = OpFunction %mat2v2half None %938
%start_byte_offset_9 = OpFunctionParameter %uint
        %939 = OpLabel
        %940 = OpUDiv %uint %start_byte_offset_9 %uint_16
        %941 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %940
        %942 = OpBitwiseAnd %uint %start_byte_offset_9 %uint_15
        %943 = OpShiftRightLogical %uint %942 %uint_2
        %944 = OpLoad %v4uint %941 None
        %945 = OpVectorExtractDynamic %uint %944 %943
        %946 = OpBitcast %v2half %945
        %947 = OpIAdd %uint %uint_4 %start_byte_offset_9
        %948 = OpUDiv %uint %947 %uint_16
        %949 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %948
        %950 = OpBitwiseAnd %uint %947 %uint_15
        %951 = OpShiftRightLogical %uint %950 %uint_2
        %952 = OpLoad %v4uint %949 None
        %953 = OpVectorExtractDynamic %uint %952 %951
        %954 = OpBitcast %v2half %953
        %955 = OpCompositeConstruct %mat2v2half %946 %954
               OpReturnValue %955
               OpFunctionEnd
        %284 = OpFunction %mat4v4float None %957
%start_byte_offset_10 = OpFunctionParameter %uint
        %958 = OpLabel
        %959 = OpUDiv %uint %start_byte_offset_10 %uint_16
        %960 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %959
        %961 = OpLoad %v4uint %960 None
        %962 = OpBitcast %v4float %961
        %963 = OpIAdd %uint %uint_16 %start_byte_offset_10
        %964 = OpUDiv %uint %963 %uint_16
        %965 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %964
        %966 = OpLoad %v4uint %965 None
        %967 = OpBitcast %v4float %966
        %968 = OpIAdd %uint %uint_32 %start_byte_offset_10
        %969 = OpUDiv %uint %968 %uint_16
        %970 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %969
        %971 = OpLoad %v4uint %970 None
        %972 = OpBitcast %v4float %971
        %973 = OpIAdd %uint %uint_48 %start_byte_offset_10
        %974 = OpUDiv %uint %973 %uint_16
        %975 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %974
        %976 = OpLoad %v4uint %975 None
        %977 = OpBitcast %v4float %976
        %978 = OpCompositeConstruct %mat4v4float %962 %967 %972 %977
               OpReturnValue %978
               OpFunctionEnd
        %277 = OpFunction %mat4v3float None %980
%start_byte_offset_11 = OpFunctionParameter %uint
        %981 = OpLabel
        %982 = OpUDiv %uint %start_byte_offset_11 %uint_16
        %983 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %982
        %984 = OpLoad %v4uint %983 None
        %985 = OpVectorShuffle %v3uint %984 %984 0 1 2
        %986 = OpBitcast %v3float %985
        %987 = OpIAdd %uint %uint_16 %start_byte_offset_11
        %988 = OpUDiv %uint %987 %uint_16
        %989 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %988
        %990 = OpLoad %v4uint %989 None
        %991 = OpVectorShuffle %v3uint %990 %990 0 1 2
        %992 = OpBitcast %v3float %991
        %993 = OpIAdd %uint %uint_32 %start_byte_offset_11
        %994 = OpUDiv %uint %993 %uint_16
        %995 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %994
        %996 = OpLoad %v4uint %995 None
        %997 = OpVectorShuffle %v3uint %996 %996 0 1 2
        %998 = OpBitcast %v3float %997
        %999 = OpIAdd %uint %uint_48 %start_byte_offset_11
       %1000 = OpUDiv %uint %999 %uint_16
       %1001 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1000
       %1002 = OpLoad %v4uint %1001 None
       %1003 = OpVectorShuffle %v3uint %1002 %1002 0 1 2
       %1004 = OpBitcast %v3float %1003
       %1005 = OpCompositeConstruct %mat4v3float %986 %992 %998 %1004
               OpReturnValue %1005
               OpFunctionEnd
        %270 = OpFunction %mat4v2float None %1007
%start_byte_offset_12 = OpFunctionParameter %uint
       %1008 = OpLabel
       %1009 = OpUDiv %uint %start_byte_offset_12 %uint_16
       %1010 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1009
       %1011 = OpBitwiseAnd %uint %start_byte_offset_12 %uint_15
       %1012 = OpShiftRightLogical %uint %1011 %uint_2
       %1013 = OpLoad %v4uint %1010 None
       %1014 = OpVectorShuffle %v2uint %1013 %1013 2 3
       %1015 = OpVectorShuffle %v2uint %1013 %1013 0 1
       %1016 = OpIEqual %bool %1012 %uint_2
       %1017 = OpCompositeConstruct %v2bool %1016 %1016
       %1018 = OpSelect %v2uint %1017 %1014 %1015
       %1019 = OpBitcast %v2float %1018
       %1020 = OpIAdd %uint %uint_8 %start_byte_offset_12
       %1021 = OpUDiv %uint %1020 %uint_16
       %1022 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1021
       %1023 = OpBitwiseAnd %uint %1020 %uint_15
       %1024 = OpShiftRightLogical %uint %1023 %uint_2
       %1025 = OpLoad %v4uint %1022 None
       %1026 = OpVectorShuffle %v2uint %1025 %1025 2 3
       %1027 = OpVectorShuffle %v2uint %1025 %1025 0 1
       %1028 = OpIEqual %bool %1024 %uint_2
       %1029 = OpCompositeConstruct %v2bool %1028 %1028
       %1030 = OpSelect %v2uint %1029 %1026 %1027
       %1031 = OpBitcast %v2float %1030
       %1032 = OpIAdd %uint %uint_16 %start_byte_offset_12
       %1033 = OpUDiv %uint %1032 %uint_16
       %1034 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1033
       %1035 = OpBitwiseAnd %uint %1032 %uint_15
       %1036 = OpShiftRightLogical %uint %1035 %uint_2
       %1037 = OpLoad %v4uint %1034 None
       %1038 = OpVectorShuffle %v2uint %1037 %1037 2 3
       %1039 = OpVectorShuffle %v2uint %1037 %1037 0 1
       %1040 = OpIEqual %bool %1036 %uint_2
       %1041 = OpCompositeConstruct %v2bool %1040 %1040
       %1042 = OpSelect %v2uint %1041 %1038 %1039
       %1043 = OpBitcast %v2float %1042
       %1044 = OpIAdd %uint %uint_24 %start_byte_offset_12
       %1045 = OpUDiv %uint %1044 %uint_16
       %1046 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1045
       %1047 = OpBitwiseAnd %uint %1044 %uint_15
       %1048 = OpShiftRightLogical %uint %1047 %uint_2
       %1049 = OpLoad %v4uint %1046 None
       %1050 = OpVectorShuffle %v2uint %1049 %1049 2 3
       %1051 = OpVectorShuffle %v2uint %1049 %1049 0 1
       %1052 = OpIEqual %bool %1048 %uint_2
       %1053 = OpCompositeConstruct %v2bool %1052 %1052
       %1054 = OpSelect %v2uint %1053 %1050 %1051
       %1055 = OpBitcast %v2float %1054
       %1056 = OpCompositeConstruct %mat4v2float %1019 %1031 %1043 %1055
               OpReturnValue %1056
               OpFunctionEnd
        %263 = OpFunction %mat3v4float None %1058
%start_byte_offset_13 = OpFunctionParameter %uint
       %1059 = OpLabel
       %1060 = OpUDiv %uint %start_byte_offset_13 %uint_16
       %1061 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1060
       %1062 = OpLoad %v4uint %1061 None
       %1063 = OpBitcast %v4float %1062
       %1064 = OpIAdd %uint %uint_16 %start_byte_offset_13
       %1065 = OpUDiv %uint %1064 %uint_16
       %1066 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1065
       %1067 = OpLoad %v4uint %1066 None
       %1068 = OpBitcast %v4float %1067
       %1069 = OpIAdd %uint %uint_32 %start_byte_offset_13
       %1070 = OpUDiv %uint %1069 %uint_16
       %1071 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1070
       %1072 = OpLoad %v4uint %1071 None
       %1073 = OpBitcast %v4float %1072
       %1074 = OpCompositeConstruct %mat3v4float %1063 %1068 %1073
               OpReturnValue %1074
               OpFunctionEnd
        %256 = OpFunction %mat3v3float None %1076
%start_byte_offset_14 = OpFunctionParameter %uint
       %1077 = OpLabel
       %1078 = OpUDiv %uint %start_byte_offset_14 %uint_16
       %1079 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1078
       %1080 = OpLoad %v4uint %1079 None
       %1081 = OpVectorShuffle %v3uint %1080 %1080 0 1 2
       %1082 = OpBitcast %v3float %1081
       %1083 = OpIAdd %uint %uint_16 %start_byte_offset_14
       %1084 = OpUDiv %uint %1083 %uint_16
       %1085 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1084
       %1086 = OpLoad %v4uint %1085 None
       %1087 = OpVectorShuffle %v3uint %1086 %1086 0 1 2
       %1088 = OpBitcast %v3float %1087
       %1089 = OpIAdd %uint %uint_32 %start_byte_offset_14
       %1090 = OpUDiv %uint %1089 %uint_16
       %1091 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1090
       %1092 = OpLoad %v4uint %1091 None
       %1093 = OpVectorShuffle %v3uint %1092 %1092 0 1 2
       %1094 = OpBitcast %v3float %1093
       %1095 = OpCompositeConstruct %mat3v3float %1082 %1088 %1094
               OpReturnValue %1095
               OpFunctionEnd
        %249 = OpFunction %mat3v2float None %1097
%start_byte_offset_15 = OpFunctionParameter %uint
       %1098 = OpLabel
       %1099 = OpUDiv %uint %start_byte_offset_15 %uint_16
       %1100 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1099
       %1101 = OpBitwiseAnd %uint %start_byte_offset_15 %uint_15
       %1102 = OpShiftRightLogical %uint %1101 %uint_2
       %1103 = OpLoad %v4uint %1100 None
       %1104 = OpVectorShuffle %v2uint %1103 %1103 2 3
       %1105 = OpVectorShuffle %v2uint %1103 %1103 0 1
       %1106 = OpIEqual %bool %1102 %uint_2
       %1107 = OpCompositeConstruct %v2bool %1106 %1106
       %1108 = OpSelect %v2uint %1107 %1104 %1105
       %1109 = OpBitcast %v2float %1108
       %1110 = OpIAdd %uint %uint_8 %start_byte_offset_15
       %1111 = OpUDiv %uint %1110 %uint_16
       %1112 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1111
       %1113 = OpBitwiseAnd %uint %1110 %uint_15
       %1114 = OpShiftRightLogical %uint %1113 %uint_2
       %1115 = OpLoad %v4uint %1112 None
       %1116 = OpVectorShuffle %v2uint %1115 %1115 2 3
       %1117 = OpVectorShuffle %v2uint %1115 %1115 0 1
       %1118 = OpIEqual %bool %1114 %uint_2
       %1119 = OpCompositeConstruct %v2bool %1118 %1118
       %1120 = OpSelect %v2uint %1119 %1116 %1117
       %1121 = OpBitcast %v2float %1120
       %1122 = OpIAdd %uint %uint_16 %start_byte_offset_15
       %1123 = OpUDiv %uint %1122 %uint_16
       %1124 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1123
       %1125 = OpBitwiseAnd %uint %1122 %uint_15
       %1126 = OpShiftRightLogical %uint %1125 %uint_2
       %1127 = OpLoad %v4uint %1124 None
       %1128 = OpVectorShuffle %v2uint %1127 %1127 2 3
       %1129 = OpVectorShuffle %v2uint %1127 %1127 0 1
       %1130 = OpIEqual %bool %1126 %uint_2
       %1131 = OpCompositeConstruct %v2bool %1130 %1130
       %1132 = OpSelect %v2uint %1131 %1128 %1129
       %1133 = OpBitcast %v2float %1132
       %1134 = OpCompositeConstruct %mat3v2float %1109 %1121 %1133
               OpReturnValue %1134
               OpFunctionEnd
        %242 = OpFunction %mat2v4float None %1136
%start_byte_offset_16 = OpFunctionParameter %uint
       %1137 = OpLabel
       %1138 = OpUDiv %uint %start_byte_offset_16 %uint_16
       %1139 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1138
       %1140 = OpLoad %v4uint %1139 None
       %1141 = OpBitcast %v4float %1140
       %1142 = OpIAdd %uint %uint_16 %start_byte_offset_16
       %1143 = OpUDiv %uint %1142 %uint_16
       %1144 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1143
       %1145 = OpLoad %v4uint %1144 None
       %1146 = OpBitcast %v4float %1145
       %1147 = OpCompositeConstruct %mat2v4float %1141 %1146
               OpReturnValue %1147
               OpFunctionEnd
        %235 = OpFunction %mat2v3float None %1149
%start_byte_offset_17 = OpFunctionParameter %uint
       %1150 = OpLabel
       %1151 = OpUDiv %uint %start_byte_offset_17 %uint_16
       %1152 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1151
       %1153 = OpLoad %v4uint %1152 None
       %1154 = OpVectorShuffle %v3uint %1153 %1153 0 1 2
       %1155 = OpBitcast %v3float %1154
       %1156 = OpIAdd %uint %uint_16 %start_byte_offset_17
       %1157 = OpUDiv %uint %1156 %uint_16
       %1158 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1157
       %1159 = OpLoad %v4uint %1158 None
       %1160 = OpVectorShuffle %v3uint %1159 %1159 0 1 2
       %1161 = OpBitcast %v3float %1160
       %1162 = OpCompositeConstruct %mat2v3float %1155 %1161
               OpReturnValue %1162
               OpFunctionEnd
        %228 = OpFunction %mat2v2float None %1164
%start_byte_offset_18 = OpFunctionParameter %uint
       %1165 = OpLabel
       %1166 = OpUDiv %uint %start_byte_offset_18 %uint_16
       %1167 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1166
       %1168 = OpBitwiseAnd %uint %start_byte_offset_18 %uint_15
       %1169 = OpShiftRightLogical %uint %1168 %uint_2
       %1170 = OpLoad %v4uint %1167 None
       %1171 = OpVectorShuffle %v2uint %1170 %1170 2 3
       %1172 = OpVectorShuffle %v2uint %1170 %1170 0 1
       %1173 = OpIEqual %bool %1169 %uint_2
       %1174 = OpCompositeConstruct %v2bool %1173 %1173
       %1175 = OpSelect %v2uint %1174 %1171 %1172
       %1176 = OpBitcast %v2float %1175
       %1177 = OpIAdd %uint %uint_8 %start_byte_offset_18
       %1178 = OpUDiv %uint %1177 %uint_16
       %1179 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %1178
       %1180 = OpBitwiseAnd %uint %1177 %uint_15
       %1181 = OpShiftRightLogical %uint %1180 %uint_2
       %1182 = OpLoad %v4uint %1179 None
       %1183 = OpVectorShuffle %v2uint %1182 %1182 2 3
       %1184 = OpVectorShuffle %v2uint %1182 %1182 0 1
       %1185 = OpIEqual %bool %1181 %uint_2
       %1186 = OpCompositeConstruct %v2bool %1185 %1185
       %1187 = OpSelect %v2uint %1186 %1183 %1184
       %1188 = OpBitcast %v2float %1187
       %1189 = OpCompositeConstruct %mat2v2float %1176 %1188
               OpReturnValue %1189
               OpFunctionEnd
       %main = OpFunction %void None %1191
       %1192 = OpLabel
       %1193 = OpLoad %uint %main_local_invocation_index_Input None
       %1194 = OpFunctionCall %void %main_inner %1193
               OpReturn
               OpFunctionEnd
