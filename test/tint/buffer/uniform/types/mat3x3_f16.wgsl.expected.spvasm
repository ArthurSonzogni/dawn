; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 84
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %main "main"
               OpName %x "x"
               OpName %tint_store_and_preserve_padding "tint_store_and_preserve_padding"
               OpName %value_param "value_param"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_2 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpMemberDecorate %s_block 0 ColMajor
               OpMemberDecorate %s_block 0 MatrixStride 8
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_2 = OpConstant %uint 2
%_arr_v4uint_uint_2 = OpTypeArray %v4uint %uint_2
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_2
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat3v3half = OpTypeMatrix %v3half 3
    %s_block = OpTypeStruct %mat3v3half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
         %24 = OpTypeFunction %void %mat3v3half
%_ptr_StorageBuffer_v3half = OpTypePointer StorageBuffer %v3half
     %uint_1 = OpConstant %uint 1
         %35 = OpTypeFunction %mat3v3half %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_4 = OpConstant %uint 4
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %v4half = OpTypeVector %half 4
     %uint_8 = OpConstant %uint 8
       %main = OpFunction %void None %16
         %17 = OpLabel
          %x = OpFunctionCall %mat3v3half %19 %uint_0
         %21 = OpFunctionCall %void %tint_store_and_preserve_padding %x
               OpReturn
               OpFunctionEnd
%tint_store_and_preserve_padding = OpFunction %void None %24
%value_param = OpFunctionParameter %mat3v3half
         %25 = OpLabel
         %26 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_0
         %28 = OpCompositeExtract %v3half %value_param 0
               OpStore %26 %28 None
         %29 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_1
         %31 = OpCompositeExtract %v3half %value_param 1
               OpStore %29 %31 None
         %32 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_2
         %33 = OpCompositeExtract %v3half %value_param 2
               OpStore %32 %33 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat3v3half None %35
%start_byte_offset = OpFunctionParameter %uint
         %36 = OpLabel
         %37 = OpUDiv %uint %start_byte_offset %uint_16
         %39 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %37
         %41 = OpUMod %uint %start_byte_offset %uint_16
         %42 = OpUDiv %uint %41 %uint_4
         %44 = OpLoad %v4uint %39 None
         %45 = OpVectorShuffle %v2uint %44 %44 2 3
         %47 = OpVectorShuffle %v2uint %44 %44 0 1
         %48 = OpIEqual %bool %42 %uint_2
         %51 = OpCompositeConstruct %v2bool %48 %48
         %52 = OpSelect %v2uint %51 %45 %47
         %54 = OpBitcast %v4half %52
         %55 = OpVectorShuffle %v3half %54 %54 0 1 2
         %56 = OpIAdd %uint %uint_8 %start_byte_offset
         %58 = OpUDiv %uint %56 %uint_16
         %59 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %58
         %60 = OpUMod %uint %56 %uint_16
         %61 = OpUDiv %uint %60 %uint_4
         %62 = OpLoad %v4uint %59 None
         %63 = OpVectorShuffle %v2uint %62 %62 2 3
         %64 = OpVectorShuffle %v2uint %62 %62 0 1
         %65 = OpIEqual %bool %61 %uint_2
         %66 = OpCompositeConstruct %v2bool %65 %65
         %67 = OpSelect %v2uint %66 %63 %64
         %68 = OpBitcast %v4half %67
         %69 = OpVectorShuffle %v3half %68 %68 0 1 2
         %70 = OpIAdd %uint %uint_16 %start_byte_offset
         %71 = OpUDiv %uint %70 %uint_16
         %72 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %71
         %73 = OpUMod %uint %70 %uint_16
         %74 = OpUDiv %uint %73 %uint_4
         %75 = OpLoad %v4uint %72 None
         %76 = OpVectorShuffle %v2uint %75 %75 2 3
         %77 = OpVectorShuffle %v2uint %75 %75 0 1
         %78 = OpIEqual %bool %74 %uint_2
         %79 = OpCompositeConstruct %v2bool %78 %78
         %80 = OpSelect %v2uint %79 %76 %77
         %81 = OpBitcast %v4half %80
         %82 = OpVectorShuffle %v3half %81 %81 0 1 2
         %83 = OpCompositeConstruct %mat3v3half %55 %69 %82
               OpReturnValue %83
               OpFunctionEnd
