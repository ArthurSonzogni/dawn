; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 101
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %main "main"
               OpName %x "x"
               OpName %tint_store_and_preserve_padding "tint_store_and_preserve_padding"
               OpName %value_param "value_param"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_2 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpMemberDecorate %s_block 0 ColMajor
               OpMemberDecorate %s_block 0 MatrixStride 8
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_2 = OpConstant %uint 2
%_arr_v4uint_uint_2 = OpTypeArray %v4uint %uint_2
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_2
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat4v3half = OpTypeMatrix %v3half 4
    %s_block = OpTypeStruct %mat4v3half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
         %24 = OpTypeFunction %void %mat4v3half
%_ptr_StorageBuffer_v3half = OpTypePointer StorageBuffer %v3half
     %uint_1 = OpConstant %uint 1
     %uint_3 = OpConstant %uint 3
         %38 = OpTypeFunction %mat4v3half %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %v4half = OpTypeVector %half 4
     %uint_8 = OpConstant %uint 8
    %uint_24 = OpConstant %uint 24
       %main = OpFunction %void None %16
         %17 = OpLabel
          %x = OpFunctionCall %mat4v3half %19 %uint_0
         %21 = OpFunctionCall %void %tint_store_and_preserve_padding %x
               OpReturn
               OpFunctionEnd
%tint_store_and_preserve_padding = OpFunction %void None %24
%value_param = OpFunctionParameter %mat4v3half
         %25 = OpLabel
         %26 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_0
         %28 = OpCompositeExtract %v3half %value_param 0
               OpStore %26 %28 None
         %29 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_1
         %31 = OpCompositeExtract %v3half %value_param 1
               OpStore %29 %31 None
         %32 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_2
         %33 = OpCompositeExtract %v3half %value_param 2
               OpStore %32 %33 None
         %34 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_3
         %36 = OpCompositeExtract %v3half %value_param 3
               OpStore %34 %36 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat4v3half None %38
%start_byte_offset = OpFunctionParameter %uint
         %39 = OpLabel
         %40 = OpUDiv %uint %start_byte_offset %uint_16
         %42 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %40
         %44 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %46 = OpShiftRightLogical %uint %44 %uint_2
         %47 = OpLoad %v4uint %42 None
         %48 = OpVectorShuffle %v2uint %47 %47 2 3
         %50 = OpVectorShuffle %v2uint %47 %47 0 1
         %51 = OpIEqual %bool %46 %uint_2
         %54 = OpCompositeConstruct %v2bool %51 %51
         %55 = OpSelect %v2uint %54 %48 %50
         %57 = OpBitcast %v4half %55
         %58 = OpVectorShuffle %v3half %57 %57 0 1 2
         %59 = OpIAdd %uint %uint_8 %start_byte_offset
         %61 = OpUDiv %uint %59 %uint_16
         %62 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %61
         %63 = OpBitwiseAnd %uint %59 %uint_15
         %64 = OpShiftRightLogical %uint %63 %uint_2
         %65 = OpLoad %v4uint %62 None
         %66 = OpVectorShuffle %v2uint %65 %65 2 3
         %67 = OpVectorShuffle %v2uint %65 %65 0 1
         %68 = OpIEqual %bool %64 %uint_2
         %69 = OpCompositeConstruct %v2bool %68 %68
         %70 = OpSelect %v2uint %69 %66 %67
         %71 = OpBitcast %v4half %70
         %72 = OpVectorShuffle %v3half %71 %71 0 1 2
         %73 = OpIAdd %uint %uint_16 %start_byte_offset
         %74 = OpUDiv %uint %73 %uint_16
         %75 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %74
         %76 = OpBitwiseAnd %uint %73 %uint_15
         %77 = OpShiftRightLogical %uint %76 %uint_2
         %78 = OpLoad %v4uint %75 None
         %79 = OpVectorShuffle %v2uint %78 %78 2 3
         %80 = OpVectorShuffle %v2uint %78 %78 0 1
         %81 = OpIEqual %bool %77 %uint_2
         %82 = OpCompositeConstruct %v2bool %81 %81
         %83 = OpSelect %v2uint %82 %79 %80
         %84 = OpBitcast %v4half %83
         %85 = OpVectorShuffle %v3half %84 %84 0 1 2
         %86 = OpIAdd %uint %uint_24 %start_byte_offset
         %88 = OpUDiv %uint %86 %uint_16
         %89 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %88
         %90 = OpBitwiseAnd %uint %86 %uint_15
         %91 = OpShiftRightLogical %uint %90 %uint_2
         %92 = OpLoad %v4uint %89 None
         %93 = OpVectorShuffle %v2uint %92 %92 2 3
         %94 = OpVectorShuffle %v2uint %92 %92 0 1
         %95 = OpIEqual %bool %91 %uint_2
         %96 = OpCompositeConstruct %v2bool %95 %95
         %97 = OpSelect %v2uint %96 %93 %94
         %98 = OpBitcast %v4half %97
         %99 = OpVectorShuffle %v3half %98 %98 0 1 2
        %100 = OpCompositeConstruct %mat4v3half %58 %72 %85 %99
               OpReturnValue %100
               OpFunctionEnd
