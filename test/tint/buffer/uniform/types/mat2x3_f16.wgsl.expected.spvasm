; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 69
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability UniformAndStorageBuffer16BitAccess
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %main "main"
               OpName %x "x"
               OpName %tint_store_and_preserve_padding "tint_store_and_preserve_padding"
               OpName %value_param "value_param"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_1 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpMemberDecorate %s_block 0 ColMajor
               OpMemberDecorate %s_block 0 MatrixStride 8
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_1 = OpConstant %uint 1
%_arr_v4uint_uint_1 = OpTypeArray %v4uint %uint_1
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_1
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v3half = OpTypeVector %half 3
 %mat2v3half = OpTypeMatrix %v3half 2
    %s_block = OpTypeStruct %mat2v3half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
         %24 = OpTypeFunction %void %mat2v3half
%_ptr_StorageBuffer_v3half = OpTypePointer StorageBuffer %v3half
         %32 = OpTypeFunction %mat2v3half %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
     %uint_4 = OpConstant %uint 4
     %v2uint = OpTypeVector %uint 2
     %uint_2 = OpConstant %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %v4half = OpTypeVector %half 4
     %uint_8 = OpConstant %uint 8
       %main = OpFunction %void None %16
         %17 = OpLabel
          %x = OpFunctionCall %mat2v3half %19 %uint_0
         %21 = OpFunctionCall %void %tint_store_and_preserve_padding %x
               OpReturn
               OpFunctionEnd
%tint_store_and_preserve_padding = OpFunction %void None %24
%value_param = OpFunctionParameter %mat2v3half
         %25 = OpLabel
         %26 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_0
         %28 = OpCompositeExtract %v3half %value_param 0
               OpStore %26 %28 None
         %29 = OpAccessChain %_ptr_StorageBuffer_v3half %8 %uint_0 %uint_1
         %30 = OpCompositeExtract %v3half %value_param 1
               OpStore %29 %30 None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat2v3half None %32
%start_byte_offset = OpFunctionParameter %uint
         %33 = OpLabel
         %34 = OpUDiv %uint %start_byte_offset %uint_16
         %36 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %34
         %38 = OpUMod %uint %start_byte_offset %uint_16
         %39 = OpUDiv %uint %38 %uint_4
         %41 = OpLoad %v4uint %36 None
         %42 = OpVectorShuffle %v2uint %41 %41 2 3
         %44 = OpVectorShuffle %v2uint %41 %41 0 1
         %45 = OpIEqual %bool %39 %uint_2
         %49 = OpCompositeConstruct %v2bool %45 %45
         %50 = OpSelect %v2uint %49 %42 %44
         %52 = OpBitcast %v4half %50
         %53 = OpVectorShuffle %v3half %52 %52 0 1 2
         %54 = OpIAdd %uint %uint_8 %start_byte_offset
         %56 = OpUDiv %uint %54 %uint_16
         %57 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %56
         %58 = OpUMod %uint %54 %uint_16
         %59 = OpUDiv %uint %58 %uint_4
         %60 = OpLoad %v4uint %57 None
         %61 = OpVectorShuffle %v2uint %60 %60 2 3
         %62 = OpVectorShuffle %v2uint %60 %60 0 1
         %63 = OpIEqual %bool %59 %uint_2
         %64 = OpCompositeConstruct %v2bool %63 %63
         %65 = OpSelect %v2uint %64 %61 %62
         %66 = OpBitcast %v4half %65
         %67 = OpVectorShuffle %v3half %66 %66 0 1 2
         %68 = OpCompositeConstruct %mat2v3half %53 %67
               OpReturnValue %68
               OpFunctionEnd
