; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 82
; Schema: 0
               OpCapability Shader
               OpCapability Float16
               OpCapability StorageBuffer16BitAccess
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main"
               OpExecutionMode %main LocalSize 1 1 1
               OpMemberName %u_block_tint_explicit_layout 0 "inner"
               OpName %u_block_tint_explicit_layout "u_block_tint_explicit_layout"
               OpMemberName %s_block 0 "inner"
               OpName %s_block "s_block"
               OpName %main "main"
               OpName %x "x"
               OpName %start_byte_offset "start_byte_offset"
               OpDecorate %_arr_v4uint_uint_2 ArrayStride 16
               OpMemberDecorate %u_block_tint_explicit_layout 0 Offset 0
               OpDecorate %u_block_tint_explicit_layout Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 NonWritable
               OpMemberDecorate %s_block 0 Offset 0
               OpMemberDecorate %s_block 0 ColMajor
               OpMemberDecorate %s_block 0 MatrixStride 8
               OpDecorate %s_block Block
               OpDecorate %8 DescriptorSet 0
               OpDecorate %8 Binding 1
               OpDecorate %8 Coherent
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
     %uint_2 = OpConstant %uint 2
%_arr_v4uint_uint_2 = OpTypeArray %v4uint %uint_2
%u_block_tint_explicit_layout = OpTypeStruct %_arr_v4uint_uint_2
%_ptr_Uniform_u_block_tint_explicit_layout = OpTypePointer Uniform %u_block_tint_explicit_layout
          %1 = OpVariable %_ptr_Uniform_u_block_tint_explicit_layout Uniform
       %half = OpTypeFloat 16
     %v4half = OpTypeVector %half 4
 %mat4v4half = OpTypeMatrix %v4half 4
    %s_block = OpTypeStruct %mat4v4half
%_ptr_StorageBuffer_s_block = OpTypePointer StorageBuffer %s_block
          %8 = OpVariable %_ptr_StorageBuffer_s_block StorageBuffer
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
     %uint_0 = OpConstant %uint 0
%_ptr_StorageBuffer_mat4v4half = OpTypePointer StorageBuffer %mat4v4half
         %24 = OpTypeFunction %mat4v4half %uint
    %uint_16 = OpConstant %uint 16
%_ptr_Uniform_v4uint = OpTypePointer Uniform %v4uint
    %uint_15 = OpConstant %uint 15
     %v2uint = OpTypeVector %uint 2
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
     %uint_8 = OpConstant %uint 8
    %uint_24 = OpConstant %uint 24
       %main = OpFunction %void None %16
         %17 = OpLabel
          %x = OpFunctionCall %mat4v4half %19 %uint_0
         %21 = OpAccessChain %_ptr_StorageBuffer_mat4v4half %8 %uint_0
               OpStore %21 %x None
               OpReturn
               OpFunctionEnd
         %19 = OpFunction %mat4v4half None %24
%start_byte_offset = OpFunctionParameter %uint
         %25 = OpLabel
         %26 = OpUDiv %uint %start_byte_offset %uint_16
         %28 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %26
         %30 = OpBitwiseAnd %uint %start_byte_offset %uint_15
         %32 = OpShiftRightLogical %uint %30 %uint_2
         %33 = OpLoad %v4uint %28 None
         %34 = OpVectorShuffle %v2uint %33 %33 2 3
         %36 = OpVectorShuffle %v2uint %33 %33 0 1
         %37 = OpIEqual %bool %32 %uint_2
         %40 = OpCompositeConstruct %v2bool %37 %37
         %41 = OpSelect %v2uint %40 %34 %36
         %42 = OpBitcast %v4half %41
         %43 = OpIAdd %uint %uint_8 %start_byte_offset
         %45 = OpUDiv %uint %43 %uint_16
         %46 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %45
         %47 = OpBitwiseAnd %uint %43 %uint_15
         %48 = OpShiftRightLogical %uint %47 %uint_2
         %49 = OpLoad %v4uint %46 None
         %50 = OpVectorShuffle %v2uint %49 %49 2 3
         %51 = OpVectorShuffle %v2uint %49 %49 0 1
         %52 = OpIEqual %bool %48 %uint_2
         %53 = OpCompositeConstruct %v2bool %52 %52
         %54 = OpSelect %v2uint %53 %50 %51
         %55 = OpBitcast %v4half %54
         %56 = OpIAdd %uint %uint_16 %start_byte_offset
         %57 = OpUDiv %uint %56 %uint_16
         %58 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %57
         %59 = OpBitwiseAnd %uint %56 %uint_15
         %60 = OpShiftRightLogical %uint %59 %uint_2
         %61 = OpLoad %v4uint %58 None
         %62 = OpVectorShuffle %v2uint %61 %61 2 3
         %63 = OpVectorShuffle %v2uint %61 %61 0 1
         %64 = OpIEqual %bool %60 %uint_2
         %65 = OpCompositeConstruct %v2bool %64 %64
         %66 = OpSelect %v2uint %65 %62 %63
         %67 = OpBitcast %v4half %66
         %68 = OpIAdd %uint %uint_24 %start_byte_offset
         %70 = OpUDiv %uint %68 %uint_16
         %71 = OpAccessChain %_ptr_Uniform_v4uint %1 %uint_0 %70
         %72 = OpBitwiseAnd %uint %68 %uint_15
         %73 = OpShiftRightLogical %uint %72 %uint_2
         %74 = OpLoad %v4uint %71 None
         %75 = OpVectorShuffle %v2uint %74 %74 2 3
         %76 = OpVectorShuffle %v2uint %74 %74 0 1
         %77 = OpIEqual %bool %73 %uint_2
         %78 = OpCompositeConstruct %v2bool %77 %77
         %79 = OpSelect %v2uint %78 %75 %76
         %80 = OpBitcast %v4half %79
         %81 = OpCompositeConstruct %mat4v4half %42 %55 %67 %80
               OpReturnValue %81
               OpFunctionEnd
